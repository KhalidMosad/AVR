
UltraSonic_Interface.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000031aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000120  00800060  000031aa  0000323e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000013  00800180  00800180  0000335e  2**0
                  ALLOC
  3 .stab         00001e18  00000000  00000000  00003360  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d16  00000000  00000000  00005178  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00005e8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f0  00000000  00000000  0000602e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240c  00000000  00000000  0000621e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001377  00000000  00000000  0000862a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d8  00000000  00000000  000099a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  0000ab7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f3  00000000  00000000  0000ad3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000009ce  00000000  00000000  0000b02f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000b9fd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c2 12 	jmp	0x2584	; 0x2584 <__vector_6>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 a0 13 	jmp	0x2740	; 0x2740 <__vector_9>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__floatsisf+0xa>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__CCP__+0x8>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__mulsf3+0x162>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__SREG__+0x31>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z+
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__SREG__+0x75>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <_fpadd_parts+0x1e8>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__SREG__+0xbd>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <__fixunssfsi+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ea ea       	ldi	r30, 0xAA	; 170
     162:	f1 e3       	ldi	r31, 0x31	; 49
     164:	02 c0       	rjmp	.+4      	; 0x16a <.do_copy_data_start>

00000166 <.do_copy_data_loop>:
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0

0000016a <.do_copy_data_start>:
     16a:	a0 38       	cpi	r26, 0x80	; 128
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <.do_copy_data_loop>

00000170 <__do_clear_bss>:
     170:	11 e0       	ldi	r17, 0x01	; 1
     172:	a0 e8       	ldi	r26, 0x80	; 128
     174:	b1 e0       	ldi	r27, 0x01	; 1
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a3 39       	cpi	r26, 0x93	; 147
     17c:	b1 07       	cpc	r27, r17
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 bd 13 	call	0x277a	; 0x277a <main>
     184:	0c 94 d3 18 	jmp	0x31a6	; 0x31a6 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <__fixunssfsi>:
     18c:	ef 92       	push	r14
     18e:	ff 92       	push	r15
     190:	0f 93       	push	r16
     192:	1f 93       	push	r17
     194:	7b 01       	movw	r14, r22
     196:	8c 01       	movw	r16, r24
     198:	20 e0       	ldi	r18, 0x00	; 0
     19a:	30 e0       	ldi	r19, 0x00	; 0
     19c:	40 e0       	ldi	r20, 0x00	; 0
     19e:	5f e4       	ldi	r21, 0x4F	; 79
     1a0:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__gesf2>
     1a4:	88 23       	and	r24, r24
     1a6:	8c f0       	brlt	.+34     	; 0x1ca <__fixunssfsi+0x3e>
     1a8:	c8 01       	movw	r24, r16
     1aa:	b7 01       	movw	r22, r14
     1ac:	20 e0       	ldi	r18, 0x00	; 0
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	40 e0       	ldi	r20, 0x00	; 0
     1b2:	5f e4       	ldi	r21, 0x4F	; 79
     1b4:	0e 94 3e 02 	call	0x47c	; 0x47c <__subsf3>
     1b8:	0e 94 30 05 	call	0xa60	; 0xa60 <__fixsfsi>
     1bc:	9b 01       	movw	r18, r22
     1be:	ac 01       	movw	r20, r24
     1c0:	20 50       	subi	r18, 0x00	; 0
     1c2:	30 40       	sbci	r19, 0x00	; 0
     1c4:	40 40       	sbci	r20, 0x00	; 0
     1c6:	50 48       	sbci	r21, 0x80	; 128
     1c8:	06 c0       	rjmp	.+12     	; 0x1d6 <__fixunssfsi+0x4a>
     1ca:	c8 01       	movw	r24, r16
     1cc:	b7 01       	movw	r22, r14
     1ce:	0e 94 30 05 	call	0xa60	; 0xa60 <__fixsfsi>
     1d2:	9b 01       	movw	r18, r22
     1d4:	ac 01       	movw	r20, r24
     1d6:	b9 01       	movw	r22, r18
     1d8:	ca 01       	movw	r24, r20
     1da:	1f 91       	pop	r17
     1dc:	0f 91       	pop	r16
     1de:	ff 90       	pop	r15
     1e0:	ef 90       	pop	r14
     1e2:	08 95       	ret

000001e4 <_fpadd_parts>:
     1e4:	a0 e0       	ldi	r26, 0x00	; 0
     1e6:	b0 e0       	ldi	r27, 0x00	; 0
     1e8:	e8 ef       	ldi	r30, 0xF8	; 248
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	0c 94 2f 16 	jmp	0x2c5e	; 0x2c5e <__prologue_saves__>
     1f0:	dc 01       	movw	r26, r24
     1f2:	2b 01       	movw	r4, r22
     1f4:	fa 01       	movw	r30, r20
     1f6:	9c 91       	ld	r25, X
     1f8:	92 30       	cpi	r25, 0x02	; 2
     1fa:	08 f4       	brcc	.+2      	; 0x1fe <_fpadd_parts+0x1a>
     1fc:	39 c1       	rjmp	.+626    	; 0x470 <_fpadd_parts+0x28c>
     1fe:	eb 01       	movw	r28, r22
     200:	88 81       	ld	r24, Y
     202:	82 30       	cpi	r24, 0x02	; 2
     204:	08 f4       	brcc	.+2      	; 0x208 <_fpadd_parts+0x24>
     206:	33 c1       	rjmp	.+614    	; 0x46e <_fpadd_parts+0x28a>
     208:	94 30       	cpi	r25, 0x04	; 4
     20a:	69 f4       	brne	.+26     	; 0x226 <_fpadd_parts+0x42>
     20c:	84 30       	cpi	r24, 0x04	; 4
     20e:	09 f0       	breq	.+2      	; 0x212 <_fpadd_parts+0x2e>
     210:	2f c1       	rjmp	.+606    	; 0x470 <_fpadd_parts+0x28c>
     212:	11 96       	adiw	r26, 0x01	; 1
     214:	9c 91       	ld	r25, X
     216:	11 97       	sbiw	r26, 0x01	; 1
     218:	89 81       	ldd	r24, Y+1	; 0x01
     21a:	98 17       	cp	r25, r24
     21c:	09 f4       	brne	.+2      	; 0x220 <_fpadd_parts+0x3c>
     21e:	28 c1       	rjmp	.+592    	; 0x470 <_fpadd_parts+0x28c>
     220:	a8 e7       	ldi	r26, 0x78	; 120
     222:	b0 e0       	ldi	r27, 0x00	; 0
     224:	25 c1       	rjmp	.+586    	; 0x470 <_fpadd_parts+0x28c>
     226:	84 30       	cpi	r24, 0x04	; 4
     228:	09 f4       	brne	.+2      	; 0x22c <_fpadd_parts+0x48>
     22a:	21 c1       	rjmp	.+578    	; 0x46e <_fpadd_parts+0x28a>
     22c:	82 30       	cpi	r24, 0x02	; 2
     22e:	a9 f4       	brne	.+42     	; 0x25a <_fpadd_parts+0x76>
     230:	92 30       	cpi	r25, 0x02	; 2
     232:	09 f0       	breq	.+2      	; 0x236 <_fpadd_parts+0x52>
     234:	1d c1       	rjmp	.+570    	; 0x470 <_fpadd_parts+0x28c>
     236:	9a 01       	movw	r18, r20
     238:	ad 01       	movw	r20, r26
     23a:	88 e0       	ldi	r24, 0x08	; 8
     23c:	ea 01       	movw	r28, r20
     23e:	09 90       	ld	r0, Y+
     240:	ae 01       	movw	r20, r28
     242:	e9 01       	movw	r28, r18
     244:	09 92       	st	Y+, r0
     246:	9e 01       	movw	r18, r28
     248:	81 50       	subi	r24, 0x01	; 1
     24a:	c1 f7       	brne	.-16     	; 0x23c <_fpadd_parts+0x58>
     24c:	e2 01       	movw	r28, r4
     24e:	89 81       	ldd	r24, Y+1	; 0x01
     250:	11 96       	adiw	r26, 0x01	; 1
     252:	9c 91       	ld	r25, X
     254:	89 23       	and	r24, r25
     256:	81 83       	std	Z+1, r24	; 0x01
     258:	08 c1       	rjmp	.+528    	; 0x46a <_fpadd_parts+0x286>
     25a:	92 30       	cpi	r25, 0x02	; 2
     25c:	09 f4       	brne	.+2      	; 0x260 <_fpadd_parts+0x7c>
     25e:	07 c1       	rjmp	.+526    	; 0x46e <_fpadd_parts+0x28a>
     260:	12 96       	adiw	r26, 0x02	; 2
     262:	2d 90       	ld	r2, X+
     264:	3c 90       	ld	r3, X
     266:	13 97       	sbiw	r26, 0x03	; 3
     268:	eb 01       	movw	r28, r22
     26a:	8a 81       	ldd	r24, Y+2	; 0x02
     26c:	9b 81       	ldd	r25, Y+3	; 0x03
     26e:	14 96       	adiw	r26, 0x04	; 4
     270:	ad 90       	ld	r10, X+
     272:	bd 90       	ld	r11, X+
     274:	cd 90       	ld	r12, X+
     276:	dc 90       	ld	r13, X
     278:	17 97       	sbiw	r26, 0x07	; 7
     27a:	ec 80       	ldd	r14, Y+4	; 0x04
     27c:	fd 80       	ldd	r15, Y+5	; 0x05
     27e:	0e 81       	ldd	r16, Y+6	; 0x06
     280:	1f 81       	ldd	r17, Y+7	; 0x07
     282:	91 01       	movw	r18, r2
     284:	28 1b       	sub	r18, r24
     286:	39 0b       	sbc	r19, r25
     288:	b9 01       	movw	r22, r18
     28a:	37 ff       	sbrs	r19, 7
     28c:	04 c0       	rjmp	.+8      	; 0x296 <_fpadd_parts+0xb2>
     28e:	66 27       	eor	r22, r22
     290:	77 27       	eor	r23, r23
     292:	62 1b       	sub	r22, r18
     294:	73 0b       	sbc	r23, r19
     296:	60 32       	cpi	r22, 0x20	; 32
     298:	71 05       	cpc	r23, r1
     29a:	0c f0       	brlt	.+2      	; 0x29e <_fpadd_parts+0xba>
     29c:	61 c0       	rjmp	.+194    	; 0x360 <_fpadd_parts+0x17c>
     29e:	12 16       	cp	r1, r18
     2a0:	13 06       	cpc	r1, r19
     2a2:	6c f5       	brge	.+90     	; 0x2fe <_fpadd_parts+0x11a>
     2a4:	37 01       	movw	r6, r14
     2a6:	48 01       	movw	r8, r16
     2a8:	06 2e       	mov	r0, r22
     2aa:	04 c0       	rjmp	.+8      	; 0x2b4 <_fpadd_parts+0xd0>
     2ac:	96 94       	lsr	r9
     2ae:	87 94       	ror	r8
     2b0:	77 94       	ror	r7
     2b2:	67 94       	ror	r6
     2b4:	0a 94       	dec	r0
     2b6:	d2 f7       	brpl	.-12     	; 0x2ac <_fpadd_parts+0xc8>
     2b8:	21 e0       	ldi	r18, 0x01	; 1
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	40 e0       	ldi	r20, 0x00	; 0
     2be:	50 e0       	ldi	r21, 0x00	; 0
     2c0:	04 c0       	rjmp	.+8      	; 0x2ca <_fpadd_parts+0xe6>
     2c2:	22 0f       	add	r18, r18
     2c4:	33 1f       	adc	r19, r19
     2c6:	44 1f       	adc	r20, r20
     2c8:	55 1f       	adc	r21, r21
     2ca:	6a 95       	dec	r22
     2cc:	d2 f7       	brpl	.-12     	; 0x2c2 <_fpadd_parts+0xde>
     2ce:	21 50       	subi	r18, 0x01	; 1
     2d0:	30 40       	sbci	r19, 0x00	; 0
     2d2:	40 40       	sbci	r20, 0x00	; 0
     2d4:	50 40       	sbci	r21, 0x00	; 0
     2d6:	2e 21       	and	r18, r14
     2d8:	3f 21       	and	r19, r15
     2da:	40 23       	and	r20, r16
     2dc:	51 23       	and	r21, r17
     2de:	21 15       	cp	r18, r1
     2e0:	31 05       	cpc	r19, r1
     2e2:	41 05       	cpc	r20, r1
     2e4:	51 05       	cpc	r21, r1
     2e6:	21 f0       	breq	.+8      	; 0x2f0 <_fpadd_parts+0x10c>
     2e8:	21 e0       	ldi	r18, 0x01	; 1
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	40 e0       	ldi	r20, 0x00	; 0
     2ee:	50 e0       	ldi	r21, 0x00	; 0
     2f0:	79 01       	movw	r14, r18
     2f2:	8a 01       	movw	r16, r20
     2f4:	e6 28       	or	r14, r6
     2f6:	f7 28       	or	r15, r7
     2f8:	08 29       	or	r16, r8
     2fa:	19 29       	or	r17, r9
     2fc:	3c c0       	rjmp	.+120    	; 0x376 <_fpadd_parts+0x192>
     2fe:	23 2b       	or	r18, r19
     300:	d1 f1       	breq	.+116    	; 0x376 <_fpadd_parts+0x192>
     302:	26 0e       	add	r2, r22
     304:	37 1e       	adc	r3, r23
     306:	35 01       	movw	r6, r10
     308:	46 01       	movw	r8, r12
     30a:	06 2e       	mov	r0, r22
     30c:	04 c0       	rjmp	.+8      	; 0x316 <_fpadd_parts+0x132>
     30e:	96 94       	lsr	r9
     310:	87 94       	ror	r8
     312:	77 94       	ror	r7
     314:	67 94       	ror	r6
     316:	0a 94       	dec	r0
     318:	d2 f7       	brpl	.-12     	; 0x30e <_fpadd_parts+0x12a>
     31a:	21 e0       	ldi	r18, 0x01	; 1
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	40 e0       	ldi	r20, 0x00	; 0
     320:	50 e0       	ldi	r21, 0x00	; 0
     322:	04 c0       	rjmp	.+8      	; 0x32c <_fpadd_parts+0x148>
     324:	22 0f       	add	r18, r18
     326:	33 1f       	adc	r19, r19
     328:	44 1f       	adc	r20, r20
     32a:	55 1f       	adc	r21, r21
     32c:	6a 95       	dec	r22
     32e:	d2 f7       	brpl	.-12     	; 0x324 <_fpadd_parts+0x140>
     330:	21 50       	subi	r18, 0x01	; 1
     332:	30 40       	sbci	r19, 0x00	; 0
     334:	40 40       	sbci	r20, 0x00	; 0
     336:	50 40       	sbci	r21, 0x00	; 0
     338:	2a 21       	and	r18, r10
     33a:	3b 21       	and	r19, r11
     33c:	4c 21       	and	r20, r12
     33e:	5d 21       	and	r21, r13
     340:	21 15       	cp	r18, r1
     342:	31 05       	cpc	r19, r1
     344:	41 05       	cpc	r20, r1
     346:	51 05       	cpc	r21, r1
     348:	21 f0       	breq	.+8      	; 0x352 <_fpadd_parts+0x16e>
     34a:	21 e0       	ldi	r18, 0x01	; 1
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	40 e0       	ldi	r20, 0x00	; 0
     350:	50 e0       	ldi	r21, 0x00	; 0
     352:	59 01       	movw	r10, r18
     354:	6a 01       	movw	r12, r20
     356:	a6 28       	or	r10, r6
     358:	b7 28       	or	r11, r7
     35a:	c8 28       	or	r12, r8
     35c:	d9 28       	or	r13, r9
     35e:	0b c0       	rjmp	.+22     	; 0x376 <_fpadd_parts+0x192>
     360:	82 15       	cp	r24, r2
     362:	93 05       	cpc	r25, r3
     364:	2c f0       	brlt	.+10     	; 0x370 <_fpadd_parts+0x18c>
     366:	1c 01       	movw	r2, r24
     368:	aa 24       	eor	r10, r10
     36a:	bb 24       	eor	r11, r11
     36c:	65 01       	movw	r12, r10
     36e:	03 c0       	rjmp	.+6      	; 0x376 <_fpadd_parts+0x192>
     370:	ee 24       	eor	r14, r14
     372:	ff 24       	eor	r15, r15
     374:	87 01       	movw	r16, r14
     376:	11 96       	adiw	r26, 0x01	; 1
     378:	9c 91       	ld	r25, X
     37a:	d2 01       	movw	r26, r4
     37c:	11 96       	adiw	r26, 0x01	; 1
     37e:	8c 91       	ld	r24, X
     380:	98 17       	cp	r25, r24
     382:	09 f4       	brne	.+2      	; 0x386 <_fpadd_parts+0x1a2>
     384:	45 c0       	rjmp	.+138    	; 0x410 <_fpadd_parts+0x22c>
     386:	99 23       	and	r25, r25
     388:	39 f0       	breq	.+14     	; 0x398 <_fpadd_parts+0x1b4>
     38a:	a8 01       	movw	r20, r16
     38c:	97 01       	movw	r18, r14
     38e:	2a 19       	sub	r18, r10
     390:	3b 09       	sbc	r19, r11
     392:	4c 09       	sbc	r20, r12
     394:	5d 09       	sbc	r21, r13
     396:	06 c0       	rjmp	.+12     	; 0x3a4 <_fpadd_parts+0x1c0>
     398:	a6 01       	movw	r20, r12
     39a:	95 01       	movw	r18, r10
     39c:	2e 19       	sub	r18, r14
     39e:	3f 09       	sbc	r19, r15
     3a0:	40 0b       	sbc	r20, r16
     3a2:	51 0b       	sbc	r21, r17
     3a4:	57 fd       	sbrc	r21, 7
     3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <_fpadd_parts+0x1d4>
     3a8:	11 82       	std	Z+1, r1	; 0x01
     3aa:	33 82       	std	Z+3, r3	; 0x03
     3ac:	22 82       	std	Z+2, r2	; 0x02
     3ae:	24 83       	std	Z+4, r18	; 0x04
     3b0:	35 83       	std	Z+5, r19	; 0x05
     3b2:	46 83       	std	Z+6, r20	; 0x06
     3b4:	57 83       	std	Z+7, r21	; 0x07
     3b6:	1d c0       	rjmp	.+58     	; 0x3f2 <_fpadd_parts+0x20e>
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	81 83       	std	Z+1, r24	; 0x01
     3bc:	33 82       	std	Z+3, r3	; 0x03
     3be:	22 82       	std	Z+2, r2	; 0x02
     3c0:	88 27       	eor	r24, r24
     3c2:	99 27       	eor	r25, r25
     3c4:	dc 01       	movw	r26, r24
     3c6:	82 1b       	sub	r24, r18
     3c8:	93 0b       	sbc	r25, r19
     3ca:	a4 0b       	sbc	r26, r20
     3cc:	b5 0b       	sbc	r27, r21
     3ce:	84 83       	std	Z+4, r24	; 0x04
     3d0:	95 83       	std	Z+5, r25	; 0x05
     3d2:	a6 83       	std	Z+6, r26	; 0x06
     3d4:	b7 83       	std	Z+7, r27	; 0x07
     3d6:	0d c0       	rjmp	.+26     	; 0x3f2 <_fpadd_parts+0x20e>
     3d8:	22 0f       	add	r18, r18
     3da:	33 1f       	adc	r19, r19
     3dc:	44 1f       	adc	r20, r20
     3de:	55 1f       	adc	r21, r21
     3e0:	24 83       	std	Z+4, r18	; 0x04
     3e2:	35 83       	std	Z+5, r19	; 0x05
     3e4:	46 83       	std	Z+6, r20	; 0x06
     3e6:	57 83       	std	Z+7, r21	; 0x07
     3e8:	82 81       	ldd	r24, Z+2	; 0x02
     3ea:	93 81       	ldd	r25, Z+3	; 0x03
     3ec:	01 97       	sbiw	r24, 0x01	; 1
     3ee:	93 83       	std	Z+3, r25	; 0x03
     3f0:	82 83       	std	Z+2, r24	; 0x02
     3f2:	24 81       	ldd	r18, Z+4	; 0x04
     3f4:	35 81       	ldd	r19, Z+5	; 0x05
     3f6:	46 81       	ldd	r20, Z+6	; 0x06
     3f8:	57 81       	ldd	r21, Z+7	; 0x07
     3fa:	da 01       	movw	r26, r20
     3fc:	c9 01       	movw	r24, r18
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	a1 09       	sbc	r26, r1
     402:	b1 09       	sbc	r27, r1
     404:	8f 5f       	subi	r24, 0xFF	; 255
     406:	9f 4f       	sbci	r25, 0xFF	; 255
     408:	af 4f       	sbci	r26, 0xFF	; 255
     40a:	bf 43       	sbci	r27, 0x3F	; 63
     40c:	28 f3       	brcs	.-54     	; 0x3d8 <_fpadd_parts+0x1f4>
     40e:	0b c0       	rjmp	.+22     	; 0x426 <_fpadd_parts+0x242>
     410:	91 83       	std	Z+1, r25	; 0x01
     412:	33 82       	std	Z+3, r3	; 0x03
     414:	22 82       	std	Z+2, r2	; 0x02
     416:	ea 0c       	add	r14, r10
     418:	fb 1c       	adc	r15, r11
     41a:	0c 1d       	adc	r16, r12
     41c:	1d 1d       	adc	r17, r13
     41e:	e4 82       	std	Z+4, r14	; 0x04
     420:	f5 82       	std	Z+5, r15	; 0x05
     422:	06 83       	std	Z+6, r16	; 0x06
     424:	17 83       	std	Z+7, r17	; 0x07
     426:	83 e0       	ldi	r24, 0x03	; 3
     428:	80 83       	st	Z, r24
     42a:	24 81       	ldd	r18, Z+4	; 0x04
     42c:	35 81       	ldd	r19, Z+5	; 0x05
     42e:	46 81       	ldd	r20, Z+6	; 0x06
     430:	57 81       	ldd	r21, Z+7	; 0x07
     432:	57 ff       	sbrs	r21, 7
     434:	1a c0       	rjmp	.+52     	; 0x46a <_fpadd_parts+0x286>
     436:	c9 01       	movw	r24, r18
     438:	aa 27       	eor	r26, r26
     43a:	97 fd       	sbrc	r25, 7
     43c:	a0 95       	com	r26
     43e:	ba 2f       	mov	r27, r26
     440:	81 70       	andi	r24, 0x01	; 1
     442:	90 70       	andi	r25, 0x00	; 0
     444:	a0 70       	andi	r26, 0x00	; 0
     446:	b0 70       	andi	r27, 0x00	; 0
     448:	56 95       	lsr	r21
     44a:	47 95       	ror	r20
     44c:	37 95       	ror	r19
     44e:	27 95       	ror	r18
     450:	82 2b       	or	r24, r18
     452:	93 2b       	or	r25, r19
     454:	a4 2b       	or	r26, r20
     456:	b5 2b       	or	r27, r21
     458:	84 83       	std	Z+4, r24	; 0x04
     45a:	95 83       	std	Z+5, r25	; 0x05
     45c:	a6 83       	std	Z+6, r26	; 0x06
     45e:	b7 83       	std	Z+7, r27	; 0x07
     460:	82 81       	ldd	r24, Z+2	; 0x02
     462:	93 81       	ldd	r25, Z+3	; 0x03
     464:	01 96       	adiw	r24, 0x01	; 1
     466:	93 83       	std	Z+3, r25	; 0x03
     468:	82 83       	std	Z+2, r24	; 0x02
     46a:	df 01       	movw	r26, r30
     46c:	01 c0       	rjmp	.+2      	; 0x470 <_fpadd_parts+0x28c>
     46e:	d2 01       	movw	r26, r4
     470:	cd 01       	movw	r24, r26
     472:	cd b7       	in	r28, 0x3d	; 61
     474:	de b7       	in	r29, 0x3e	; 62
     476:	e2 e1       	ldi	r30, 0x12	; 18
     478:	0c 94 4b 16 	jmp	0x2c96	; 0x2c96 <__epilogue_restores__>

0000047c <__subsf3>:
     47c:	a0 e2       	ldi	r26, 0x20	; 32
     47e:	b0 e0       	ldi	r27, 0x00	; 0
     480:	e4 e4       	ldi	r30, 0x44	; 68
     482:	f2 e0       	ldi	r31, 0x02	; 2
     484:	0c 94 3b 16 	jmp	0x2c76	; 0x2c76 <__prologue_saves__+0x18>
     488:	69 83       	std	Y+1, r22	; 0x01
     48a:	7a 83       	std	Y+2, r23	; 0x02
     48c:	8b 83       	std	Y+3, r24	; 0x03
     48e:	9c 83       	std	Y+4, r25	; 0x04
     490:	2d 83       	std	Y+5, r18	; 0x05
     492:	3e 83       	std	Y+6, r19	; 0x06
     494:	4f 83       	std	Y+7, r20	; 0x07
     496:	58 87       	std	Y+8, r21	; 0x08
     498:	e9 e0       	ldi	r30, 0x09	; 9
     49a:	ee 2e       	mov	r14, r30
     49c:	f1 2c       	mov	r15, r1
     49e:	ec 0e       	add	r14, r28
     4a0:	fd 1e       	adc	r15, r29
     4a2:	ce 01       	movw	r24, r28
     4a4:	01 96       	adiw	r24, 0x01	; 1
     4a6:	b7 01       	movw	r22, r14
     4a8:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     4ac:	8e 01       	movw	r16, r28
     4ae:	0f 5e       	subi	r16, 0xEF	; 239
     4b0:	1f 4f       	sbci	r17, 0xFF	; 255
     4b2:	ce 01       	movw	r24, r28
     4b4:	05 96       	adiw	r24, 0x05	; 5
     4b6:	b8 01       	movw	r22, r16
     4b8:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     4bc:	8a 89       	ldd	r24, Y+18	; 0x12
     4be:	91 e0       	ldi	r25, 0x01	; 1
     4c0:	89 27       	eor	r24, r25
     4c2:	8a 8b       	std	Y+18, r24	; 0x12
     4c4:	c7 01       	movw	r24, r14
     4c6:	b8 01       	movw	r22, r16
     4c8:	ae 01       	movw	r20, r28
     4ca:	47 5e       	subi	r20, 0xE7	; 231
     4cc:	5f 4f       	sbci	r21, 0xFF	; 255
     4ce:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_fpadd_parts>
     4d2:	0e 94 d3 05 	call	0xba6	; 0xba6 <__pack_f>
     4d6:	a0 96       	adiw	r28, 0x20	; 32
     4d8:	e6 e0       	ldi	r30, 0x06	; 6
     4da:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <__epilogue_restores__+0x18>

000004de <__addsf3>:
     4de:	a0 e2       	ldi	r26, 0x20	; 32
     4e0:	b0 e0       	ldi	r27, 0x00	; 0
     4e2:	e5 e7       	ldi	r30, 0x75	; 117
     4e4:	f2 e0       	ldi	r31, 0x02	; 2
     4e6:	0c 94 3b 16 	jmp	0x2c76	; 0x2c76 <__prologue_saves__+0x18>
     4ea:	69 83       	std	Y+1, r22	; 0x01
     4ec:	7a 83       	std	Y+2, r23	; 0x02
     4ee:	8b 83       	std	Y+3, r24	; 0x03
     4f0:	9c 83       	std	Y+4, r25	; 0x04
     4f2:	2d 83       	std	Y+5, r18	; 0x05
     4f4:	3e 83       	std	Y+6, r19	; 0x06
     4f6:	4f 83       	std	Y+7, r20	; 0x07
     4f8:	58 87       	std	Y+8, r21	; 0x08
     4fa:	f9 e0       	ldi	r31, 0x09	; 9
     4fc:	ef 2e       	mov	r14, r31
     4fe:	f1 2c       	mov	r15, r1
     500:	ec 0e       	add	r14, r28
     502:	fd 1e       	adc	r15, r29
     504:	ce 01       	movw	r24, r28
     506:	01 96       	adiw	r24, 0x01	; 1
     508:	b7 01       	movw	r22, r14
     50a:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     50e:	8e 01       	movw	r16, r28
     510:	0f 5e       	subi	r16, 0xEF	; 239
     512:	1f 4f       	sbci	r17, 0xFF	; 255
     514:	ce 01       	movw	r24, r28
     516:	05 96       	adiw	r24, 0x05	; 5
     518:	b8 01       	movw	r22, r16
     51a:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     51e:	c7 01       	movw	r24, r14
     520:	b8 01       	movw	r22, r16
     522:	ae 01       	movw	r20, r28
     524:	47 5e       	subi	r20, 0xE7	; 231
     526:	5f 4f       	sbci	r21, 0xFF	; 255
     528:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_fpadd_parts>
     52c:	0e 94 d3 05 	call	0xba6	; 0xba6 <__pack_f>
     530:	a0 96       	adiw	r28, 0x20	; 32
     532:	e6 e0       	ldi	r30, 0x06	; 6
     534:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <__epilogue_restores__+0x18>

00000538 <__mulsf3>:
     538:	a0 e2       	ldi	r26, 0x20	; 32
     53a:	b0 e0       	ldi	r27, 0x00	; 0
     53c:	e2 ea       	ldi	r30, 0xA2	; 162
     53e:	f2 e0       	ldi	r31, 0x02	; 2
     540:	0c 94 2f 16 	jmp	0x2c5e	; 0x2c5e <__prologue_saves__>
     544:	69 83       	std	Y+1, r22	; 0x01
     546:	7a 83       	std	Y+2, r23	; 0x02
     548:	8b 83       	std	Y+3, r24	; 0x03
     54a:	9c 83       	std	Y+4, r25	; 0x04
     54c:	2d 83       	std	Y+5, r18	; 0x05
     54e:	3e 83       	std	Y+6, r19	; 0x06
     550:	4f 83       	std	Y+7, r20	; 0x07
     552:	58 87       	std	Y+8, r21	; 0x08
     554:	ce 01       	movw	r24, r28
     556:	01 96       	adiw	r24, 0x01	; 1
     558:	be 01       	movw	r22, r28
     55a:	67 5f       	subi	r22, 0xF7	; 247
     55c:	7f 4f       	sbci	r23, 0xFF	; 255
     55e:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     562:	ce 01       	movw	r24, r28
     564:	05 96       	adiw	r24, 0x05	; 5
     566:	be 01       	movw	r22, r28
     568:	6f 5e       	subi	r22, 0xEF	; 239
     56a:	7f 4f       	sbci	r23, 0xFF	; 255
     56c:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     570:	99 85       	ldd	r25, Y+9	; 0x09
     572:	92 30       	cpi	r25, 0x02	; 2
     574:	88 f0       	brcs	.+34     	; 0x598 <__mulsf3+0x60>
     576:	89 89       	ldd	r24, Y+17	; 0x11
     578:	82 30       	cpi	r24, 0x02	; 2
     57a:	c8 f0       	brcs	.+50     	; 0x5ae <__mulsf3+0x76>
     57c:	94 30       	cpi	r25, 0x04	; 4
     57e:	19 f4       	brne	.+6      	; 0x586 <__mulsf3+0x4e>
     580:	82 30       	cpi	r24, 0x02	; 2
     582:	51 f4       	brne	.+20     	; 0x598 <__mulsf3+0x60>
     584:	04 c0       	rjmp	.+8      	; 0x58e <__mulsf3+0x56>
     586:	84 30       	cpi	r24, 0x04	; 4
     588:	29 f4       	brne	.+10     	; 0x594 <__mulsf3+0x5c>
     58a:	92 30       	cpi	r25, 0x02	; 2
     58c:	81 f4       	brne	.+32     	; 0x5ae <__mulsf3+0x76>
     58e:	88 e7       	ldi	r24, 0x78	; 120
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	c6 c0       	rjmp	.+396    	; 0x720 <__mulsf3+0x1e8>
     594:	92 30       	cpi	r25, 0x02	; 2
     596:	49 f4       	brne	.+18     	; 0x5aa <__mulsf3+0x72>
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	9a 85       	ldd	r25, Y+10	; 0x0a
     59c:	8a 89       	ldd	r24, Y+18	; 0x12
     59e:	98 13       	cpse	r25, r24
     5a0:	21 e0       	ldi	r18, 0x01	; 1
     5a2:	2a 87       	std	Y+10, r18	; 0x0a
     5a4:	ce 01       	movw	r24, r28
     5a6:	09 96       	adiw	r24, 0x09	; 9
     5a8:	bb c0       	rjmp	.+374    	; 0x720 <__mulsf3+0x1e8>
     5aa:	82 30       	cpi	r24, 0x02	; 2
     5ac:	49 f4       	brne	.+18     	; 0x5c0 <__mulsf3+0x88>
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	9a 85       	ldd	r25, Y+10	; 0x0a
     5b2:	8a 89       	ldd	r24, Y+18	; 0x12
     5b4:	98 13       	cpse	r25, r24
     5b6:	21 e0       	ldi	r18, 0x01	; 1
     5b8:	2a 8b       	std	Y+18, r18	; 0x12
     5ba:	ce 01       	movw	r24, r28
     5bc:	41 96       	adiw	r24, 0x11	; 17
     5be:	b0 c0       	rjmp	.+352    	; 0x720 <__mulsf3+0x1e8>
     5c0:	2d 84       	ldd	r2, Y+13	; 0x0d
     5c2:	3e 84       	ldd	r3, Y+14	; 0x0e
     5c4:	4f 84       	ldd	r4, Y+15	; 0x0f
     5c6:	58 88       	ldd	r5, Y+16	; 0x10
     5c8:	6d 88       	ldd	r6, Y+21	; 0x15
     5ca:	7e 88       	ldd	r7, Y+22	; 0x16
     5cc:	8f 88       	ldd	r8, Y+23	; 0x17
     5ce:	98 8c       	ldd	r9, Y+24	; 0x18
     5d0:	ee 24       	eor	r14, r14
     5d2:	ff 24       	eor	r15, r15
     5d4:	87 01       	movw	r16, r14
     5d6:	aa 24       	eor	r10, r10
     5d8:	bb 24       	eor	r11, r11
     5da:	65 01       	movw	r12, r10
     5dc:	40 e0       	ldi	r20, 0x00	; 0
     5de:	50 e0       	ldi	r21, 0x00	; 0
     5e0:	60 e0       	ldi	r22, 0x00	; 0
     5e2:	70 e0       	ldi	r23, 0x00	; 0
     5e4:	e0 e0       	ldi	r30, 0x00	; 0
     5e6:	f0 e0       	ldi	r31, 0x00	; 0
     5e8:	c1 01       	movw	r24, r2
     5ea:	81 70       	andi	r24, 0x01	; 1
     5ec:	90 70       	andi	r25, 0x00	; 0
     5ee:	89 2b       	or	r24, r25
     5f0:	e9 f0       	breq	.+58     	; 0x62c <__mulsf3+0xf4>
     5f2:	e6 0c       	add	r14, r6
     5f4:	f7 1c       	adc	r15, r7
     5f6:	08 1d       	adc	r16, r8
     5f8:	19 1d       	adc	r17, r9
     5fa:	9a 01       	movw	r18, r20
     5fc:	ab 01       	movw	r20, r22
     5fe:	2a 0d       	add	r18, r10
     600:	3b 1d       	adc	r19, r11
     602:	4c 1d       	adc	r20, r12
     604:	5d 1d       	adc	r21, r13
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	a0 e0       	ldi	r26, 0x00	; 0
     60c:	b0 e0       	ldi	r27, 0x00	; 0
     60e:	e6 14       	cp	r14, r6
     610:	f7 04       	cpc	r15, r7
     612:	08 05       	cpc	r16, r8
     614:	19 05       	cpc	r17, r9
     616:	20 f4       	brcc	.+8      	; 0x620 <__mulsf3+0xe8>
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	a0 e0       	ldi	r26, 0x00	; 0
     61e:	b0 e0       	ldi	r27, 0x00	; 0
     620:	ba 01       	movw	r22, r20
     622:	a9 01       	movw	r20, r18
     624:	48 0f       	add	r20, r24
     626:	59 1f       	adc	r21, r25
     628:	6a 1f       	adc	r22, r26
     62a:	7b 1f       	adc	r23, r27
     62c:	aa 0c       	add	r10, r10
     62e:	bb 1c       	adc	r11, r11
     630:	cc 1c       	adc	r12, r12
     632:	dd 1c       	adc	r13, r13
     634:	97 fe       	sbrs	r9, 7
     636:	08 c0       	rjmp	.+16     	; 0x648 <__mulsf3+0x110>
     638:	81 e0       	ldi	r24, 0x01	; 1
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	a0 e0       	ldi	r26, 0x00	; 0
     63e:	b0 e0       	ldi	r27, 0x00	; 0
     640:	a8 2a       	or	r10, r24
     642:	b9 2a       	or	r11, r25
     644:	ca 2a       	or	r12, r26
     646:	db 2a       	or	r13, r27
     648:	31 96       	adiw	r30, 0x01	; 1
     64a:	e0 32       	cpi	r30, 0x20	; 32
     64c:	f1 05       	cpc	r31, r1
     64e:	49 f0       	breq	.+18     	; 0x662 <__mulsf3+0x12a>
     650:	66 0c       	add	r6, r6
     652:	77 1c       	adc	r7, r7
     654:	88 1c       	adc	r8, r8
     656:	99 1c       	adc	r9, r9
     658:	56 94       	lsr	r5
     65a:	47 94       	ror	r4
     65c:	37 94       	ror	r3
     65e:	27 94       	ror	r2
     660:	c3 cf       	rjmp	.-122    	; 0x5e8 <__mulsf3+0xb0>
     662:	fa 85       	ldd	r31, Y+10	; 0x0a
     664:	ea 89       	ldd	r30, Y+18	; 0x12
     666:	2b 89       	ldd	r18, Y+19	; 0x13
     668:	3c 89       	ldd	r19, Y+20	; 0x14
     66a:	8b 85       	ldd	r24, Y+11	; 0x0b
     66c:	9c 85       	ldd	r25, Y+12	; 0x0c
     66e:	28 0f       	add	r18, r24
     670:	39 1f       	adc	r19, r25
     672:	2e 5f       	subi	r18, 0xFE	; 254
     674:	3f 4f       	sbci	r19, 0xFF	; 255
     676:	17 c0       	rjmp	.+46     	; 0x6a6 <__mulsf3+0x16e>
     678:	ca 01       	movw	r24, r20
     67a:	81 70       	andi	r24, 0x01	; 1
     67c:	90 70       	andi	r25, 0x00	; 0
     67e:	89 2b       	or	r24, r25
     680:	61 f0       	breq	.+24     	; 0x69a <__mulsf3+0x162>
     682:	16 95       	lsr	r17
     684:	07 95       	ror	r16
     686:	f7 94       	ror	r15
     688:	e7 94       	ror	r14
     68a:	80 e0       	ldi	r24, 0x00	; 0
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	a0 e0       	ldi	r26, 0x00	; 0
     690:	b0 e8       	ldi	r27, 0x80	; 128
     692:	e8 2a       	or	r14, r24
     694:	f9 2a       	or	r15, r25
     696:	0a 2b       	or	r16, r26
     698:	1b 2b       	or	r17, r27
     69a:	76 95       	lsr	r23
     69c:	67 95       	ror	r22
     69e:	57 95       	ror	r21
     6a0:	47 95       	ror	r20
     6a2:	2f 5f       	subi	r18, 0xFF	; 255
     6a4:	3f 4f       	sbci	r19, 0xFF	; 255
     6a6:	77 fd       	sbrc	r23, 7
     6a8:	e7 cf       	rjmp	.-50     	; 0x678 <__mulsf3+0x140>
     6aa:	0c c0       	rjmp	.+24     	; 0x6c4 <__mulsf3+0x18c>
     6ac:	44 0f       	add	r20, r20
     6ae:	55 1f       	adc	r21, r21
     6b0:	66 1f       	adc	r22, r22
     6b2:	77 1f       	adc	r23, r23
     6b4:	17 fd       	sbrc	r17, 7
     6b6:	41 60       	ori	r20, 0x01	; 1
     6b8:	ee 0c       	add	r14, r14
     6ba:	ff 1c       	adc	r15, r15
     6bc:	00 1f       	adc	r16, r16
     6be:	11 1f       	adc	r17, r17
     6c0:	21 50       	subi	r18, 0x01	; 1
     6c2:	30 40       	sbci	r19, 0x00	; 0
     6c4:	40 30       	cpi	r20, 0x00	; 0
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	59 07       	cpc	r21, r25
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	69 07       	cpc	r22, r25
     6ce:	90 e4       	ldi	r25, 0x40	; 64
     6d0:	79 07       	cpc	r23, r25
     6d2:	60 f3       	brcs	.-40     	; 0x6ac <__mulsf3+0x174>
     6d4:	2b 8f       	std	Y+27, r18	; 0x1b
     6d6:	3c 8f       	std	Y+28, r19	; 0x1c
     6d8:	db 01       	movw	r26, r22
     6da:	ca 01       	movw	r24, r20
     6dc:	8f 77       	andi	r24, 0x7F	; 127
     6de:	90 70       	andi	r25, 0x00	; 0
     6e0:	a0 70       	andi	r26, 0x00	; 0
     6e2:	b0 70       	andi	r27, 0x00	; 0
     6e4:	80 34       	cpi	r24, 0x40	; 64
     6e6:	91 05       	cpc	r25, r1
     6e8:	a1 05       	cpc	r26, r1
     6ea:	b1 05       	cpc	r27, r1
     6ec:	61 f4       	brne	.+24     	; 0x706 <__mulsf3+0x1ce>
     6ee:	47 fd       	sbrc	r20, 7
     6f0:	0a c0       	rjmp	.+20     	; 0x706 <__mulsf3+0x1ce>
     6f2:	e1 14       	cp	r14, r1
     6f4:	f1 04       	cpc	r15, r1
     6f6:	01 05       	cpc	r16, r1
     6f8:	11 05       	cpc	r17, r1
     6fa:	29 f0       	breq	.+10     	; 0x706 <__mulsf3+0x1ce>
     6fc:	40 5c       	subi	r20, 0xC0	; 192
     6fe:	5f 4f       	sbci	r21, 0xFF	; 255
     700:	6f 4f       	sbci	r22, 0xFF	; 255
     702:	7f 4f       	sbci	r23, 0xFF	; 255
     704:	40 78       	andi	r20, 0x80	; 128
     706:	1a 8e       	std	Y+26, r1	; 0x1a
     708:	fe 17       	cp	r31, r30
     70a:	11 f0       	breq	.+4      	; 0x710 <__mulsf3+0x1d8>
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	8a 8f       	std	Y+26, r24	; 0x1a
     710:	4d 8f       	std	Y+29, r20	; 0x1d
     712:	5e 8f       	std	Y+30, r21	; 0x1e
     714:	6f 8f       	std	Y+31, r22	; 0x1f
     716:	78 a3       	std	Y+32, r23	; 0x20
     718:	83 e0       	ldi	r24, 0x03	; 3
     71a:	89 8f       	std	Y+25, r24	; 0x19
     71c:	ce 01       	movw	r24, r28
     71e:	49 96       	adiw	r24, 0x19	; 25
     720:	0e 94 d3 05 	call	0xba6	; 0xba6 <__pack_f>
     724:	a0 96       	adiw	r28, 0x20	; 32
     726:	e2 e1       	ldi	r30, 0x12	; 18
     728:	0c 94 4b 16 	jmp	0x2c96	; 0x2c96 <__epilogue_restores__>

0000072c <__divsf3>:
     72c:	a8 e1       	ldi	r26, 0x18	; 24
     72e:	b0 e0       	ldi	r27, 0x00	; 0
     730:	ec e9       	ldi	r30, 0x9C	; 156
     732:	f3 e0       	ldi	r31, 0x03	; 3
     734:	0c 94 37 16 	jmp	0x2c6e	; 0x2c6e <__prologue_saves__+0x10>
     738:	69 83       	std	Y+1, r22	; 0x01
     73a:	7a 83       	std	Y+2, r23	; 0x02
     73c:	8b 83       	std	Y+3, r24	; 0x03
     73e:	9c 83       	std	Y+4, r25	; 0x04
     740:	2d 83       	std	Y+5, r18	; 0x05
     742:	3e 83       	std	Y+6, r19	; 0x06
     744:	4f 83       	std	Y+7, r20	; 0x07
     746:	58 87       	std	Y+8, r21	; 0x08
     748:	b9 e0       	ldi	r27, 0x09	; 9
     74a:	eb 2e       	mov	r14, r27
     74c:	f1 2c       	mov	r15, r1
     74e:	ec 0e       	add	r14, r28
     750:	fd 1e       	adc	r15, r29
     752:	ce 01       	movw	r24, r28
     754:	01 96       	adiw	r24, 0x01	; 1
     756:	b7 01       	movw	r22, r14
     758:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     75c:	8e 01       	movw	r16, r28
     75e:	0f 5e       	subi	r16, 0xEF	; 239
     760:	1f 4f       	sbci	r17, 0xFF	; 255
     762:	ce 01       	movw	r24, r28
     764:	05 96       	adiw	r24, 0x05	; 5
     766:	b8 01       	movw	r22, r16
     768:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     76c:	29 85       	ldd	r18, Y+9	; 0x09
     76e:	22 30       	cpi	r18, 0x02	; 2
     770:	08 f4       	brcc	.+2      	; 0x774 <__divsf3+0x48>
     772:	7e c0       	rjmp	.+252    	; 0x870 <__stack+0x11>
     774:	39 89       	ldd	r19, Y+17	; 0x11
     776:	32 30       	cpi	r19, 0x02	; 2
     778:	10 f4       	brcc	.+4      	; 0x77e <__divsf3+0x52>
     77a:	b8 01       	movw	r22, r16
     77c:	7c c0       	rjmp	.+248    	; 0x876 <__stack+0x17>
     77e:	8a 85       	ldd	r24, Y+10	; 0x0a
     780:	9a 89       	ldd	r25, Y+18	; 0x12
     782:	89 27       	eor	r24, r25
     784:	8a 87       	std	Y+10, r24	; 0x0a
     786:	24 30       	cpi	r18, 0x04	; 4
     788:	11 f0       	breq	.+4      	; 0x78e <__divsf3+0x62>
     78a:	22 30       	cpi	r18, 0x02	; 2
     78c:	31 f4       	brne	.+12     	; 0x79a <__divsf3+0x6e>
     78e:	23 17       	cp	r18, r19
     790:	09 f0       	breq	.+2      	; 0x794 <__divsf3+0x68>
     792:	6e c0       	rjmp	.+220    	; 0x870 <__stack+0x11>
     794:	68 e7       	ldi	r22, 0x78	; 120
     796:	70 e0       	ldi	r23, 0x00	; 0
     798:	6e c0       	rjmp	.+220    	; 0x876 <__stack+0x17>
     79a:	34 30       	cpi	r19, 0x04	; 4
     79c:	39 f4       	brne	.+14     	; 0x7ac <__divsf3+0x80>
     79e:	1d 86       	std	Y+13, r1	; 0x0d
     7a0:	1e 86       	std	Y+14, r1	; 0x0e
     7a2:	1f 86       	std	Y+15, r1	; 0x0f
     7a4:	18 8a       	std	Y+16, r1	; 0x10
     7a6:	1c 86       	std	Y+12, r1	; 0x0c
     7a8:	1b 86       	std	Y+11, r1	; 0x0b
     7aa:	04 c0       	rjmp	.+8      	; 0x7b4 <__divsf3+0x88>
     7ac:	32 30       	cpi	r19, 0x02	; 2
     7ae:	21 f4       	brne	.+8      	; 0x7b8 <__divsf3+0x8c>
     7b0:	84 e0       	ldi	r24, 0x04	; 4
     7b2:	89 87       	std	Y+9, r24	; 0x09
     7b4:	b7 01       	movw	r22, r14
     7b6:	5f c0       	rjmp	.+190    	; 0x876 <__stack+0x17>
     7b8:	2b 85       	ldd	r18, Y+11	; 0x0b
     7ba:	3c 85       	ldd	r19, Y+12	; 0x0c
     7bc:	8b 89       	ldd	r24, Y+19	; 0x13
     7be:	9c 89       	ldd	r25, Y+20	; 0x14
     7c0:	28 1b       	sub	r18, r24
     7c2:	39 0b       	sbc	r19, r25
     7c4:	3c 87       	std	Y+12, r19	; 0x0c
     7c6:	2b 87       	std	Y+11, r18	; 0x0b
     7c8:	ed 84       	ldd	r14, Y+13	; 0x0d
     7ca:	fe 84       	ldd	r15, Y+14	; 0x0e
     7cc:	0f 85       	ldd	r16, Y+15	; 0x0f
     7ce:	18 89       	ldd	r17, Y+16	; 0x10
     7d0:	ad 88       	ldd	r10, Y+21	; 0x15
     7d2:	be 88       	ldd	r11, Y+22	; 0x16
     7d4:	cf 88       	ldd	r12, Y+23	; 0x17
     7d6:	d8 8c       	ldd	r13, Y+24	; 0x18
     7d8:	ea 14       	cp	r14, r10
     7da:	fb 04       	cpc	r15, r11
     7dc:	0c 05       	cpc	r16, r12
     7de:	1d 05       	cpc	r17, r13
     7e0:	40 f4       	brcc	.+16     	; 0x7f2 <__divsf3+0xc6>
     7e2:	ee 0c       	add	r14, r14
     7e4:	ff 1c       	adc	r15, r15
     7e6:	00 1f       	adc	r16, r16
     7e8:	11 1f       	adc	r17, r17
     7ea:	21 50       	subi	r18, 0x01	; 1
     7ec:	30 40       	sbci	r19, 0x00	; 0
     7ee:	3c 87       	std	Y+12, r19	; 0x0c
     7f0:	2b 87       	std	Y+11, r18	; 0x0b
     7f2:	20 e0       	ldi	r18, 0x00	; 0
     7f4:	30 e0       	ldi	r19, 0x00	; 0
     7f6:	40 e0       	ldi	r20, 0x00	; 0
     7f8:	50 e0       	ldi	r21, 0x00	; 0
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	a0 e0       	ldi	r26, 0x00	; 0
     800:	b0 e4       	ldi	r27, 0x40	; 64
     802:	60 e0       	ldi	r22, 0x00	; 0
     804:	70 e0       	ldi	r23, 0x00	; 0
     806:	ea 14       	cp	r14, r10
     808:	fb 04       	cpc	r15, r11
     80a:	0c 05       	cpc	r16, r12
     80c:	1d 05       	cpc	r17, r13
     80e:	40 f0       	brcs	.+16     	; 0x820 <__divsf3+0xf4>
     810:	28 2b       	or	r18, r24
     812:	39 2b       	or	r19, r25
     814:	4a 2b       	or	r20, r26
     816:	5b 2b       	or	r21, r27
     818:	ea 18       	sub	r14, r10
     81a:	fb 08       	sbc	r15, r11
     81c:	0c 09       	sbc	r16, r12
     81e:	1d 09       	sbc	r17, r13
     820:	b6 95       	lsr	r27
     822:	a7 95       	ror	r26
     824:	97 95       	ror	r25
     826:	87 95       	ror	r24
     828:	ee 0c       	add	r14, r14
     82a:	ff 1c       	adc	r15, r15
     82c:	00 1f       	adc	r16, r16
     82e:	11 1f       	adc	r17, r17
     830:	6f 5f       	subi	r22, 0xFF	; 255
     832:	7f 4f       	sbci	r23, 0xFF	; 255
     834:	6f 31       	cpi	r22, 0x1F	; 31
     836:	71 05       	cpc	r23, r1
     838:	31 f7       	brne	.-52     	; 0x806 <__divsf3+0xda>
     83a:	da 01       	movw	r26, r20
     83c:	c9 01       	movw	r24, r18
     83e:	8f 77       	andi	r24, 0x7F	; 127
     840:	90 70       	andi	r25, 0x00	; 0
     842:	a0 70       	andi	r26, 0x00	; 0
     844:	b0 70       	andi	r27, 0x00	; 0
     846:	80 34       	cpi	r24, 0x40	; 64
     848:	91 05       	cpc	r25, r1
     84a:	a1 05       	cpc	r26, r1
     84c:	b1 05       	cpc	r27, r1
     84e:	61 f4       	brne	.+24     	; 0x868 <__stack+0x9>
     850:	27 fd       	sbrc	r18, 7
     852:	0a c0       	rjmp	.+20     	; 0x868 <__stack+0x9>
     854:	e1 14       	cp	r14, r1
     856:	f1 04       	cpc	r15, r1
     858:	01 05       	cpc	r16, r1
     85a:	11 05       	cpc	r17, r1
     85c:	29 f0       	breq	.+10     	; 0x868 <__stack+0x9>
     85e:	20 5c       	subi	r18, 0xC0	; 192
     860:	3f 4f       	sbci	r19, 0xFF	; 255
     862:	4f 4f       	sbci	r20, 0xFF	; 255
     864:	5f 4f       	sbci	r21, 0xFF	; 255
     866:	20 78       	andi	r18, 0x80	; 128
     868:	2d 87       	std	Y+13, r18	; 0x0d
     86a:	3e 87       	std	Y+14, r19	; 0x0e
     86c:	4f 87       	std	Y+15, r20	; 0x0f
     86e:	58 8b       	std	Y+16, r21	; 0x10
     870:	be 01       	movw	r22, r28
     872:	67 5f       	subi	r22, 0xF7	; 247
     874:	7f 4f       	sbci	r23, 0xFF	; 255
     876:	cb 01       	movw	r24, r22
     878:	0e 94 d3 05 	call	0xba6	; 0xba6 <__pack_f>
     87c:	68 96       	adiw	r28, 0x18	; 24
     87e:	ea e0       	ldi	r30, 0x0A	; 10
     880:	0c 94 53 16 	jmp	0x2ca6	; 0x2ca6 <__epilogue_restores__+0x10>

00000884 <__gtsf2>:
     884:	a8 e1       	ldi	r26, 0x18	; 24
     886:	b0 e0       	ldi	r27, 0x00	; 0
     888:	e8 e4       	ldi	r30, 0x48	; 72
     88a:	f4 e0       	ldi	r31, 0x04	; 4
     88c:	0c 94 3b 16 	jmp	0x2c76	; 0x2c76 <__prologue_saves__+0x18>
     890:	69 83       	std	Y+1, r22	; 0x01
     892:	7a 83       	std	Y+2, r23	; 0x02
     894:	8b 83       	std	Y+3, r24	; 0x03
     896:	9c 83       	std	Y+4, r25	; 0x04
     898:	2d 83       	std	Y+5, r18	; 0x05
     89a:	3e 83       	std	Y+6, r19	; 0x06
     89c:	4f 83       	std	Y+7, r20	; 0x07
     89e:	58 87       	std	Y+8, r21	; 0x08
     8a0:	89 e0       	ldi	r24, 0x09	; 9
     8a2:	e8 2e       	mov	r14, r24
     8a4:	f1 2c       	mov	r15, r1
     8a6:	ec 0e       	add	r14, r28
     8a8:	fd 1e       	adc	r15, r29
     8aa:	ce 01       	movw	r24, r28
     8ac:	01 96       	adiw	r24, 0x01	; 1
     8ae:	b7 01       	movw	r22, r14
     8b0:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     8b4:	8e 01       	movw	r16, r28
     8b6:	0f 5e       	subi	r16, 0xEF	; 239
     8b8:	1f 4f       	sbci	r17, 0xFF	; 255
     8ba:	ce 01       	movw	r24, r28
     8bc:	05 96       	adiw	r24, 0x05	; 5
     8be:	b8 01       	movw	r22, r16
     8c0:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     8c4:	89 85       	ldd	r24, Y+9	; 0x09
     8c6:	82 30       	cpi	r24, 0x02	; 2
     8c8:	40 f0       	brcs	.+16     	; 0x8da <__gtsf2+0x56>
     8ca:	89 89       	ldd	r24, Y+17	; 0x11
     8cc:	82 30       	cpi	r24, 0x02	; 2
     8ce:	28 f0       	brcs	.+10     	; 0x8da <__gtsf2+0x56>
     8d0:	c7 01       	movw	r24, r14
     8d2:	b8 01       	movw	r22, r16
     8d4:	0e 94 20 07 	call	0xe40	; 0xe40 <__fpcmp_parts_f>
     8d8:	01 c0       	rjmp	.+2      	; 0x8dc <__gtsf2+0x58>
     8da:	8f ef       	ldi	r24, 0xFF	; 255
     8dc:	68 96       	adiw	r28, 0x18	; 24
     8de:	e6 e0       	ldi	r30, 0x06	; 6
     8e0:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <__epilogue_restores__+0x18>

000008e4 <__gesf2>:
     8e4:	a8 e1       	ldi	r26, 0x18	; 24
     8e6:	b0 e0       	ldi	r27, 0x00	; 0
     8e8:	e8 e7       	ldi	r30, 0x78	; 120
     8ea:	f4 e0       	ldi	r31, 0x04	; 4
     8ec:	0c 94 3b 16 	jmp	0x2c76	; 0x2c76 <__prologue_saves__+0x18>
     8f0:	69 83       	std	Y+1, r22	; 0x01
     8f2:	7a 83       	std	Y+2, r23	; 0x02
     8f4:	8b 83       	std	Y+3, r24	; 0x03
     8f6:	9c 83       	std	Y+4, r25	; 0x04
     8f8:	2d 83       	std	Y+5, r18	; 0x05
     8fa:	3e 83       	std	Y+6, r19	; 0x06
     8fc:	4f 83       	std	Y+7, r20	; 0x07
     8fe:	58 87       	std	Y+8, r21	; 0x08
     900:	89 e0       	ldi	r24, 0x09	; 9
     902:	e8 2e       	mov	r14, r24
     904:	f1 2c       	mov	r15, r1
     906:	ec 0e       	add	r14, r28
     908:	fd 1e       	adc	r15, r29
     90a:	ce 01       	movw	r24, r28
     90c:	01 96       	adiw	r24, 0x01	; 1
     90e:	b7 01       	movw	r22, r14
     910:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     914:	8e 01       	movw	r16, r28
     916:	0f 5e       	subi	r16, 0xEF	; 239
     918:	1f 4f       	sbci	r17, 0xFF	; 255
     91a:	ce 01       	movw	r24, r28
     91c:	05 96       	adiw	r24, 0x05	; 5
     91e:	b8 01       	movw	r22, r16
     920:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     924:	89 85       	ldd	r24, Y+9	; 0x09
     926:	82 30       	cpi	r24, 0x02	; 2
     928:	40 f0       	brcs	.+16     	; 0x93a <__gesf2+0x56>
     92a:	89 89       	ldd	r24, Y+17	; 0x11
     92c:	82 30       	cpi	r24, 0x02	; 2
     92e:	28 f0       	brcs	.+10     	; 0x93a <__gesf2+0x56>
     930:	c7 01       	movw	r24, r14
     932:	b8 01       	movw	r22, r16
     934:	0e 94 20 07 	call	0xe40	; 0xe40 <__fpcmp_parts_f>
     938:	01 c0       	rjmp	.+2      	; 0x93c <__gesf2+0x58>
     93a:	8f ef       	ldi	r24, 0xFF	; 255
     93c:	68 96       	adiw	r28, 0x18	; 24
     93e:	e6 e0       	ldi	r30, 0x06	; 6
     940:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <__epilogue_restores__+0x18>

00000944 <__ltsf2>:
     944:	a8 e1       	ldi	r26, 0x18	; 24
     946:	b0 e0       	ldi	r27, 0x00	; 0
     948:	e8 ea       	ldi	r30, 0xA8	; 168
     94a:	f4 e0       	ldi	r31, 0x04	; 4
     94c:	0c 94 3b 16 	jmp	0x2c76	; 0x2c76 <__prologue_saves__+0x18>
     950:	69 83       	std	Y+1, r22	; 0x01
     952:	7a 83       	std	Y+2, r23	; 0x02
     954:	8b 83       	std	Y+3, r24	; 0x03
     956:	9c 83       	std	Y+4, r25	; 0x04
     958:	2d 83       	std	Y+5, r18	; 0x05
     95a:	3e 83       	std	Y+6, r19	; 0x06
     95c:	4f 83       	std	Y+7, r20	; 0x07
     95e:	58 87       	std	Y+8, r21	; 0x08
     960:	89 e0       	ldi	r24, 0x09	; 9
     962:	e8 2e       	mov	r14, r24
     964:	f1 2c       	mov	r15, r1
     966:	ec 0e       	add	r14, r28
     968:	fd 1e       	adc	r15, r29
     96a:	ce 01       	movw	r24, r28
     96c:	01 96       	adiw	r24, 0x01	; 1
     96e:	b7 01       	movw	r22, r14
     970:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     974:	8e 01       	movw	r16, r28
     976:	0f 5e       	subi	r16, 0xEF	; 239
     978:	1f 4f       	sbci	r17, 0xFF	; 255
     97a:	ce 01       	movw	r24, r28
     97c:	05 96       	adiw	r24, 0x05	; 5
     97e:	b8 01       	movw	r22, r16
     980:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     984:	89 85       	ldd	r24, Y+9	; 0x09
     986:	82 30       	cpi	r24, 0x02	; 2
     988:	40 f0       	brcs	.+16     	; 0x99a <__ltsf2+0x56>
     98a:	89 89       	ldd	r24, Y+17	; 0x11
     98c:	82 30       	cpi	r24, 0x02	; 2
     98e:	28 f0       	brcs	.+10     	; 0x99a <__ltsf2+0x56>
     990:	c7 01       	movw	r24, r14
     992:	b8 01       	movw	r22, r16
     994:	0e 94 20 07 	call	0xe40	; 0xe40 <__fpcmp_parts_f>
     998:	01 c0       	rjmp	.+2      	; 0x99c <__ltsf2+0x58>
     99a:	81 e0       	ldi	r24, 0x01	; 1
     99c:	68 96       	adiw	r28, 0x18	; 24
     99e:	e6 e0       	ldi	r30, 0x06	; 6
     9a0:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <__epilogue_restores__+0x18>

000009a4 <__floatsisf>:
     9a4:	a8 e0       	ldi	r26, 0x08	; 8
     9a6:	b0 e0       	ldi	r27, 0x00	; 0
     9a8:	e8 ed       	ldi	r30, 0xD8	; 216
     9aa:	f4 e0       	ldi	r31, 0x04	; 4
     9ac:	0c 94 38 16 	jmp	0x2c70	; 0x2c70 <__prologue_saves__+0x12>
     9b0:	9b 01       	movw	r18, r22
     9b2:	ac 01       	movw	r20, r24
     9b4:	83 e0       	ldi	r24, 0x03	; 3
     9b6:	89 83       	std	Y+1, r24	; 0x01
     9b8:	da 01       	movw	r26, r20
     9ba:	c9 01       	movw	r24, r18
     9bc:	88 27       	eor	r24, r24
     9be:	b7 fd       	sbrc	r27, 7
     9c0:	83 95       	inc	r24
     9c2:	99 27       	eor	r25, r25
     9c4:	aa 27       	eor	r26, r26
     9c6:	bb 27       	eor	r27, r27
     9c8:	b8 2e       	mov	r11, r24
     9ca:	21 15       	cp	r18, r1
     9cc:	31 05       	cpc	r19, r1
     9ce:	41 05       	cpc	r20, r1
     9d0:	51 05       	cpc	r21, r1
     9d2:	19 f4       	brne	.+6      	; 0x9da <__floatsisf+0x36>
     9d4:	82 e0       	ldi	r24, 0x02	; 2
     9d6:	89 83       	std	Y+1, r24	; 0x01
     9d8:	3a c0       	rjmp	.+116    	; 0xa4e <__floatsisf+0xaa>
     9da:	88 23       	and	r24, r24
     9dc:	a9 f0       	breq	.+42     	; 0xa08 <__floatsisf+0x64>
     9de:	20 30       	cpi	r18, 0x00	; 0
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	38 07       	cpc	r19, r24
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	48 07       	cpc	r20, r24
     9e8:	80 e8       	ldi	r24, 0x80	; 128
     9ea:	58 07       	cpc	r21, r24
     9ec:	29 f4       	brne	.+10     	; 0x9f8 <__floatsisf+0x54>
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	70 e0       	ldi	r23, 0x00	; 0
     9f2:	80 e0       	ldi	r24, 0x00	; 0
     9f4:	9f ec       	ldi	r25, 0xCF	; 207
     9f6:	30 c0       	rjmp	.+96     	; 0xa58 <__floatsisf+0xb4>
     9f8:	ee 24       	eor	r14, r14
     9fa:	ff 24       	eor	r15, r15
     9fc:	87 01       	movw	r16, r14
     9fe:	e2 1a       	sub	r14, r18
     a00:	f3 0a       	sbc	r15, r19
     a02:	04 0b       	sbc	r16, r20
     a04:	15 0b       	sbc	r17, r21
     a06:	02 c0       	rjmp	.+4      	; 0xa0c <__floatsisf+0x68>
     a08:	79 01       	movw	r14, r18
     a0a:	8a 01       	movw	r16, r20
     a0c:	8e e1       	ldi	r24, 0x1E	; 30
     a0e:	c8 2e       	mov	r12, r24
     a10:	d1 2c       	mov	r13, r1
     a12:	dc 82       	std	Y+4, r13	; 0x04
     a14:	cb 82       	std	Y+3, r12	; 0x03
     a16:	ed 82       	std	Y+5, r14	; 0x05
     a18:	fe 82       	std	Y+6, r15	; 0x06
     a1a:	0f 83       	std	Y+7, r16	; 0x07
     a1c:	18 87       	std	Y+8, r17	; 0x08
     a1e:	c8 01       	movw	r24, r16
     a20:	b7 01       	movw	r22, r14
     a22:	0e 94 84 05 	call	0xb08	; 0xb08 <__clzsi2>
     a26:	01 97       	sbiw	r24, 0x01	; 1
     a28:	18 16       	cp	r1, r24
     a2a:	19 06       	cpc	r1, r25
     a2c:	84 f4       	brge	.+32     	; 0xa4e <__floatsisf+0xaa>
     a2e:	08 2e       	mov	r0, r24
     a30:	04 c0       	rjmp	.+8      	; 0xa3a <__floatsisf+0x96>
     a32:	ee 0c       	add	r14, r14
     a34:	ff 1c       	adc	r15, r15
     a36:	00 1f       	adc	r16, r16
     a38:	11 1f       	adc	r17, r17
     a3a:	0a 94       	dec	r0
     a3c:	d2 f7       	brpl	.-12     	; 0xa32 <__floatsisf+0x8e>
     a3e:	ed 82       	std	Y+5, r14	; 0x05
     a40:	fe 82       	std	Y+6, r15	; 0x06
     a42:	0f 83       	std	Y+7, r16	; 0x07
     a44:	18 87       	std	Y+8, r17	; 0x08
     a46:	c8 1a       	sub	r12, r24
     a48:	d9 0a       	sbc	r13, r25
     a4a:	dc 82       	std	Y+4, r13	; 0x04
     a4c:	cb 82       	std	Y+3, r12	; 0x03
     a4e:	ba 82       	std	Y+2, r11	; 0x02
     a50:	ce 01       	movw	r24, r28
     a52:	01 96       	adiw	r24, 0x01	; 1
     a54:	0e 94 d3 05 	call	0xba6	; 0xba6 <__pack_f>
     a58:	28 96       	adiw	r28, 0x08	; 8
     a5a:	e9 e0       	ldi	r30, 0x09	; 9
     a5c:	0c 94 54 16 	jmp	0x2ca8	; 0x2ca8 <__epilogue_restores__+0x12>

00000a60 <__fixsfsi>:
     a60:	ac e0       	ldi	r26, 0x0C	; 12
     a62:	b0 e0       	ldi	r27, 0x00	; 0
     a64:	e6 e3       	ldi	r30, 0x36	; 54
     a66:	f5 e0       	ldi	r31, 0x05	; 5
     a68:	0c 94 3f 16 	jmp	0x2c7e	; 0x2c7e <__prologue_saves__+0x20>
     a6c:	69 83       	std	Y+1, r22	; 0x01
     a6e:	7a 83       	std	Y+2, r23	; 0x02
     a70:	8b 83       	std	Y+3, r24	; 0x03
     a72:	9c 83       	std	Y+4, r25	; 0x04
     a74:	ce 01       	movw	r24, r28
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	be 01       	movw	r22, r28
     a7a:	6b 5f       	subi	r22, 0xFB	; 251
     a7c:	7f 4f       	sbci	r23, 0xFF	; 255
     a7e:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     a82:	8d 81       	ldd	r24, Y+5	; 0x05
     a84:	82 30       	cpi	r24, 0x02	; 2
     a86:	61 f1       	breq	.+88     	; 0xae0 <__fixsfsi+0x80>
     a88:	82 30       	cpi	r24, 0x02	; 2
     a8a:	50 f1       	brcs	.+84     	; 0xae0 <__fixsfsi+0x80>
     a8c:	84 30       	cpi	r24, 0x04	; 4
     a8e:	21 f4       	brne	.+8      	; 0xa98 <__fixsfsi+0x38>
     a90:	8e 81       	ldd	r24, Y+6	; 0x06
     a92:	88 23       	and	r24, r24
     a94:	51 f1       	breq	.+84     	; 0xaea <__fixsfsi+0x8a>
     a96:	2e c0       	rjmp	.+92     	; 0xaf4 <__fixsfsi+0x94>
     a98:	2f 81       	ldd	r18, Y+7	; 0x07
     a9a:	38 85       	ldd	r19, Y+8	; 0x08
     a9c:	37 fd       	sbrc	r19, 7
     a9e:	20 c0       	rjmp	.+64     	; 0xae0 <__fixsfsi+0x80>
     aa0:	6e 81       	ldd	r22, Y+6	; 0x06
     aa2:	2f 31       	cpi	r18, 0x1F	; 31
     aa4:	31 05       	cpc	r19, r1
     aa6:	1c f0       	brlt	.+6      	; 0xaae <__fixsfsi+0x4e>
     aa8:	66 23       	and	r22, r22
     aaa:	f9 f0       	breq	.+62     	; 0xaea <__fixsfsi+0x8a>
     aac:	23 c0       	rjmp	.+70     	; 0xaf4 <__fixsfsi+0x94>
     aae:	8e e1       	ldi	r24, 0x1E	; 30
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	82 1b       	sub	r24, r18
     ab4:	93 0b       	sbc	r25, r19
     ab6:	29 85       	ldd	r18, Y+9	; 0x09
     ab8:	3a 85       	ldd	r19, Y+10	; 0x0a
     aba:	4b 85       	ldd	r20, Y+11	; 0x0b
     abc:	5c 85       	ldd	r21, Y+12	; 0x0c
     abe:	04 c0       	rjmp	.+8      	; 0xac8 <__fixsfsi+0x68>
     ac0:	56 95       	lsr	r21
     ac2:	47 95       	ror	r20
     ac4:	37 95       	ror	r19
     ac6:	27 95       	ror	r18
     ac8:	8a 95       	dec	r24
     aca:	d2 f7       	brpl	.-12     	; 0xac0 <__fixsfsi+0x60>
     acc:	66 23       	and	r22, r22
     ace:	b1 f0       	breq	.+44     	; 0xafc <__fixsfsi+0x9c>
     ad0:	50 95       	com	r21
     ad2:	40 95       	com	r20
     ad4:	30 95       	com	r19
     ad6:	21 95       	neg	r18
     ad8:	3f 4f       	sbci	r19, 0xFF	; 255
     ada:	4f 4f       	sbci	r20, 0xFF	; 255
     adc:	5f 4f       	sbci	r21, 0xFF	; 255
     ade:	0e c0       	rjmp	.+28     	; 0xafc <__fixsfsi+0x9c>
     ae0:	20 e0       	ldi	r18, 0x00	; 0
     ae2:	30 e0       	ldi	r19, 0x00	; 0
     ae4:	40 e0       	ldi	r20, 0x00	; 0
     ae6:	50 e0       	ldi	r21, 0x00	; 0
     ae8:	09 c0       	rjmp	.+18     	; 0xafc <__fixsfsi+0x9c>
     aea:	2f ef       	ldi	r18, 0xFF	; 255
     aec:	3f ef       	ldi	r19, 0xFF	; 255
     aee:	4f ef       	ldi	r20, 0xFF	; 255
     af0:	5f e7       	ldi	r21, 0x7F	; 127
     af2:	04 c0       	rjmp	.+8      	; 0xafc <__fixsfsi+0x9c>
     af4:	20 e0       	ldi	r18, 0x00	; 0
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	40 e0       	ldi	r20, 0x00	; 0
     afa:	50 e8       	ldi	r21, 0x80	; 128
     afc:	b9 01       	movw	r22, r18
     afe:	ca 01       	movw	r24, r20
     b00:	2c 96       	adiw	r28, 0x0c	; 12
     b02:	e2 e0       	ldi	r30, 0x02	; 2
     b04:	0c 94 5b 16 	jmp	0x2cb6	; 0x2cb6 <__epilogue_restores__+0x20>

00000b08 <__clzsi2>:
     b08:	ef 92       	push	r14
     b0a:	ff 92       	push	r15
     b0c:	0f 93       	push	r16
     b0e:	1f 93       	push	r17
     b10:	7b 01       	movw	r14, r22
     b12:	8c 01       	movw	r16, r24
     b14:	80 e0       	ldi	r24, 0x00	; 0
     b16:	e8 16       	cp	r14, r24
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	f8 06       	cpc	r15, r24
     b1c:	81 e0       	ldi	r24, 0x01	; 1
     b1e:	08 07       	cpc	r16, r24
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	18 07       	cpc	r17, r24
     b24:	88 f4       	brcc	.+34     	; 0xb48 <__clzsi2+0x40>
     b26:	8f ef       	ldi	r24, 0xFF	; 255
     b28:	e8 16       	cp	r14, r24
     b2a:	f1 04       	cpc	r15, r1
     b2c:	01 05       	cpc	r16, r1
     b2e:	11 05       	cpc	r17, r1
     b30:	31 f0       	breq	.+12     	; 0xb3e <__clzsi2+0x36>
     b32:	28 f0       	brcs	.+10     	; 0xb3e <__clzsi2+0x36>
     b34:	88 e0       	ldi	r24, 0x08	; 8
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	a0 e0       	ldi	r26, 0x00	; 0
     b3a:	b0 e0       	ldi	r27, 0x00	; 0
     b3c:	17 c0       	rjmp	.+46     	; 0xb6c <__clzsi2+0x64>
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	a0 e0       	ldi	r26, 0x00	; 0
     b44:	b0 e0       	ldi	r27, 0x00	; 0
     b46:	12 c0       	rjmp	.+36     	; 0xb6c <__clzsi2+0x64>
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	e8 16       	cp	r14, r24
     b4c:	80 e0       	ldi	r24, 0x00	; 0
     b4e:	f8 06       	cpc	r15, r24
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	08 07       	cpc	r16, r24
     b54:	81 e0       	ldi	r24, 0x01	; 1
     b56:	18 07       	cpc	r17, r24
     b58:	28 f0       	brcs	.+10     	; 0xb64 <__clzsi2+0x5c>
     b5a:	88 e1       	ldi	r24, 0x18	; 24
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	a0 e0       	ldi	r26, 0x00	; 0
     b60:	b0 e0       	ldi	r27, 0x00	; 0
     b62:	04 c0       	rjmp	.+8      	; 0xb6c <__clzsi2+0x64>
     b64:	80 e1       	ldi	r24, 0x10	; 16
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	a0 e0       	ldi	r26, 0x00	; 0
     b6a:	b0 e0       	ldi	r27, 0x00	; 0
     b6c:	20 e2       	ldi	r18, 0x20	; 32
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	40 e0       	ldi	r20, 0x00	; 0
     b72:	50 e0       	ldi	r21, 0x00	; 0
     b74:	28 1b       	sub	r18, r24
     b76:	39 0b       	sbc	r19, r25
     b78:	4a 0b       	sbc	r20, r26
     b7a:	5b 0b       	sbc	r21, r27
     b7c:	04 c0       	rjmp	.+8      	; 0xb86 <__clzsi2+0x7e>
     b7e:	16 95       	lsr	r17
     b80:	07 95       	ror	r16
     b82:	f7 94       	ror	r15
     b84:	e7 94       	ror	r14
     b86:	8a 95       	dec	r24
     b88:	d2 f7       	brpl	.-12     	; 0xb7e <__clzsi2+0x76>
     b8a:	f7 01       	movw	r30, r14
     b8c:	e0 58       	subi	r30, 0x80	; 128
     b8e:	ff 4f       	sbci	r31, 0xFF	; 255
     b90:	80 81       	ld	r24, Z
     b92:	28 1b       	sub	r18, r24
     b94:	31 09       	sbc	r19, r1
     b96:	41 09       	sbc	r20, r1
     b98:	51 09       	sbc	r21, r1
     b9a:	c9 01       	movw	r24, r18
     b9c:	1f 91       	pop	r17
     b9e:	0f 91       	pop	r16
     ba0:	ff 90       	pop	r15
     ba2:	ef 90       	pop	r14
     ba4:	08 95       	ret

00000ba6 <__pack_f>:
     ba6:	df 92       	push	r13
     ba8:	ef 92       	push	r14
     baa:	ff 92       	push	r15
     bac:	0f 93       	push	r16
     bae:	1f 93       	push	r17
     bb0:	fc 01       	movw	r30, r24
     bb2:	e4 80       	ldd	r14, Z+4	; 0x04
     bb4:	f5 80       	ldd	r15, Z+5	; 0x05
     bb6:	06 81       	ldd	r16, Z+6	; 0x06
     bb8:	17 81       	ldd	r17, Z+7	; 0x07
     bba:	d1 80       	ldd	r13, Z+1	; 0x01
     bbc:	80 81       	ld	r24, Z
     bbe:	82 30       	cpi	r24, 0x02	; 2
     bc0:	48 f4       	brcc	.+18     	; 0xbd4 <__pack_f+0x2e>
     bc2:	80 e0       	ldi	r24, 0x00	; 0
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	a0 e1       	ldi	r26, 0x10	; 16
     bc8:	b0 e0       	ldi	r27, 0x00	; 0
     bca:	e8 2a       	or	r14, r24
     bcc:	f9 2a       	or	r15, r25
     bce:	0a 2b       	or	r16, r26
     bd0:	1b 2b       	or	r17, r27
     bd2:	a5 c0       	rjmp	.+330    	; 0xd1e <__pack_f+0x178>
     bd4:	84 30       	cpi	r24, 0x04	; 4
     bd6:	09 f4       	brne	.+2      	; 0xbda <__pack_f+0x34>
     bd8:	9f c0       	rjmp	.+318    	; 0xd18 <__pack_f+0x172>
     bda:	82 30       	cpi	r24, 0x02	; 2
     bdc:	21 f4       	brne	.+8      	; 0xbe6 <__pack_f+0x40>
     bde:	ee 24       	eor	r14, r14
     be0:	ff 24       	eor	r15, r15
     be2:	87 01       	movw	r16, r14
     be4:	05 c0       	rjmp	.+10     	; 0xbf0 <__pack_f+0x4a>
     be6:	e1 14       	cp	r14, r1
     be8:	f1 04       	cpc	r15, r1
     bea:	01 05       	cpc	r16, r1
     bec:	11 05       	cpc	r17, r1
     bee:	19 f4       	brne	.+6      	; 0xbf6 <__pack_f+0x50>
     bf0:	e0 e0       	ldi	r30, 0x00	; 0
     bf2:	f0 e0       	ldi	r31, 0x00	; 0
     bf4:	96 c0       	rjmp	.+300    	; 0xd22 <__pack_f+0x17c>
     bf6:	62 81       	ldd	r22, Z+2	; 0x02
     bf8:	73 81       	ldd	r23, Z+3	; 0x03
     bfa:	9f ef       	ldi	r25, 0xFF	; 255
     bfc:	62 38       	cpi	r22, 0x82	; 130
     bfe:	79 07       	cpc	r23, r25
     c00:	0c f0       	brlt	.+2      	; 0xc04 <__pack_f+0x5e>
     c02:	5b c0       	rjmp	.+182    	; 0xcba <__pack_f+0x114>
     c04:	22 e8       	ldi	r18, 0x82	; 130
     c06:	3f ef       	ldi	r19, 0xFF	; 255
     c08:	26 1b       	sub	r18, r22
     c0a:	37 0b       	sbc	r19, r23
     c0c:	2a 31       	cpi	r18, 0x1A	; 26
     c0e:	31 05       	cpc	r19, r1
     c10:	2c f0       	brlt	.+10     	; 0xc1c <__pack_f+0x76>
     c12:	20 e0       	ldi	r18, 0x00	; 0
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	40 e0       	ldi	r20, 0x00	; 0
     c18:	50 e0       	ldi	r21, 0x00	; 0
     c1a:	2a c0       	rjmp	.+84     	; 0xc70 <__pack_f+0xca>
     c1c:	b8 01       	movw	r22, r16
     c1e:	a7 01       	movw	r20, r14
     c20:	02 2e       	mov	r0, r18
     c22:	04 c0       	rjmp	.+8      	; 0xc2c <__pack_f+0x86>
     c24:	76 95       	lsr	r23
     c26:	67 95       	ror	r22
     c28:	57 95       	ror	r21
     c2a:	47 95       	ror	r20
     c2c:	0a 94       	dec	r0
     c2e:	d2 f7       	brpl	.-12     	; 0xc24 <__pack_f+0x7e>
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	a0 e0       	ldi	r26, 0x00	; 0
     c36:	b0 e0       	ldi	r27, 0x00	; 0
     c38:	04 c0       	rjmp	.+8      	; 0xc42 <__pack_f+0x9c>
     c3a:	88 0f       	add	r24, r24
     c3c:	99 1f       	adc	r25, r25
     c3e:	aa 1f       	adc	r26, r26
     c40:	bb 1f       	adc	r27, r27
     c42:	2a 95       	dec	r18
     c44:	d2 f7       	brpl	.-12     	; 0xc3a <__pack_f+0x94>
     c46:	01 97       	sbiw	r24, 0x01	; 1
     c48:	a1 09       	sbc	r26, r1
     c4a:	b1 09       	sbc	r27, r1
     c4c:	8e 21       	and	r24, r14
     c4e:	9f 21       	and	r25, r15
     c50:	a0 23       	and	r26, r16
     c52:	b1 23       	and	r27, r17
     c54:	00 97       	sbiw	r24, 0x00	; 0
     c56:	a1 05       	cpc	r26, r1
     c58:	b1 05       	cpc	r27, r1
     c5a:	21 f0       	breq	.+8      	; 0xc64 <__pack_f+0xbe>
     c5c:	81 e0       	ldi	r24, 0x01	; 1
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	a0 e0       	ldi	r26, 0x00	; 0
     c62:	b0 e0       	ldi	r27, 0x00	; 0
     c64:	9a 01       	movw	r18, r20
     c66:	ab 01       	movw	r20, r22
     c68:	28 2b       	or	r18, r24
     c6a:	39 2b       	or	r19, r25
     c6c:	4a 2b       	or	r20, r26
     c6e:	5b 2b       	or	r21, r27
     c70:	da 01       	movw	r26, r20
     c72:	c9 01       	movw	r24, r18
     c74:	8f 77       	andi	r24, 0x7F	; 127
     c76:	90 70       	andi	r25, 0x00	; 0
     c78:	a0 70       	andi	r26, 0x00	; 0
     c7a:	b0 70       	andi	r27, 0x00	; 0
     c7c:	80 34       	cpi	r24, 0x40	; 64
     c7e:	91 05       	cpc	r25, r1
     c80:	a1 05       	cpc	r26, r1
     c82:	b1 05       	cpc	r27, r1
     c84:	39 f4       	brne	.+14     	; 0xc94 <__pack_f+0xee>
     c86:	27 ff       	sbrs	r18, 7
     c88:	09 c0       	rjmp	.+18     	; 0xc9c <__pack_f+0xf6>
     c8a:	20 5c       	subi	r18, 0xC0	; 192
     c8c:	3f 4f       	sbci	r19, 0xFF	; 255
     c8e:	4f 4f       	sbci	r20, 0xFF	; 255
     c90:	5f 4f       	sbci	r21, 0xFF	; 255
     c92:	04 c0       	rjmp	.+8      	; 0xc9c <__pack_f+0xf6>
     c94:	21 5c       	subi	r18, 0xC1	; 193
     c96:	3f 4f       	sbci	r19, 0xFF	; 255
     c98:	4f 4f       	sbci	r20, 0xFF	; 255
     c9a:	5f 4f       	sbci	r21, 0xFF	; 255
     c9c:	e0 e0       	ldi	r30, 0x00	; 0
     c9e:	f0 e0       	ldi	r31, 0x00	; 0
     ca0:	20 30       	cpi	r18, 0x00	; 0
     ca2:	a0 e0       	ldi	r26, 0x00	; 0
     ca4:	3a 07       	cpc	r19, r26
     ca6:	a0 e0       	ldi	r26, 0x00	; 0
     ca8:	4a 07       	cpc	r20, r26
     caa:	a0 e4       	ldi	r26, 0x40	; 64
     cac:	5a 07       	cpc	r21, r26
     cae:	10 f0       	brcs	.+4      	; 0xcb4 <__pack_f+0x10e>
     cb0:	e1 e0       	ldi	r30, 0x01	; 1
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	79 01       	movw	r14, r18
     cb6:	8a 01       	movw	r16, r20
     cb8:	27 c0       	rjmp	.+78     	; 0xd08 <__pack_f+0x162>
     cba:	60 38       	cpi	r22, 0x80	; 128
     cbc:	71 05       	cpc	r23, r1
     cbe:	64 f5       	brge	.+88     	; 0xd18 <__pack_f+0x172>
     cc0:	fb 01       	movw	r30, r22
     cc2:	e1 58       	subi	r30, 0x81	; 129
     cc4:	ff 4f       	sbci	r31, 0xFF	; 255
     cc6:	d8 01       	movw	r26, r16
     cc8:	c7 01       	movw	r24, r14
     cca:	8f 77       	andi	r24, 0x7F	; 127
     ccc:	90 70       	andi	r25, 0x00	; 0
     cce:	a0 70       	andi	r26, 0x00	; 0
     cd0:	b0 70       	andi	r27, 0x00	; 0
     cd2:	80 34       	cpi	r24, 0x40	; 64
     cd4:	91 05       	cpc	r25, r1
     cd6:	a1 05       	cpc	r26, r1
     cd8:	b1 05       	cpc	r27, r1
     cda:	39 f4       	brne	.+14     	; 0xcea <__pack_f+0x144>
     cdc:	e7 fe       	sbrs	r14, 7
     cde:	0d c0       	rjmp	.+26     	; 0xcfa <__pack_f+0x154>
     ce0:	80 e4       	ldi	r24, 0x40	; 64
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	a0 e0       	ldi	r26, 0x00	; 0
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	04 c0       	rjmp	.+8      	; 0xcf2 <__pack_f+0x14c>
     cea:	8f e3       	ldi	r24, 0x3F	; 63
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	a0 e0       	ldi	r26, 0x00	; 0
     cf0:	b0 e0       	ldi	r27, 0x00	; 0
     cf2:	e8 0e       	add	r14, r24
     cf4:	f9 1e       	adc	r15, r25
     cf6:	0a 1f       	adc	r16, r26
     cf8:	1b 1f       	adc	r17, r27
     cfa:	17 ff       	sbrs	r17, 7
     cfc:	05 c0       	rjmp	.+10     	; 0xd08 <__pack_f+0x162>
     cfe:	16 95       	lsr	r17
     d00:	07 95       	ror	r16
     d02:	f7 94       	ror	r15
     d04:	e7 94       	ror	r14
     d06:	31 96       	adiw	r30, 0x01	; 1
     d08:	87 e0       	ldi	r24, 0x07	; 7
     d0a:	16 95       	lsr	r17
     d0c:	07 95       	ror	r16
     d0e:	f7 94       	ror	r15
     d10:	e7 94       	ror	r14
     d12:	8a 95       	dec	r24
     d14:	d1 f7       	brne	.-12     	; 0xd0a <__pack_f+0x164>
     d16:	05 c0       	rjmp	.+10     	; 0xd22 <__pack_f+0x17c>
     d18:	ee 24       	eor	r14, r14
     d1a:	ff 24       	eor	r15, r15
     d1c:	87 01       	movw	r16, r14
     d1e:	ef ef       	ldi	r30, 0xFF	; 255
     d20:	f0 e0       	ldi	r31, 0x00	; 0
     d22:	6e 2f       	mov	r22, r30
     d24:	67 95       	ror	r22
     d26:	66 27       	eor	r22, r22
     d28:	67 95       	ror	r22
     d2a:	90 2f       	mov	r25, r16
     d2c:	9f 77       	andi	r25, 0x7F	; 127
     d2e:	d7 94       	ror	r13
     d30:	dd 24       	eor	r13, r13
     d32:	d7 94       	ror	r13
     d34:	8e 2f       	mov	r24, r30
     d36:	86 95       	lsr	r24
     d38:	49 2f       	mov	r20, r25
     d3a:	46 2b       	or	r20, r22
     d3c:	58 2f       	mov	r21, r24
     d3e:	5d 29       	or	r21, r13
     d40:	b7 01       	movw	r22, r14
     d42:	ca 01       	movw	r24, r20
     d44:	1f 91       	pop	r17
     d46:	0f 91       	pop	r16
     d48:	ff 90       	pop	r15
     d4a:	ef 90       	pop	r14
     d4c:	df 90       	pop	r13
     d4e:	08 95       	ret

00000d50 <__unpack_f>:
     d50:	fc 01       	movw	r30, r24
     d52:	db 01       	movw	r26, r22
     d54:	40 81       	ld	r20, Z
     d56:	51 81       	ldd	r21, Z+1	; 0x01
     d58:	22 81       	ldd	r18, Z+2	; 0x02
     d5a:	62 2f       	mov	r22, r18
     d5c:	6f 77       	andi	r22, 0x7F	; 127
     d5e:	70 e0       	ldi	r23, 0x00	; 0
     d60:	22 1f       	adc	r18, r18
     d62:	22 27       	eor	r18, r18
     d64:	22 1f       	adc	r18, r18
     d66:	93 81       	ldd	r25, Z+3	; 0x03
     d68:	89 2f       	mov	r24, r25
     d6a:	88 0f       	add	r24, r24
     d6c:	82 2b       	or	r24, r18
     d6e:	28 2f       	mov	r18, r24
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	99 1f       	adc	r25, r25
     d74:	99 27       	eor	r25, r25
     d76:	99 1f       	adc	r25, r25
     d78:	11 96       	adiw	r26, 0x01	; 1
     d7a:	9c 93       	st	X, r25
     d7c:	11 97       	sbiw	r26, 0x01	; 1
     d7e:	21 15       	cp	r18, r1
     d80:	31 05       	cpc	r19, r1
     d82:	a9 f5       	brne	.+106    	; 0xdee <__unpack_f+0x9e>
     d84:	41 15       	cp	r20, r1
     d86:	51 05       	cpc	r21, r1
     d88:	61 05       	cpc	r22, r1
     d8a:	71 05       	cpc	r23, r1
     d8c:	11 f4       	brne	.+4      	; 0xd92 <__unpack_f+0x42>
     d8e:	82 e0       	ldi	r24, 0x02	; 2
     d90:	37 c0       	rjmp	.+110    	; 0xe00 <__unpack_f+0xb0>
     d92:	82 e8       	ldi	r24, 0x82	; 130
     d94:	9f ef       	ldi	r25, 0xFF	; 255
     d96:	13 96       	adiw	r26, 0x03	; 3
     d98:	9c 93       	st	X, r25
     d9a:	8e 93       	st	-X, r24
     d9c:	12 97       	sbiw	r26, 0x02	; 2
     d9e:	9a 01       	movw	r18, r20
     da0:	ab 01       	movw	r20, r22
     da2:	67 e0       	ldi	r22, 0x07	; 7
     da4:	22 0f       	add	r18, r18
     da6:	33 1f       	adc	r19, r19
     da8:	44 1f       	adc	r20, r20
     daa:	55 1f       	adc	r21, r21
     dac:	6a 95       	dec	r22
     dae:	d1 f7       	brne	.-12     	; 0xda4 <__unpack_f+0x54>
     db0:	83 e0       	ldi	r24, 0x03	; 3
     db2:	8c 93       	st	X, r24
     db4:	0d c0       	rjmp	.+26     	; 0xdd0 <__unpack_f+0x80>
     db6:	22 0f       	add	r18, r18
     db8:	33 1f       	adc	r19, r19
     dba:	44 1f       	adc	r20, r20
     dbc:	55 1f       	adc	r21, r21
     dbe:	12 96       	adiw	r26, 0x02	; 2
     dc0:	8d 91       	ld	r24, X+
     dc2:	9c 91       	ld	r25, X
     dc4:	13 97       	sbiw	r26, 0x03	; 3
     dc6:	01 97       	sbiw	r24, 0x01	; 1
     dc8:	13 96       	adiw	r26, 0x03	; 3
     dca:	9c 93       	st	X, r25
     dcc:	8e 93       	st	-X, r24
     dce:	12 97       	sbiw	r26, 0x02	; 2
     dd0:	20 30       	cpi	r18, 0x00	; 0
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	38 07       	cpc	r19, r24
     dd6:	80 e0       	ldi	r24, 0x00	; 0
     dd8:	48 07       	cpc	r20, r24
     dda:	80 e4       	ldi	r24, 0x40	; 64
     ddc:	58 07       	cpc	r21, r24
     dde:	58 f3       	brcs	.-42     	; 0xdb6 <__unpack_f+0x66>
     de0:	14 96       	adiw	r26, 0x04	; 4
     de2:	2d 93       	st	X+, r18
     de4:	3d 93       	st	X+, r19
     de6:	4d 93       	st	X+, r20
     de8:	5c 93       	st	X, r21
     dea:	17 97       	sbiw	r26, 0x07	; 7
     dec:	08 95       	ret
     dee:	2f 3f       	cpi	r18, 0xFF	; 255
     df0:	31 05       	cpc	r19, r1
     df2:	79 f4       	brne	.+30     	; 0xe12 <__unpack_f+0xc2>
     df4:	41 15       	cp	r20, r1
     df6:	51 05       	cpc	r21, r1
     df8:	61 05       	cpc	r22, r1
     dfa:	71 05       	cpc	r23, r1
     dfc:	19 f4       	brne	.+6      	; 0xe04 <__unpack_f+0xb4>
     dfe:	84 e0       	ldi	r24, 0x04	; 4
     e00:	8c 93       	st	X, r24
     e02:	08 95       	ret
     e04:	64 ff       	sbrs	r22, 4
     e06:	03 c0       	rjmp	.+6      	; 0xe0e <__unpack_f+0xbe>
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	8c 93       	st	X, r24
     e0c:	12 c0       	rjmp	.+36     	; 0xe32 <__unpack_f+0xe2>
     e0e:	1c 92       	st	X, r1
     e10:	10 c0       	rjmp	.+32     	; 0xe32 <__unpack_f+0xe2>
     e12:	2f 57       	subi	r18, 0x7F	; 127
     e14:	30 40       	sbci	r19, 0x00	; 0
     e16:	13 96       	adiw	r26, 0x03	; 3
     e18:	3c 93       	st	X, r19
     e1a:	2e 93       	st	-X, r18
     e1c:	12 97       	sbiw	r26, 0x02	; 2
     e1e:	83 e0       	ldi	r24, 0x03	; 3
     e20:	8c 93       	st	X, r24
     e22:	87 e0       	ldi	r24, 0x07	; 7
     e24:	44 0f       	add	r20, r20
     e26:	55 1f       	adc	r21, r21
     e28:	66 1f       	adc	r22, r22
     e2a:	77 1f       	adc	r23, r23
     e2c:	8a 95       	dec	r24
     e2e:	d1 f7       	brne	.-12     	; 0xe24 <__unpack_f+0xd4>
     e30:	70 64       	ori	r23, 0x40	; 64
     e32:	14 96       	adiw	r26, 0x04	; 4
     e34:	4d 93       	st	X+, r20
     e36:	5d 93       	st	X+, r21
     e38:	6d 93       	st	X+, r22
     e3a:	7c 93       	st	X, r23
     e3c:	17 97       	sbiw	r26, 0x07	; 7
     e3e:	08 95       	ret

00000e40 <__fpcmp_parts_f>:
     e40:	1f 93       	push	r17
     e42:	dc 01       	movw	r26, r24
     e44:	fb 01       	movw	r30, r22
     e46:	9c 91       	ld	r25, X
     e48:	92 30       	cpi	r25, 0x02	; 2
     e4a:	08 f4       	brcc	.+2      	; 0xe4e <__fpcmp_parts_f+0xe>
     e4c:	47 c0       	rjmp	.+142    	; 0xedc <__fpcmp_parts_f+0x9c>
     e4e:	80 81       	ld	r24, Z
     e50:	82 30       	cpi	r24, 0x02	; 2
     e52:	08 f4       	brcc	.+2      	; 0xe56 <__fpcmp_parts_f+0x16>
     e54:	43 c0       	rjmp	.+134    	; 0xedc <__fpcmp_parts_f+0x9c>
     e56:	94 30       	cpi	r25, 0x04	; 4
     e58:	51 f4       	brne	.+20     	; 0xe6e <__fpcmp_parts_f+0x2e>
     e5a:	11 96       	adiw	r26, 0x01	; 1
     e5c:	1c 91       	ld	r17, X
     e5e:	84 30       	cpi	r24, 0x04	; 4
     e60:	99 f5       	brne	.+102    	; 0xec8 <__fpcmp_parts_f+0x88>
     e62:	81 81       	ldd	r24, Z+1	; 0x01
     e64:	68 2f       	mov	r22, r24
     e66:	70 e0       	ldi	r23, 0x00	; 0
     e68:	61 1b       	sub	r22, r17
     e6a:	71 09       	sbc	r23, r1
     e6c:	3f c0       	rjmp	.+126    	; 0xeec <__fpcmp_parts_f+0xac>
     e6e:	84 30       	cpi	r24, 0x04	; 4
     e70:	21 f0       	breq	.+8      	; 0xe7a <__fpcmp_parts_f+0x3a>
     e72:	92 30       	cpi	r25, 0x02	; 2
     e74:	31 f4       	brne	.+12     	; 0xe82 <__fpcmp_parts_f+0x42>
     e76:	82 30       	cpi	r24, 0x02	; 2
     e78:	b9 f1       	breq	.+110    	; 0xee8 <__fpcmp_parts_f+0xa8>
     e7a:	81 81       	ldd	r24, Z+1	; 0x01
     e7c:	88 23       	and	r24, r24
     e7e:	89 f1       	breq	.+98     	; 0xee2 <__fpcmp_parts_f+0xa2>
     e80:	2d c0       	rjmp	.+90     	; 0xedc <__fpcmp_parts_f+0x9c>
     e82:	11 96       	adiw	r26, 0x01	; 1
     e84:	1c 91       	ld	r17, X
     e86:	11 97       	sbiw	r26, 0x01	; 1
     e88:	82 30       	cpi	r24, 0x02	; 2
     e8a:	f1 f0       	breq	.+60     	; 0xec8 <__fpcmp_parts_f+0x88>
     e8c:	81 81       	ldd	r24, Z+1	; 0x01
     e8e:	18 17       	cp	r17, r24
     e90:	d9 f4       	brne	.+54     	; 0xec8 <__fpcmp_parts_f+0x88>
     e92:	12 96       	adiw	r26, 0x02	; 2
     e94:	2d 91       	ld	r18, X+
     e96:	3c 91       	ld	r19, X
     e98:	13 97       	sbiw	r26, 0x03	; 3
     e9a:	82 81       	ldd	r24, Z+2	; 0x02
     e9c:	93 81       	ldd	r25, Z+3	; 0x03
     e9e:	82 17       	cp	r24, r18
     ea0:	93 07       	cpc	r25, r19
     ea2:	94 f0       	brlt	.+36     	; 0xec8 <__fpcmp_parts_f+0x88>
     ea4:	28 17       	cp	r18, r24
     ea6:	39 07       	cpc	r19, r25
     ea8:	bc f0       	brlt	.+46     	; 0xed8 <__fpcmp_parts_f+0x98>
     eaa:	14 96       	adiw	r26, 0x04	; 4
     eac:	8d 91       	ld	r24, X+
     eae:	9d 91       	ld	r25, X+
     eb0:	0d 90       	ld	r0, X+
     eb2:	bc 91       	ld	r27, X
     eb4:	a0 2d       	mov	r26, r0
     eb6:	24 81       	ldd	r18, Z+4	; 0x04
     eb8:	35 81       	ldd	r19, Z+5	; 0x05
     eba:	46 81       	ldd	r20, Z+6	; 0x06
     ebc:	57 81       	ldd	r21, Z+7	; 0x07
     ebe:	28 17       	cp	r18, r24
     ec0:	39 07       	cpc	r19, r25
     ec2:	4a 07       	cpc	r20, r26
     ec4:	5b 07       	cpc	r21, r27
     ec6:	18 f4       	brcc	.+6      	; 0xece <__fpcmp_parts_f+0x8e>
     ec8:	11 23       	and	r17, r17
     eca:	41 f0       	breq	.+16     	; 0xedc <__fpcmp_parts_f+0x9c>
     ecc:	0a c0       	rjmp	.+20     	; 0xee2 <__fpcmp_parts_f+0xa2>
     ece:	82 17       	cp	r24, r18
     ed0:	93 07       	cpc	r25, r19
     ed2:	a4 07       	cpc	r26, r20
     ed4:	b5 07       	cpc	r27, r21
     ed6:	40 f4       	brcc	.+16     	; 0xee8 <__fpcmp_parts_f+0xa8>
     ed8:	11 23       	and	r17, r17
     eda:	19 f0       	breq	.+6      	; 0xee2 <__fpcmp_parts_f+0xa2>
     edc:	61 e0       	ldi	r22, 0x01	; 1
     ede:	70 e0       	ldi	r23, 0x00	; 0
     ee0:	05 c0       	rjmp	.+10     	; 0xeec <__fpcmp_parts_f+0xac>
     ee2:	6f ef       	ldi	r22, 0xFF	; 255
     ee4:	7f ef       	ldi	r23, 0xFF	; 255
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <__fpcmp_parts_f+0xac>
     ee8:	60 e0       	ldi	r22, 0x00	; 0
     eea:	70 e0       	ldi	r23, 0x00	; 0
     eec:	cb 01       	movw	r24, r22
     eee:	1f 91       	pop	r17
     ef0:	08 95       	ret

00000ef2 <DIO_VidSetPinDirection>:
#include"DIO_register.h"
#include"DIO_config.h"
#include"DIO_interface.h"

void DIO_VidSetPinDirection		(u8 copy_u8port, u8 copy_U8pin, u8 copy_U8state)
{
     ef2:	df 93       	push	r29
     ef4:	cf 93       	push	r28
     ef6:	cd b7       	in	r28, 0x3d	; 61
     ef8:	de b7       	in	r29, 0x3e	; 62
     efa:	27 97       	sbiw	r28, 0x07	; 7
     efc:	0f b6       	in	r0, 0x3f	; 63
     efe:	f8 94       	cli
     f00:	de bf       	out	0x3e, r29	; 62
     f02:	0f be       	out	0x3f, r0	; 63
     f04:	cd bf       	out	0x3d, r28	; 61
     f06:	89 83       	std	Y+1, r24	; 0x01
     f08:	6a 83       	std	Y+2, r22	; 0x02
     f0a:	4b 83       	std	Y+3, r20	; 0x03
	if(OUTPUT==copy_U8state)
     f0c:	8b 81       	ldd	r24, Y+3	; 0x03
     f0e:	81 30       	cpi	r24, 0x01	; 1
     f10:	09 f0       	breq	.+2      	; 0xf14 <DIO_VidSetPinDirection+0x22>
     f12:	6f c0       	rjmp	.+222    	; 0xff2 <DIO_VidSetPinDirection+0x100>
	{
		switch (copy_u8port)
     f14:	89 81       	ldd	r24, Y+1	; 0x01
     f16:	28 2f       	mov	r18, r24
     f18:	30 e0       	ldi	r19, 0x00	; 0
     f1a:	3f 83       	std	Y+7, r19	; 0x07
     f1c:	2e 83       	std	Y+6, r18	; 0x06
     f1e:	8e 81       	ldd	r24, Y+6	; 0x06
     f20:	9f 81       	ldd	r25, Y+7	; 0x07
     f22:	81 30       	cpi	r24, 0x01	; 1
     f24:	91 05       	cpc	r25, r1
     f26:	49 f1       	breq	.+82     	; 0xf7a <DIO_VidSetPinDirection+0x88>
     f28:	2e 81       	ldd	r18, Y+6	; 0x06
     f2a:	3f 81       	ldd	r19, Y+7	; 0x07
     f2c:	22 30       	cpi	r18, 0x02	; 2
     f2e:	31 05       	cpc	r19, r1
     f30:	2c f4       	brge	.+10     	; 0xf3c <DIO_VidSetPinDirection+0x4a>
     f32:	8e 81       	ldd	r24, Y+6	; 0x06
     f34:	9f 81       	ldd	r25, Y+7	; 0x07
     f36:	00 97       	sbiw	r24, 0x00	; 0
     f38:	61 f0       	breq	.+24     	; 0xf52 <DIO_VidSetPinDirection+0x60>
     f3a:	d2 c0       	rjmp	.+420    	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
     f3c:	2e 81       	ldd	r18, Y+6	; 0x06
     f3e:	3f 81       	ldd	r19, Y+7	; 0x07
     f40:	22 30       	cpi	r18, 0x02	; 2
     f42:	31 05       	cpc	r19, r1
     f44:	71 f1       	breq	.+92     	; 0xfa2 <DIO_VidSetPinDirection+0xb0>
     f46:	8e 81       	ldd	r24, Y+6	; 0x06
     f48:	9f 81       	ldd	r25, Y+7	; 0x07
     f4a:	83 30       	cpi	r24, 0x03	; 3
     f4c:	91 05       	cpc	r25, r1
     f4e:	e9 f1       	breq	.+122    	; 0xfca <DIO_VidSetPinDirection+0xd8>
     f50:	c7 c0       	rjmp	.+398    	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
		{
			case PORTA:SET_BIT(DDRA, copy_U8pin); break;
     f52:	aa e3       	ldi	r26, 0x3A	; 58
     f54:	b0 e0       	ldi	r27, 0x00	; 0
     f56:	ea e3       	ldi	r30, 0x3A	; 58
     f58:	f0 e0       	ldi	r31, 0x00	; 0
     f5a:	80 81       	ld	r24, Z
     f5c:	48 2f       	mov	r20, r24
     f5e:	8a 81       	ldd	r24, Y+2	; 0x02
     f60:	28 2f       	mov	r18, r24
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	02 2e       	mov	r0, r18
     f6a:	02 c0       	rjmp	.+4      	; 0xf70 <DIO_VidSetPinDirection+0x7e>
     f6c:	88 0f       	add	r24, r24
     f6e:	99 1f       	adc	r25, r25
     f70:	0a 94       	dec	r0
     f72:	e2 f7       	brpl	.-8      	; 0xf6c <DIO_VidSetPinDirection+0x7a>
     f74:	84 2b       	or	r24, r20
     f76:	8c 93       	st	X, r24
     f78:	b3 c0       	rjmp	.+358    	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
			case PORTB:SET_BIT(DDRB, copy_U8pin); break;
     f7a:	a7 e3       	ldi	r26, 0x37	; 55
     f7c:	b0 e0       	ldi	r27, 0x00	; 0
     f7e:	e7 e3       	ldi	r30, 0x37	; 55
     f80:	f0 e0       	ldi	r31, 0x00	; 0
     f82:	80 81       	ld	r24, Z
     f84:	48 2f       	mov	r20, r24
     f86:	8a 81       	ldd	r24, Y+2	; 0x02
     f88:	28 2f       	mov	r18, r24
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	81 e0       	ldi	r24, 0x01	; 1
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	02 2e       	mov	r0, r18
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <DIO_VidSetPinDirection+0xa6>
     f94:	88 0f       	add	r24, r24
     f96:	99 1f       	adc	r25, r25
     f98:	0a 94       	dec	r0
     f9a:	e2 f7       	brpl	.-8      	; 0xf94 <DIO_VidSetPinDirection+0xa2>
     f9c:	84 2b       	or	r24, r20
     f9e:	8c 93       	st	X, r24
     fa0:	9f c0       	rjmp	.+318    	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
			case PORTC:SET_BIT(DDRC, copy_U8pin); break;
     fa2:	a4 e3       	ldi	r26, 0x34	; 52
     fa4:	b0 e0       	ldi	r27, 0x00	; 0
     fa6:	e4 e3       	ldi	r30, 0x34	; 52
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	80 81       	ld	r24, Z
     fac:	48 2f       	mov	r20, r24
     fae:	8a 81       	ldd	r24, Y+2	; 0x02
     fb0:	28 2f       	mov	r18, r24
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	81 e0       	ldi	r24, 0x01	; 1
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	02 2e       	mov	r0, r18
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <DIO_VidSetPinDirection+0xce>
     fbc:	88 0f       	add	r24, r24
     fbe:	99 1f       	adc	r25, r25
     fc0:	0a 94       	dec	r0
     fc2:	e2 f7       	brpl	.-8      	; 0xfbc <DIO_VidSetPinDirection+0xca>
     fc4:	84 2b       	or	r24, r20
     fc6:	8c 93       	st	X, r24
     fc8:	8b c0       	rjmp	.+278    	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
			case PORTD:SET_BIT(DDRD, copy_U8pin); break;
     fca:	a1 e3       	ldi	r26, 0x31	; 49
     fcc:	b0 e0       	ldi	r27, 0x00	; 0
     fce:	e1 e3       	ldi	r30, 0x31	; 49
     fd0:	f0 e0       	ldi	r31, 0x00	; 0
     fd2:	80 81       	ld	r24, Z
     fd4:	48 2f       	mov	r20, r24
     fd6:	8a 81       	ldd	r24, Y+2	; 0x02
     fd8:	28 2f       	mov	r18, r24
     fda:	30 e0       	ldi	r19, 0x00	; 0
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	02 2e       	mov	r0, r18
     fe2:	02 c0       	rjmp	.+4      	; 0xfe8 <DIO_VidSetPinDirection+0xf6>
     fe4:	88 0f       	add	r24, r24
     fe6:	99 1f       	adc	r25, r25
     fe8:	0a 94       	dec	r0
     fea:	e2 f7       	brpl	.-8      	; 0xfe4 <DIO_VidSetPinDirection+0xf2>
     fec:	84 2b       	or	r24, r20
     fee:	8c 93       	st	X, r24
     ff0:	77 c0       	rjmp	.+238    	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
	
		}	
	}
	else if(INPUT==copy_U8state)
     ff2:	8b 81       	ldd	r24, Y+3	; 0x03
     ff4:	88 23       	and	r24, r24
     ff6:	09 f0       	breq	.+2      	; 0xffa <DIO_VidSetPinDirection+0x108>
     ff8:	73 c0       	rjmp	.+230    	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
	{
		switch(copy_u8port)
     ffa:	89 81       	ldd	r24, Y+1	; 0x01
     ffc:	28 2f       	mov	r18, r24
     ffe:	30 e0       	ldi	r19, 0x00	; 0
    1000:	3d 83       	std	Y+5, r19	; 0x05
    1002:	2c 83       	std	Y+4, r18	; 0x04
    1004:	8c 81       	ldd	r24, Y+4	; 0x04
    1006:	9d 81       	ldd	r25, Y+5	; 0x05
    1008:	81 30       	cpi	r24, 0x01	; 1
    100a:	91 05       	cpc	r25, r1
    100c:	59 f1       	breq	.+86     	; 0x1064 <DIO_VidSetPinDirection+0x172>
    100e:	2c 81       	ldd	r18, Y+4	; 0x04
    1010:	3d 81       	ldd	r19, Y+5	; 0x05
    1012:	22 30       	cpi	r18, 0x02	; 2
    1014:	31 05       	cpc	r19, r1
    1016:	2c f4       	brge	.+10     	; 0x1022 <DIO_VidSetPinDirection+0x130>
    1018:	8c 81       	ldd	r24, Y+4	; 0x04
    101a:	9d 81       	ldd	r25, Y+5	; 0x05
    101c:	00 97       	sbiw	r24, 0x00	; 0
    101e:	69 f0       	breq	.+26     	; 0x103a <DIO_VidSetPinDirection+0x148>
    1020:	5f c0       	rjmp	.+190    	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
    1022:	2c 81       	ldd	r18, Y+4	; 0x04
    1024:	3d 81       	ldd	r19, Y+5	; 0x05
    1026:	22 30       	cpi	r18, 0x02	; 2
    1028:	31 05       	cpc	r19, r1
    102a:	89 f1       	breq	.+98     	; 0x108e <DIO_VidSetPinDirection+0x19c>
    102c:	8c 81       	ldd	r24, Y+4	; 0x04
    102e:	9d 81       	ldd	r25, Y+5	; 0x05
    1030:	83 30       	cpi	r24, 0x03	; 3
    1032:	91 05       	cpc	r25, r1
    1034:	09 f4       	brne	.+2      	; 0x1038 <DIO_VidSetPinDirection+0x146>
    1036:	40 c0       	rjmp	.+128    	; 0x10b8 <DIO_VidSetPinDirection+0x1c6>
    1038:	53 c0       	rjmp	.+166    	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
		{
			case PORTA:CLR_BIT(DDRA, copy_U8pin); break;
    103a:	aa e3       	ldi	r26, 0x3A	; 58
    103c:	b0 e0       	ldi	r27, 0x00	; 0
    103e:	ea e3       	ldi	r30, 0x3A	; 58
    1040:	f0 e0       	ldi	r31, 0x00	; 0
    1042:	80 81       	ld	r24, Z
    1044:	48 2f       	mov	r20, r24
    1046:	8a 81       	ldd	r24, Y+2	; 0x02
    1048:	28 2f       	mov	r18, r24
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	02 2e       	mov	r0, r18
    1052:	02 c0       	rjmp	.+4      	; 0x1058 <DIO_VidSetPinDirection+0x166>
    1054:	88 0f       	add	r24, r24
    1056:	99 1f       	adc	r25, r25
    1058:	0a 94       	dec	r0
    105a:	e2 f7       	brpl	.-8      	; 0x1054 <DIO_VidSetPinDirection+0x162>
    105c:	80 95       	com	r24
    105e:	84 23       	and	r24, r20
    1060:	8c 93       	st	X, r24
    1062:	3e c0       	rjmp	.+124    	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
			case PORTB:CLR_BIT(DDRB, copy_U8pin); break;
    1064:	a7 e3       	ldi	r26, 0x37	; 55
    1066:	b0 e0       	ldi	r27, 0x00	; 0
    1068:	e7 e3       	ldi	r30, 0x37	; 55
    106a:	f0 e0       	ldi	r31, 0x00	; 0
    106c:	80 81       	ld	r24, Z
    106e:	48 2f       	mov	r20, r24
    1070:	8a 81       	ldd	r24, Y+2	; 0x02
    1072:	28 2f       	mov	r18, r24
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	81 e0       	ldi	r24, 0x01	; 1
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	02 2e       	mov	r0, r18
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <DIO_VidSetPinDirection+0x190>
    107e:	88 0f       	add	r24, r24
    1080:	99 1f       	adc	r25, r25
    1082:	0a 94       	dec	r0
    1084:	e2 f7       	brpl	.-8      	; 0x107e <DIO_VidSetPinDirection+0x18c>
    1086:	80 95       	com	r24
    1088:	84 23       	and	r24, r20
    108a:	8c 93       	st	X, r24
    108c:	29 c0       	rjmp	.+82     	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
		    case PORTC:CLR_BIT(DDRC, copy_U8pin); break;
    108e:	a4 e3       	ldi	r26, 0x34	; 52
    1090:	b0 e0       	ldi	r27, 0x00	; 0
    1092:	e4 e3       	ldi	r30, 0x34	; 52
    1094:	f0 e0       	ldi	r31, 0x00	; 0
    1096:	80 81       	ld	r24, Z
    1098:	48 2f       	mov	r20, r24
    109a:	8a 81       	ldd	r24, Y+2	; 0x02
    109c:	28 2f       	mov	r18, r24
    109e:	30 e0       	ldi	r19, 0x00	; 0
    10a0:	81 e0       	ldi	r24, 0x01	; 1
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	02 2e       	mov	r0, r18
    10a6:	02 c0       	rjmp	.+4      	; 0x10ac <DIO_VidSetPinDirection+0x1ba>
    10a8:	88 0f       	add	r24, r24
    10aa:	99 1f       	adc	r25, r25
    10ac:	0a 94       	dec	r0
    10ae:	e2 f7       	brpl	.-8      	; 0x10a8 <DIO_VidSetPinDirection+0x1b6>
    10b0:	80 95       	com	r24
    10b2:	84 23       	and	r24, r20
    10b4:	8c 93       	st	X, r24
    10b6:	14 c0       	rjmp	.+40     	; 0x10e0 <DIO_VidSetPinDirection+0x1ee>
		    case PORTD:CLR_BIT(DDRD, copy_U8pin); break;
    10b8:	a1 e3       	ldi	r26, 0x31	; 49
    10ba:	b0 e0       	ldi	r27, 0x00	; 0
    10bc:	e1 e3       	ldi	r30, 0x31	; 49
    10be:	f0 e0       	ldi	r31, 0x00	; 0
    10c0:	80 81       	ld	r24, Z
    10c2:	48 2f       	mov	r20, r24
    10c4:	8a 81       	ldd	r24, Y+2	; 0x02
    10c6:	28 2f       	mov	r18, r24
    10c8:	30 e0       	ldi	r19, 0x00	; 0
    10ca:	81 e0       	ldi	r24, 0x01	; 1
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	02 2e       	mov	r0, r18
    10d0:	02 c0       	rjmp	.+4      	; 0x10d6 <DIO_VidSetPinDirection+0x1e4>
    10d2:	88 0f       	add	r24, r24
    10d4:	99 1f       	adc	r25, r25
    10d6:	0a 94       	dec	r0
    10d8:	e2 f7       	brpl	.-8      	; 0x10d2 <DIO_VidSetPinDirection+0x1e0>
    10da:	80 95       	com	r24
    10dc:	84 23       	and	r24, r20
    10de:	8c 93       	st	X, r24
	else
	{
		
	}
	
}
    10e0:	27 96       	adiw	r28, 0x07	; 7
    10e2:	0f b6       	in	r0, 0x3f	; 63
    10e4:	f8 94       	cli
    10e6:	de bf       	out	0x3e, r29	; 62
    10e8:	0f be       	out	0x3f, r0	; 63
    10ea:	cd bf       	out	0x3d, r28	; 61
    10ec:	cf 91       	pop	r28
    10ee:	df 91       	pop	r29
    10f0:	08 95       	ret

000010f2 <DIO_VidSetPinValue>:
void DIO_VidSetPinValue			(u8 copy_u8port, u8 copy_U8pin, u8 copy_U8value)
{
    10f2:	df 93       	push	r29
    10f4:	cf 93       	push	r28
    10f6:	cd b7       	in	r28, 0x3d	; 61
    10f8:	de b7       	in	r29, 0x3e	; 62
    10fa:	27 97       	sbiw	r28, 0x07	; 7
    10fc:	0f b6       	in	r0, 0x3f	; 63
    10fe:	f8 94       	cli
    1100:	de bf       	out	0x3e, r29	; 62
    1102:	0f be       	out	0x3f, r0	; 63
    1104:	cd bf       	out	0x3d, r28	; 61
    1106:	89 83       	std	Y+1, r24	; 0x01
    1108:	6a 83       	std	Y+2, r22	; 0x02
    110a:	4b 83       	std	Y+3, r20	; 0x03
	if(HIGH==copy_U8value)
    110c:	8b 81       	ldd	r24, Y+3	; 0x03
    110e:	81 30       	cpi	r24, 0x01	; 1
    1110:	09 f0       	breq	.+2      	; 0x1114 <DIO_VidSetPinValue+0x22>
    1112:	6f c0       	rjmp	.+222    	; 0x11f2 <DIO_VidSetPinValue+0x100>
	{
		switch (copy_u8port)
    1114:	89 81       	ldd	r24, Y+1	; 0x01
    1116:	28 2f       	mov	r18, r24
    1118:	30 e0       	ldi	r19, 0x00	; 0
    111a:	3f 83       	std	Y+7, r19	; 0x07
    111c:	2e 83       	std	Y+6, r18	; 0x06
    111e:	8e 81       	ldd	r24, Y+6	; 0x06
    1120:	9f 81       	ldd	r25, Y+7	; 0x07
    1122:	81 30       	cpi	r24, 0x01	; 1
    1124:	91 05       	cpc	r25, r1
    1126:	49 f1       	breq	.+82     	; 0x117a <DIO_VidSetPinValue+0x88>
    1128:	2e 81       	ldd	r18, Y+6	; 0x06
    112a:	3f 81       	ldd	r19, Y+7	; 0x07
    112c:	22 30       	cpi	r18, 0x02	; 2
    112e:	31 05       	cpc	r19, r1
    1130:	2c f4       	brge	.+10     	; 0x113c <DIO_VidSetPinValue+0x4a>
    1132:	8e 81       	ldd	r24, Y+6	; 0x06
    1134:	9f 81       	ldd	r25, Y+7	; 0x07
    1136:	00 97       	sbiw	r24, 0x00	; 0
    1138:	61 f0       	breq	.+24     	; 0x1152 <DIO_VidSetPinValue+0x60>
    113a:	d2 c0       	rjmp	.+420    	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
    113c:	2e 81       	ldd	r18, Y+6	; 0x06
    113e:	3f 81       	ldd	r19, Y+7	; 0x07
    1140:	22 30       	cpi	r18, 0x02	; 2
    1142:	31 05       	cpc	r19, r1
    1144:	71 f1       	breq	.+92     	; 0x11a2 <DIO_VidSetPinValue+0xb0>
    1146:	8e 81       	ldd	r24, Y+6	; 0x06
    1148:	9f 81       	ldd	r25, Y+7	; 0x07
    114a:	83 30       	cpi	r24, 0x03	; 3
    114c:	91 05       	cpc	r25, r1
    114e:	e9 f1       	breq	.+122    	; 0x11ca <DIO_VidSetPinValue+0xd8>
    1150:	c7 c0       	rjmp	.+398    	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
		{
			case PORTA:SET_BIT(PORT_A, copy_U8pin); break;
    1152:	ab e3       	ldi	r26, 0x3B	; 59
    1154:	b0 e0       	ldi	r27, 0x00	; 0
    1156:	eb e3       	ldi	r30, 0x3B	; 59
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	80 81       	ld	r24, Z
    115c:	48 2f       	mov	r20, r24
    115e:	8a 81       	ldd	r24, Y+2	; 0x02
    1160:	28 2f       	mov	r18, r24
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	81 e0       	ldi	r24, 0x01	; 1
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	02 2e       	mov	r0, r18
    116a:	02 c0       	rjmp	.+4      	; 0x1170 <DIO_VidSetPinValue+0x7e>
    116c:	88 0f       	add	r24, r24
    116e:	99 1f       	adc	r25, r25
    1170:	0a 94       	dec	r0
    1172:	e2 f7       	brpl	.-8      	; 0x116c <DIO_VidSetPinValue+0x7a>
    1174:	84 2b       	or	r24, r20
    1176:	8c 93       	st	X, r24
    1178:	b3 c0       	rjmp	.+358    	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
			case PORTB:SET_BIT(PORT_B, copy_U8pin); break;
    117a:	a8 e3       	ldi	r26, 0x38	; 56
    117c:	b0 e0       	ldi	r27, 0x00	; 0
    117e:	e8 e3       	ldi	r30, 0x38	; 56
    1180:	f0 e0       	ldi	r31, 0x00	; 0
    1182:	80 81       	ld	r24, Z
    1184:	48 2f       	mov	r20, r24
    1186:	8a 81       	ldd	r24, Y+2	; 0x02
    1188:	28 2f       	mov	r18, r24
    118a:	30 e0       	ldi	r19, 0x00	; 0
    118c:	81 e0       	ldi	r24, 0x01	; 1
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	02 2e       	mov	r0, r18
    1192:	02 c0       	rjmp	.+4      	; 0x1198 <DIO_VidSetPinValue+0xa6>
    1194:	88 0f       	add	r24, r24
    1196:	99 1f       	adc	r25, r25
    1198:	0a 94       	dec	r0
    119a:	e2 f7       	brpl	.-8      	; 0x1194 <DIO_VidSetPinValue+0xa2>
    119c:	84 2b       	or	r24, r20
    119e:	8c 93       	st	X, r24
    11a0:	9f c0       	rjmp	.+318    	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
			case PORTC:SET_BIT(PORT_C, copy_U8pin); break;
    11a2:	a5 e3       	ldi	r26, 0x35	; 53
    11a4:	b0 e0       	ldi	r27, 0x00	; 0
    11a6:	e5 e3       	ldi	r30, 0x35	; 53
    11a8:	f0 e0       	ldi	r31, 0x00	; 0
    11aa:	80 81       	ld	r24, Z
    11ac:	48 2f       	mov	r20, r24
    11ae:	8a 81       	ldd	r24, Y+2	; 0x02
    11b0:	28 2f       	mov	r18, r24
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	81 e0       	ldi	r24, 0x01	; 1
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	02 2e       	mov	r0, r18
    11ba:	02 c0       	rjmp	.+4      	; 0x11c0 <DIO_VidSetPinValue+0xce>
    11bc:	88 0f       	add	r24, r24
    11be:	99 1f       	adc	r25, r25
    11c0:	0a 94       	dec	r0
    11c2:	e2 f7       	brpl	.-8      	; 0x11bc <DIO_VidSetPinValue+0xca>
    11c4:	84 2b       	or	r24, r20
    11c6:	8c 93       	st	X, r24
    11c8:	8b c0       	rjmp	.+278    	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
			case PORTD:SET_BIT(PORT_D, copy_U8pin); break;
    11ca:	a2 e3       	ldi	r26, 0x32	; 50
    11cc:	b0 e0       	ldi	r27, 0x00	; 0
    11ce:	e2 e3       	ldi	r30, 0x32	; 50
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	80 81       	ld	r24, Z
    11d4:	48 2f       	mov	r20, r24
    11d6:	8a 81       	ldd	r24, Y+2	; 0x02
    11d8:	28 2f       	mov	r18, r24
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	81 e0       	ldi	r24, 0x01	; 1
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	02 2e       	mov	r0, r18
    11e2:	02 c0       	rjmp	.+4      	; 0x11e8 <DIO_VidSetPinValue+0xf6>
    11e4:	88 0f       	add	r24, r24
    11e6:	99 1f       	adc	r25, r25
    11e8:	0a 94       	dec	r0
    11ea:	e2 f7       	brpl	.-8      	; 0x11e4 <DIO_VidSetPinValue+0xf2>
    11ec:	84 2b       	or	r24, r20
    11ee:	8c 93       	st	X, r24
    11f0:	77 c0       	rjmp	.+238    	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
	
		}	
	}
	else if(LOW==copy_U8value)
    11f2:	8b 81       	ldd	r24, Y+3	; 0x03
    11f4:	88 23       	and	r24, r24
    11f6:	09 f0       	breq	.+2      	; 0x11fa <DIO_VidSetPinValue+0x108>
    11f8:	73 c0       	rjmp	.+230    	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
	{
		switch(copy_u8port)
    11fa:	89 81       	ldd	r24, Y+1	; 0x01
    11fc:	28 2f       	mov	r18, r24
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	3d 83       	std	Y+5, r19	; 0x05
    1202:	2c 83       	std	Y+4, r18	; 0x04
    1204:	8c 81       	ldd	r24, Y+4	; 0x04
    1206:	9d 81       	ldd	r25, Y+5	; 0x05
    1208:	81 30       	cpi	r24, 0x01	; 1
    120a:	91 05       	cpc	r25, r1
    120c:	59 f1       	breq	.+86     	; 0x1264 <DIO_VidSetPinValue+0x172>
    120e:	2c 81       	ldd	r18, Y+4	; 0x04
    1210:	3d 81       	ldd	r19, Y+5	; 0x05
    1212:	22 30       	cpi	r18, 0x02	; 2
    1214:	31 05       	cpc	r19, r1
    1216:	2c f4       	brge	.+10     	; 0x1222 <DIO_VidSetPinValue+0x130>
    1218:	8c 81       	ldd	r24, Y+4	; 0x04
    121a:	9d 81       	ldd	r25, Y+5	; 0x05
    121c:	00 97       	sbiw	r24, 0x00	; 0
    121e:	69 f0       	breq	.+26     	; 0x123a <DIO_VidSetPinValue+0x148>
    1220:	5f c0       	rjmp	.+190    	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
    1222:	2c 81       	ldd	r18, Y+4	; 0x04
    1224:	3d 81       	ldd	r19, Y+5	; 0x05
    1226:	22 30       	cpi	r18, 0x02	; 2
    1228:	31 05       	cpc	r19, r1
    122a:	89 f1       	breq	.+98     	; 0x128e <DIO_VidSetPinValue+0x19c>
    122c:	8c 81       	ldd	r24, Y+4	; 0x04
    122e:	9d 81       	ldd	r25, Y+5	; 0x05
    1230:	83 30       	cpi	r24, 0x03	; 3
    1232:	91 05       	cpc	r25, r1
    1234:	09 f4       	brne	.+2      	; 0x1238 <DIO_VidSetPinValue+0x146>
    1236:	40 c0       	rjmp	.+128    	; 0x12b8 <DIO_VidSetPinValue+0x1c6>
    1238:	53 c0       	rjmp	.+166    	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
		{
			case PORTA:CLR_BIT(PORT_A, copy_U8pin); break;
    123a:	ab e3       	ldi	r26, 0x3B	; 59
    123c:	b0 e0       	ldi	r27, 0x00	; 0
    123e:	eb e3       	ldi	r30, 0x3B	; 59
    1240:	f0 e0       	ldi	r31, 0x00	; 0
    1242:	80 81       	ld	r24, Z
    1244:	48 2f       	mov	r20, r24
    1246:	8a 81       	ldd	r24, Y+2	; 0x02
    1248:	28 2f       	mov	r18, r24
    124a:	30 e0       	ldi	r19, 0x00	; 0
    124c:	81 e0       	ldi	r24, 0x01	; 1
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	02 2e       	mov	r0, r18
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <DIO_VidSetPinValue+0x166>
    1254:	88 0f       	add	r24, r24
    1256:	99 1f       	adc	r25, r25
    1258:	0a 94       	dec	r0
    125a:	e2 f7       	brpl	.-8      	; 0x1254 <DIO_VidSetPinValue+0x162>
    125c:	80 95       	com	r24
    125e:	84 23       	and	r24, r20
    1260:	8c 93       	st	X, r24
    1262:	3e c0       	rjmp	.+124    	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
			case PORTB:CLR_BIT(PORT_B, copy_U8pin); break;
    1264:	a8 e3       	ldi	r26, 0x38	; 56
    1266:	b0 e0       	ldi	r27, 0x00	; 0
    1268:	e8 e3       	ldi	r30, 0x38	; 56
    126a:	f0 e0       	ldi	r31, 0x00	; 0
    126c:	80 81       	ld	r24, Z
    126e:	48 2f       	mov	r20, r24
    1270:	8a 81       	ldd	r24, Y+2	; 0x02
    1272:	28 2f       	mov	r18, r24
    1274:	30 e0       	ldi	r19, 0x00	; 0
    1276:	81 e0       	ldi	r24, 0x01	; 1
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	02 2e       	mov	r0, r18
    127c:	02 c0       	rjmp	.+4      	; 0x1282 <DIO_VidSetPinValue+0x190>
    127e:	88 0f       	add	r24, r24
    1280:	99 1f       	adc	r25, r25
    1282:	0a 94       	dec	r0
    1284:	e2 f7       	brpl	.-8      	; 0x127e <DIO_VidSetPinValue+0x18c>
    1286:	80 95       	com	r24
    1288:	84 23       	and	r24, r20
    128a:	8c 93       	st	X, r24
    128c:	29 c0       	rjmp	.+82     	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
		    case PORTC:CLR_BIT(PORT_C, copy_U8pin); break;
    128e:	a5 e3       	ldi	r26, 0x35	; 53
    1290:	b0 e0       	ldi	r27, 0x00	; 0
    1292:	e5 e3       	ldi	r30, 0x35	; 53
    1294:	f0 e0       	ldi	r31, 0x00	; 0
    1296:	80 81       	ld	r24, Z
    1298:	48 2f       	mov	r20, r24
    129a:	8a 81       	ldd	r24, Y+2	; 0x02
    129c:	28 2f       	mov	r18, r24
    129e:	30 e0       	ldi	r19, 0x00	; 0
    12a0:	81 e0       	ldi	r24, 0x01	; 1
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	02 2e       	mov	r0, r18
    12a6:	02 c0       	rjmp	.+4      	; 0x12ac <DIO_VidSetPinValue+0x1ba>
    12a8:	88 0f       	add	r24, r24
    12aa:	99 1f       	adc	r25, r25
    12ac:	0a 94       	dec	r0
    12ae:	e2 f7       	brpl	.-8      	; 0x12a8 <DIO_VidSetPinValue+0x1b6>
    12b0:	80 95       	com	r24
    12b2:	84 23       	and	r24, r20
    12b4:	8c 93       	st	X, r24
    12b6:	14 c0       	rjmp	.+40     	; 0x12e0 <DIO_VidSetPinValue+0x1ee>
		    case PORTD:CLR_BIT(PORT_D, copy_U8pin); break;
    12b8:	a2 e3       	ldi	r26, 0x32	; 50
    12ba:	b0 e0       	ldi	r27, 0x00	; 0
    12bc:	e2 e3       	ldi	r30, 0x32	; 50
    12be:	f0 e0       	ldi	r31, 0x00	; 0
    12c0:	80 81       	ld	r24, Z
    12c2:	48 2f       	mov	r20, r24
    12c4:	8a 81       	ldd	r24, Y+2	; 0x02
    12c6:	28 2f       	mov	r18, r24
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	81 e0       	ldi	r24, 0x01	; 1
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	02 2e       	mov	r0, r18
    12d0:	02 c0       	rjmp	.+4      	; 0x12d6 <DIO_VidSetPinValue+0x1e4>
    12d2:	88 0f       	add	r24, r24
    12d4:	99 1f       	adc	r25, r25
    12d6:	0a 94       	dec	r0
    12d8:	e2 f7       	brpl	.-8      	; 0x12d2 <DIO_VidSetPinValue+0x1e0>
    12da:	80 95       	com	r24
    12dc:	84 23       	and	r24, r20
    12de:	8c 93       	st	X, r24
		
	}	
	
	
	
}
    12e0:	27 96       	adiw	r28, 0x07	; 7
    12e2:	0f b6       	in	r0, 0x3f	; 63
    12e4:	f8 94       	cli
    12e6:	de bf       	out	0x3e, r29	; 62
    12e8:	0f be       	out	0x3f, r0	; 63
    12ea:	cd bf       	out	0x3d, r28	; 61
    12ec:	cf 91       	pop	r28
    12ee:	df 91       	pop	r29
    12f0:	08 95       	ret

000012f2 <DIO_VidGetPinValue>:


u8 DIO_VidGetPinValue			(u8 copy_u8port, u8 Copy_U8Pin)
{
    12f2:	df 93       	push	r29
    12f4:	cf 93       	push	r28
    12f6:	00 d0       	rcall	.+0      	; 0x12f8 <DIO_VidGetPinValue+0x6>
    12f8:	00 d0       	rcall	.+0      	; 0x12fa <DIO_VidGetPinValue+0x8>
    12fa:	0f 92       	push	r0
    12fc:	cd b7       	in	r28, 0x3d	; 61
    12fe:	de b7       	in	r29, 0x3e	; 62
    1300:	8a 83       	std	Y+2, r24	; 0x02
    1302:	6b 83       	std	Y+3, r22	; 0x03
	u8 Lcal_U8PinResult=0;
    1304:	19 82       	std	Y+1, r1	; 0x01
	switch(copy_u8port){
    1306:	8a 81       	ldd	r24, Y+2	; 0x02
    1308:	28 2f       	mov	r18, r24
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	3d 83       	std	Y+5, r19	; 0x05
    130e:	2c 83       	std	Y+4, r18	; 0x04
    1310:	4c 81       	ldd	r20, Y+4	; 0x04
    1312:	5d 81       	ldd	r21, Y+5	; 0x05
    1314:	41 30       	cpi	r20, 0x01	; 1
    1316:	51 05       	cpc	r21, r1
    1318:	41 f1       	breq	.+80     	; 0x136a <DIO_VidGetPinValue+0x78>
    131a:	8c 81       	ldd	r24, Y+4	; 0x04
    131c:	9d 81       	ldd	r25, Y+5	; 0x05
    131e:	82 30       	cpi	r24, 0x02	; 2
    1320:	91 05       	cpc	r25, r1
    1322:	34 f4       	brge	.+12     	; 0x1330 <DIO_VidGetPinValue+0x3e>
    1324:	2c 81       	ldd	r18, Y+4	; 0x04
    1326:	3d 81       	ldd	r19, Y+5	; 0x05
    1328:	21 15       	cp	r18, r1
    132a:	31 05       	cpc	r19, r1
    132c:	61 f0       	breq	.+24     	; 0x1346 <DIO_VidGetPinValue+0x54>
    132e:	52 c0       	rjmp	.+164    	; 0x13d4 <DIO_VidGetPinValue+0xe2>
    1330:	4c 81       	ldd	r20, Y+4	; 0x04
    1332:	5d 81       	ldd	r21, Y+5	; 0x05
    1334:	42 30       	cpi	r20, 0x02	; 2
    1336:	51 05       	cpc	r21, r1
    1338:	51 f1       	breq	.+84     	; 0x138e <DIO_VidGetPinValue+0x9c>
    133a:	8c 81       	ldd	r24, Y+4	; 0x04
    133c:	9d 81       	ldd	r25, Y+5	; 0x05
    133e:	83 30       	cpi	r24, 0x03	; 3
    1340:	91 05       	cpc	r25, r1
    1342:	b9 f1       	breq	.+110    	; 0x13b2 <DIO_VidGetPinValue+0xc0>
    1344:	47 c0       	rjmp	.+142    	; 0x13d4 <DIO_VidGetPinValue+0xe2>

			case PORTA :		Lcal_U8PinResult=GET_BIT(PINA,Copy_U8Pin);	        break;
    1346:	e9 e3       	ldi	r30, 0x39	; 57
    1348:	f0 e0       	ldi	r31, 0x00	; 0
    134a:	80 81       	ld	r24, Z
    134c:	28 2f       	mov	r18, r24
    134e:	30 e0       	ldi	r19, 0x00	; 0
    1350:	8b 81       	ldd	r24, Y+3	; 0x03
    1352:	88 2f       	mov	r24, r24
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	a9 01       	movw	r20, r18
    1358:	02 c0       	rjmp	.+4      	; 0x135e <DIO_VidGetPinValue+0x6c>
    135a:	55 95       	asr	r21
    135c:	47 95       	ror	r20
    135e:	8a 95       	dec	r24
    1360:	e2 f7       	brpl	.-8      	; 0x135a <DIO_VidGetPinValue+0x68>
    1362:	ca 01       	movw	r24, r20
    1364:	81 70       	andi	r24, 0x01	; 1
    1366:	89 83       	std	Y+1, r24	; 0x01
    1368:	35 c0       	rjmp	.+106    	; 0x13d4 <DIO_VidGetPinValue+0xe2>
			case PORTB :		Lcal_U8PinResult=GET_BIT(PINB,Copy_U8Pin); 		    break;
    136a:	e6 e3       	ldi	r30, 0x36	; 54
    136c:	f0 e0       	ldi	r31, 0x00	; 0
    136e:	80 81       	ld	r24, Z
    1370:	28 2f       	mov	r18, r24
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	8b 81       	ldd	r24, Y+3	; 0x03
    1376:	88 2f       	mov	r24, r24
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	a9 01       	movw	r20, r18
    137c:	02 c0       	rjmp	.+4      	; 0x1382 <DIO_VidGetPinValue+0x90>
    137e:	55 95       	asr	r21
    1380:	47 95       	ror	r20
    1382:	8a 95       	dec	r24
    1384:	e2 f7       	brpl	.-8      	; 0x137e <DIO_VidGetPinValue+0x8c>
    1386:	ca 01       	movw	r24, r20
    1388:	81 70       	andi	r24, 0x01	; 1
    138a:	89 83       	std	Y+1, r24	; 0x01
    138c:	23 c0       	rjmp	.+70     	; 0x13d4 <DIO_VidGetPinValue+0xe2>
			case PORTC :		Lcal_U8PinResult=GET_BIT(PINC,Copy_U8Pin);			break;
    138e:	e3 e3       	ldi	r30, 0x33	; 51
    1390:	f0 e0       	ldi	r31, 0x00	; 0
    1392:	80 81       	ld	r24, Z
    1394:	28 2f       	mov	r18, r24
    1396:	30 e0       	ldi	r19, 0x00	; 0
    1398:	8b 81       	ldd	r24, Y+3	; 0x03
    139a:	88 2f       	mov	r24, r24
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	a9 01       	movw	r20, r18
    13a0:	02 c0       	rjmp	.+4      	; 0x13a6 <DIO_VidGetPinValue+0xb4>
    13a2:	55 95       	asr	r21
    13a4:	47 95       	ror	r20
    13a6:	8a 95       	dec	r24
    13a8:	e2 f7       	brpl	.-8      	; 0x13a2 <DIO_VidGetPinValue+0xb0>
    13aa:	ca 01       	movw	r24, r20
    13ac:	81 70       	andi	r24, 0x01	; 1
    13ae:	89 83       	std	Y+1, r24	; 0x01
    13b0:	11 c0       	rjmp	.+34     	; 0x13d4 <DIO_VidGetPinValue+0xe2>
			case PORTD :		Lcal_U8PinResult=GET_BIT(PIND,Copy_U8Pin);			break;
    13b2:	e0 e3       	ldi	r30, 0x30	; 48
    13b4:	f0 e0       	ldi	r31, 0x00	; 0
    13b6:	80 81       	ld	r24, Z
    13b8:	28 2f       	mov	r18, r24
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	8b 81       	ldd	r24, Y+3	; 0x03
    13be:	88 2f       	mov	r24, r24
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	a9 01       	movw	r20, r18
    13c4:	02 c0       	rjmp	.+4      	; 0x13ca <DIO_VidGetPinValue+0xd8>
    13c6:	55 95       	asr	r21
    13c8:	47 95       	ror	r20
    13ca:	8a 95       	dec	r24
    13cc:	e2 f7       	brpl	.-8      	; 0x13c6 <DIO_VidGetPinValue+0xd4>
    13ce:	ca 01       	movw	r24, r20
    13d0:	81 70       	andi	r24, 0x01	; 1
    13d2:	89 83       	std	Y+1, r24	; 0x01

			}


return(Lcal_U8PinResult);
    13d4:	89 81       	ldd	r24, Y+1	; 0x01
	
	
}
    13d6:	0f 90       	pop	r0
    13d8:	0f 90       	pop	r0
    13da:	0f 90       	pop	r0
    13dc:	0f 90       	pop	r0
    13de:	0f 90       	pop	r0
    13e0:	cf 91       	pop	r28
    13e2:	df 91       	pop	r29
    13e4:	08 95       	ret

000013e6 <DIO_VidSetPortDirection>:

void DIO_VidSetPortDirection	(u8 copy_u8port, u8 copy_U8state)
{
    13e6:	df 93       	push	r29
    13e8:	cf 93       	push	r28
    13ea:	00 d0       	rcall	.+0      	; 0x13ec <DIO_VidSetPortDirection+0x6>
    13ec:	00 d0       	rcall	.+0      	; 0x13ee <DIO_VidSetPortDirection+0x8>
    13ee:	00 d0       	rcall	.+0      	; 0x13f0 <DIO_VidSetPortDirection+0xa>
    13f0:	cd b7       	in	r28, 0x3d	; 61
    13f2:	de b7       	in	r29, 0x3e	; 62
    13f4:	89 83       	std	Y+1, r24	; 0x01
    13f6:	6a 83       	std	Y+2, r22	; 0x02
	
	if(OUTPUT==copy_U8state)
    13f8:	8a 81       	ldd	r24, Y+2	; 0x02
    13fa:	81 30       	cpi	r24, 0x01	; 1
    13fc:	99 f5       	brne	.+102    	; 0x1464 <DIO_VidSetPortDirection+0x7e>
	{
		switch (copy_u8port)
    13fe:	89 81       	ldd	r24, Y+1	; 0x01
    1400:	28 2f       	mov	r18, r24
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	3e 83       	std	Y+6, r19	; 0x06
    1406:	2d 83       	std	Y+5, r18	; 0x05
    1408:	8d 81       	ldd	r24, Y+5	; 0x05
    140a:	9e 81       	ldd	r25, Y+6	; 0x06
    140c:	81 30       	cpi	r24, 0x01	; 1
    140e:	91 05       	cpc	r25, r1
    1410:	d1 f0       	breq	.+52     	; 0x1446 <DIO_VidSetPortDirection+0x60>
    1412:	2d 81       	ldd	r18, Y+5	; 0x05
    1414:	3e 81       	ldd	r19, Y+6	; 0x06
    1416:	22 30       	cpi	r18, 0x02	; 2
    1418:	31 05       	cpc	r19, r1
    141a:	2c f4       	brge	.+10     	; 0x1426 <DIO_VidSetPortDirection+0x40>
    141c:	8d 81       	ldd	r24, Y+5	; 0x05
    141e:	9e 81       	ldd	r25, Y+6	; 0x06
    1420:	00 97       	sbiw	r24, 0x00	; 0
    1422:	61 f0       	breq	.+24     	; 0x143c <DIO_VidSetPortDirection+0x56>
    1424:	50 c0       	rjmp	.+160    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
    1426:	2d 81       	ldd	r18, Y+5	; 0x05
    1428:	3e 81       	ldd	r19, Y+6	; 0x06
    142a:	22 30       	cpi	r18, 0x02	; 2
    142c:	31 05       	cpc	r19, r1
    142e:	81 f0       	breq	.+32     	; 0x1450 <DIO_VidSetPortDirection+0x6a>
    1430:	8d 81       	ldd	r24, Y+5	; 0x05
    1432:	9e 81       	ldd	r25, Y+6	; 0x06
    1434:	83 30       	cpi	r24, 0x03	; 3
    1436:	91 05       	cpc	r25, r1
    1438:	81 f0       	breq	.+32     	; 0x145a <DIO_VidSetPortDirection+0x74>
    143a:	45 c0       	rjmp	.+138    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
		{
			case PORTA:DDRA= ALL_OUTPUT		; break;
    143c:	ea e3       	ldi	r30, 0x3A	; 58
    143e:	f0 e0       	ldi	r31, 0x00	; 0
    1440:	8f ef       	ldi	r24, 0xFF	; 255
    1442:	80 83       	st	Z, r24
    1444:	40 c0       	rjmp	.+128    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			case PORTB:DDRB= ALL_OUTPUT		; break;
    1446:	e7 e3       	ldi	r30, 0x37	; 55
    1448:	f0 e0       	ldi	r31, 0x00	; 0
    144a:	8f ef       	ldi	r24, 0xFF	; 255
    144c:	80 83       	st	Z, r24
    144e:	3b c0       	rjmp	.+118    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			case PORTC:DDRC= ALL_OUTPUT		; break;
    1450:	e4 e3       	ldi	r30, 0x34	; 52
    1452:	f0 e0       	ldi	r31, 0x00	; 0
    1454:	8f ef       	ldi	r24, 0xFF	; 255
    1456:	80 83       	st	Z, r24
    1458:	36 c0       	rjmp	.+108    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			case PORTD:DDRD= ALL_OUTPUT		; break;
    145a:	e1 e3       	ldi	r30, 0x31	; 49
    145c:	f0 e0       	ldi	r31, 0x00	; 0
    145e:	8f ef       	ldi	r24, 0xFF	; 255
    1460:	80 83       	st	Z, r24
    1462:	31 c0       	rjmp	.+98     	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
	
		}	
	}
	else if(INPUT==copy_U8state)
    1464:	8a 81       	ldd	r24, Y+2	; 0x02
    1466:	88 23       	and	r24, r24
    1468:	71 f5       	brne	.+92     	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
	{
		switch(copy_u8port)
    146a:	89 81       	ldd	r24, Y+1	; 0x01
    146c:	28 2f       	mov	r18, r24
    146e:	30 e0       	ldi	r19, 0x00	; 0
    1470:	3c 83       	std	Y+4, r19	; 0x04
    1472:	2b 83       	std	Y+3, r18	; 0x03
    1474:	8b 81       	ldd	r24, Y+3	; 0x03
    1476:	9c 81       	ldd	r25, Y+4	; 0x04
    1478:	81 30       	cpi	r24, 0x01	; 1
    147a:	91 05       	cpc	r25, r1
    147c:	c9 f0       	breq	.+50     	; 0x14b0 <DIO_VidSetPortDirection+0xca>
    147e:	2b 81       	ldd	r18, Y+3	; 0x03
    1480:	3c 81       	ldd	r19, Y+4	; 0x04
    1482:	22 30       	cpi	r18, 0x02	; 2
    1484:	31 05       	cpc	r19, r1
    1486:	2c f4       	brge	.+10     	; 0x1492 <DIO_VidSetPortDirection+0xac>
    1488:	8b 81       	ldd	r24, Y+3	; 0x03
    148a:	9c 81       	ldd	r25, Y+4	; 0x04
    148c:	00 97       	sbiw	r24, 0x00	; 0
    148e:	61 f0       	breq	.+24     	; 0x14a8 <DIO_VidSetPortDirection+0xc2>
    1490:	1a c0       	rjmp	.+52     	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
    1492:	2b 81       	ldd	r18, Y+3	; 0x03
    1494:	3c 81       	ldd	r19, Y+4	; 0x04
    1496:	22 30       	cpi	r18, 0x02	; 2
    1498:	31 05       	cpc	r19, r1
    149a:	71 f0       	breq	.+28     	; 0x14b8 <DIO_VidSetPortDirection+0xd2>
    149c:	8b 81       	ldd	r24, Y+3	; 0x03
    149e:	9c 81       	ldd	r25, Y+4	; 0x04
    14a0:	83 30       	cpi	r24, 0x03	; 3
    14a2:	91 05       	cpc	r25, r1
    14a4:	69 f0       	breq	.+26     	; 0x14c0 <DIO_VidSetPortDirection+0xda>
    14a6:	0f c0       	rjmp	.+30     	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
		{
			case PORTA:DDRA= ALL_INPUT		; break;
    14a8:	ea e3       	ldi	r30, 0x3A	; 58
    14aa:	f0 e0       	ldi	r31, 0x00	; 0
    14ac:	10 82       	st	Z, r1
    14ae:	0b c0       	rjmp	.+22     	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			case PORTB:DDRB= ALL_INPUT		; break;
    14b0:	e7 e3       	ldi	r30, 0x37	; 55
    14b2:	f0 e0       	ldi	r31, 0x00	; 0
    14b4:	10 82       	st	Z, r1
    14b6:	07 c0       	rjmp	.+14     	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			case PORTC:DDRC= ALL_INPUT		; break;
    14b8:	e4 e3       	ldi	r30, 0x34	; 52
    14ba:	f0 e0       	ldi	r31, 0x00	; 0
    14bc:	10 82       	st	Z, r1
    14be:	03 c0       	rjmp	.+6      	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			case PORTD:DDRD= ALL_INPUT		; break;
    14c0:	e1 e3       	ldi	r30, 0x31	; 49
    14c2:	f0 e0       	ldi	r31, 0x00	; 0
    14c4:	10 82       	st	Z, r1
	{
		
	}
	
	
}
    14c6:	26 96       	adiw	r28, 0x06	; 6
    14c8:	0f b6       	in	r0, 0x3f	; 63
    14ca:	f8 94       	cli
    14cc:	de bf       	out	0x3e, r29	; 62
    14ce:	0f be       	out	0x3f, r0	; 63
    14d0:	cd bf       	out	0x3d, r28	; 61
    14d2:	cf 91       	pop	r28
    14d4:	df 91       	pop	r29
    14d6:	08 95       	ret

000014d8 <DIO_VidSetPortValue>:
void DIO_VidSetPortValue		(u8 copy_u8port, u8 copy_U8value)
{
    14d8:	df 93       	push	r29
    14da:	cf 93       	push	r28
    14dc:	00 d0       	rcall	.+0      	; 0x14de <DIO_VidSetPortValue+0x6>
    14de:	00 d0       	rcall	.+0      	; 0x14e0 <DIO_VidSetPortValue+0x8>
    14e0:	cd b7       	in	r28, 0x3d	; 61
    14e2:	de b7       	in	r29, 0x3e	; 62
    14e4:	89 83       	std	Y+1, r24	; 0x01
    14e6:	6a 83       	std	Y+2, r22	; 0x02
		
		switch (copy_u8port)
    14e8:	89 81       	ldd	r24, Y+1	; 0x01
    14ea:	28 2f       	mov	r18, r24
    14ec:	30 e0       	ldi	r19, 0x00	; 0
    14ee:	3c 83       	std	Y+4, r19	; 0x04
    14f0:	2b 83       	std	Y+3, r18	; 0x03
    14f2:	8b 81       	ldd	r24, Y+3	; 0x03
    14f4:	9c 81       	ldd	r25, Y+4	; 0x04
    14f6:	81 30       	cpi	r24, 0x01	; 1
    14f8:	91 05       	cpc	r25, r1
    14fa:	d1 f0       	breq	.+52     	; 0x1530 <DIO_VidSetPortValue+0x58>
    14fc:	2b 81       	ldd	r18, Y+3	; 0x03
    14fe:	3c 81       	ldd	r19, Y+4	; 0x04
    1500:	22 30       	cpi	r18, 0x02	; 2
    1502:	31 05       	cpc	r19, r1
    1504:	2c f4       	brge	.+10     	; 0x1510 <DIO_VidSetPortValue+0x38>
    1506:	8b 81       	ldd	r24, Y+3	; 0x03
    1508:	9c 81       	ldd	r25, Y+4	; 0x04
    150a:	00 97       	sbiw	r24, 0x00	; 0
    150c:	61 f0       	breq	.+24     	; 0x1526 <DIO_VidSetPortValue+0x4e>
    150e:	1e c0       	rjmp	.+60     	; 0x154c <DIO_VidSetPortValue+0x74>
    1510:	2b 81       	ldd	r18, Y+3	; 0x03
    1512:	3c 81       	ldd	r19, Y+4	; 0x04
    1514:	22 30       	cpi	r18, 0x02	; 2
    1516:	31 05       	cpc	r19, r1
    1518:	81 f0       	breq	.+32     	; 0x153a <DIO_VidSetPortValue+0x62>
    151a:	8b 81       	ldd	r24, Y+3	; 0x03
    151c:	9c 81       	ldd	r25, Y+4	; 0x04
    151e:	83 30       	cpi	r24, 0x03	; 3
    1520:	91 05       	cpc	r25, r1
    1522:	81 f0       	breq	.+32     	; 0x1544 <DIO_VidSetPortValue+0x6c>
    1524:	13 c0       	rjmp	.+38     	; 0x154c <DIO_VidSetPortValue+0x74>
		{
			case PORTA:PORT_A=copy_U8value		; break;
    1526:	eb e3       	ldi	r30, 0x3B	; 59
    1528:	f0 e0       	ldi	r31, 0x00	; 0
    152a:	8a 81       	ldd	r24, Y+2	; 0x02
    152c:	80 83       	st	Z, r24
    152e:	0e c0       	rjmp	.+28     	; 0x154c <DIO_VidSetPortValue+0x74>
			case PORTB:PORT_B=copy_U8value		; break;
    1530:	e8 e3       	ldi	r30, 0x38	; 56
    1532:	f0 e0       	ldi	r31, 0x00	; 0
    1534:	8a 81       	ldd	r24, Y+2	; 0x02
    1536:	80 83       	st	Z, r24
    1538:	09 c0       	rjmp	.+18     	; 0x154c <DIO_VidSetPortValue+0x74>
			case PORTC:PORT_C=copy_U8value		; break;
    153a:	e5 e3       	ldi	r30, 0x35	; 53
    153c:	f0 e0       	ldi	r31, 0x00	; 0
    153e:	8a 81       	ldd	r24, Y+2	; 0x02
    1540:	80 83       	st	Z, r24
    1542:	04 c0       	rjmp	.+8      	; 0x154c <DIO_VidSetPortValue+0x74>
			case PORTD:PORT_D=copy_U8value		; break;
    1544:	e2 e3       	ldi	r30, 0x32	; 50
    1546:	f0 e0       	ldi	r31, 0x00	; 0
    1548:	8a 81       	ldd	r24, Y+2	; 0x02
    154a:	80 83       	st	Z, r24
		}	
	
	
	
	
}
    154c:	0f 90       	pop	r0
    154e:	0f 90       	pop	r0
    1550:	0f 90       	pop	r0
    1552:	0f 90       	pop	r0
    1554:	cf 91       	pop	r28
    1556:	df 91       	pop	r29
    1558:	08 95       	ret

0000155a <DIO_VidTogglePin>:

void DIO_VidTogglePin			(u8 copy_u8port, u8 copy_U8pin)
{
    155a:	df 93       	push	r29
    155c:	cf 93       	push	r28
    155e:	00 d0       	rcall	.+0      	; 0x1560 <DIO_VidTogglePin+0x6>
    1560:	00 d0       	rcall	.+0      	; 0x1562 <DIO_VidTogglePin+0x8>
    1562:	cd b7       	in	r28, 0x3d	; 61
    1564:	de b7       	in	r29, 0x3e	; 62
    1566:	89 83       	std	Y+1, r24	; 0x01
    1568:	6a 83       	std	Y+2, r22	; 0x02

		switch (copy_u8port)
    156a:	89 81       	ldd	r24, Y+1	; 0x01
    156c:	28 2f       	mov	r18, r24
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	3c 83       	std	Y+4, r19	; 0x04
    1572:	2b 83       	std	Y+3, r18	; 0x03
    1574:	8b 81       	ldd	r24, Y+3	; 0x03
    1576:	9c 81       	ldd	r25, Y+4	; 0x04
    1578:	81 30       	cpi	r24, 0x01	; 1
    157a:	91 05       	cpc	r25, r1
    157c:	49 f1       	breq	.+82     	; 0x15d0 <DIO_VidTogglePin+0x76>
    157e:	2b 81       	ldd	r18, Y+3	; 0x03
    1580:	3c 81       	ldd	r19, Y+4	; 0x04
    1582:	22 30       	cpi	r18, 0x02	; 2
    1584:	31 05       	cpc	r19, r1
    1586:	2c f4       	brge	.+10     	; 0x1592 <DIO_VidTogglePin+0x38>
    1588:	8b 81       	ldd	r24, Y+3	; 0x03
    158a:	9c 81       	ldd	r25, Y+4	; 0x04
    158c:	00 97       	sbiw	r24, 0x00	; 0
    158e:	61 f0       	breq	.+24     	; 0x15a8 <DIO_VidTogglePin+0x4e>
    1590:	5a c0       	rjmp	.+180    	; 0x1646 <DIO_VidTogglePin+0xec>
    1592:	2b 81       	ldd	r18, Y+3	; 0x03
    1594:	3c 81       	ldd	r19, Y+4	; 0x04
    1596:	22 30       	cpi	r18, 0x02	; 2
    1598:	31 05       	cpc	r19, r1
    159a:	71 f1       	breq	.+92     	; 0x15f8 <DIO_VidTogglePin+0x9e>
    159c:	8b 81       	ldd	r24, Y+3	; 0x03
    159e:	9c 81       	ldd	r25, Y+4	; 0x04
    15a0:	83 30       	cpi	r24, 0x03	; 3
    15a2:	91 05       	cpc	r25, r1
    15a4:	e9 f1       	breq	.+122    	; 0x1620 <DIO_VidTogglePin+0xc6>
    15a6:	4f c0       	rjmp	.+158    	; 0x1646 <DIO_VidTogglePin+0xec>
		{
					case PORTA:TOG_BIT(PORT_A, copy_U8pin); break;
    15a8:	ab e3       	ldi	r26, 0x3B	; 59
    15aa:	b0 e0       	ldi	r27, 0x00	; 0
    15ac:	eb e3       	ldi	r30, 0x3B	; 59
    15ae:	f0 e0       	ldi	r31, 0x00	; 0
    15b0:	80 81       	ld	r24, Z
    15b2:	48 2f       	mov	r20, r24
    15b4:	8a 81       	ldd	r24, Y+2	; 0x02
    15b6:	28 2f       	mov	r18, r24
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	81 e0       	ldi	r24, 0x01	; 1
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	02 2e       	mov	r0, r18
    15c0:	02 c0       	rjmp	.+4      	; 0x15c6 <DIO_VidTogglePin+0x6c>
    15c2:	88 0f       	add	r24, r24
    15c4:	99 1f       	adc	r25, r25
    15c6:	0a 94       	dec	r0
    15c8:	e2 f7       	brpl	.-8      	; 0x15c2 <DIO_VidTogglePin+0x68>
    15ca:	84 27       	eor	r24, r20
    15cc:	8c 93       	st	X, r24
    15ce:	3b c0       	rjmp	.+118    	; 0x1646 <DIO_VidTogglePin+0xec>
					case PORTB:TOG_BIT(PORT_B, copy_U8pin); break;
    15d0:	a8 e3       	ldi	r26, 0x38	; 56
    15d2:	b0 e0       	ldi	r27, 0x00	; 0
    15d4:	e8 e3       	ldi	r30, 0x38	; 56
    15d6:	f0 e0       	ldi	r31, 0x00	; 0
    15d8:	80 81       	ld	r24, Z
    15da:	48 2f       	mov	r20, r24
    15dc:	8a 81       	ldd	r24, Y+2	; 0x02
    15de:	28 2f       	mov	r18, r24
    15e0:	30 e0       	ldi	r19, 0x00	; 0
    15e2:	81 e0       	ldi	r24, 0x01	; 1
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	02 2e       	mov	r0, r18
    15e8:	02 c0       	rjmp	.+4      	; 0x15ee <DIO_VidTogglePin+0x94>
    15ea:	88 0f       	add	r24, r24
    15ec:	99 1f       	adc	r25, r25
    15ee:	0a 94       	dec	r0
    15f0:	e2 f7       	brpl	.-8      	; 0x15ea <DIO_VidTogglePin+0x90>
    15f2:	84 27       	eor	r24, r20
    15f4:	8c 93       	st	X, r24
    15f6:	27 c0       	rjmp	.+78     	; 0x1646 <DIO_VidTogglePin+0xec>
					case PORTC:TOG_BIT(PORT_C, copy_U8pin); break;
    15f8:	a5 e3       	ldi	r26, 0x35	; 53
    15fa:	b0 e0       	ldi	r27, 0x00	; 0
    15fc:	e5 e3       	ldi	r30, 0x35	; 53
    15fe:	f0 e0       	ldi	r31, 0x00	; 0
    1600:	80 81       	ld	r24, Z
    1602:	48 2f       	mov	r20, r24
    1604:	8a 81       	ldd	r24, Y+2	; 0x02
    1606:	28 2f       	mov	r18, r24
    1608:	30 e0       	ldi	r19, 0x00	; 0
    160a:	81 e0       	ldi	r24, 0x01	; 1
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	02 2e       	mov	r0, r18
    1610:	02 c0       	rjmp	.+4      	; 0x1616 <DIO_VidTogglePin+0xbc>
    1612:	88 0f       	add	r24, r24
    1614:	99 1f       	adc	r25, r25
    1616:	0a 94       	dec	r0
    1618:	e2 f7       	brpl	.-8      	; 0x1612 <DIO_VidTogglePin+0xb8>
    161a:	84 27       	eor	r24, r20
    161c:	8c 93       	st	X, r24
    161e:	13 c0       	rjmp	.+38     	; 0x1646 <DIO_VidTogglePin+0xec>
					case PORTD:TOG_BIT(PORT_D, copy_U8pin); break;
    1620:	a2 e3       	ldi	r26, 0x32	; 50
    1622:	b0 e0       	ldi	r27, 0x00	; 0
    1624:	e2 e3       	ldi	r30, 0x32	; 50
    1626:	f0 e0       	ldi	r31, 0x00	; 0
    1628:	80 81       	ld	r24, Z
    162a:	48 2f       	mov	r20, r24
    162c:	8a 81       	ldd	r24, Y+2	; 0x02
    162e:	28 2f       	mov	r18, r24
    1630:	30 e0       	ldi	r19, 0x00	; 0
    1632:	81 e0       	ldi	r24, 0x01	; 1
    1634:	90 e0       	ldi	r25, 0x00	; 0
    1636:	02 2e       	mov	r0, r18
    1638:	02 c0       	rjmp	.+4      	; 0x163e <DIO_VidTogglePin+0xe4>
    163a:	88 0f       	add	r24, r24
    163c:	99 1f       	adc	r25, r25
    163e:	0a 94       	dec	r0
    1640:	e2 f7       	brpl	.-8      	; 0x163a <DIO_VidTogglePin+0xe0>
    1642:	84 27       	eor	r24, r20
    1644:	8c 93       	st	X, r24
		}

}
    1646:	0f 90       	pop	r0
    1648:	0f 90       	pop	r0
    164a:	0f 90       	pop	r0
    164c:	0f 90       	pop	r0
    164e:	cf 91       	pop	r28
    1650:	df 91       	pop	r29
    1652:	08 95       	ret

00001654 <DIO_u8GetPortValue>:

u8 DIO_u8GetPortValue(u8 copy_u8port)
{
    1654:	df 93       	push	r29
    1656:	cf 93       	push	r28
    1658:	00 d0       	rcall	.+0      	; 0x165a <DIO_u8GetPortValue+0x6>
    165a:	00 d0       	rcall	.+0      	; 0x165c <DIO_u8GetPortValue+0x8>
    165c:	cd b7       	in	r28, 0x3d	; 61
    165e:	de b7       	in	r29, 0x3e	; 62
    1660:	8a 83       	std	Y+2, r24	; 0x02
		u8 Lcal_U8PortResult=0;
    1662:	19 82       	std	Y+1, r1	; 0x01
	switch(copy_u8port){
    1664:	8a 81       	ldd	r24, Y+2	; 0x02
    1666:	28 2f       	mov	r18, r24
    1668:	30 e0       	ldi	r19, 0x00	; 0
    166a:	3c 83       	std	Y+4, r19	; 0x04
    166c:	2b 83       	std	Y+3, r18	; 0x03
    166e:	8b 81       	ldd	r24, Y+3	; 0x03
    1670:	9c 81       	ldd	r25, Y+4	; 0x04
    1672:	81 30       	cpi	r24, 0x01	; 1
    1674:	91 05       	cpc	r25, r1
    1676:	d1 f0       	breq	.+52     	; 0x16ac <DIO_u8GetPortValue+0x58>
    1678:	2b 81       	ldd	r18, Y+3	; 0x03
    167a:	3c 81       	ldd	r19, Y+4	; 0x04
    167c:	22 30       	cpi	r18, 0x02	; 2
    167e:	31 05       	cpc	r19, r1
    1680:	2c f4       	brge	.+10     	; 0x168c <DIO_u8GetPortValue+0x38>
    1682:	8b 81       	ldd	r24, Y+3	; 0x03
    1684:	9c 81       	ldd	r25, Y+4	; 0x04
    1686:	00 97       	sbiw	r24, 0x00	; 0
    1688:	61 f0       	breq	.+24     	; 0x16a2 <DIO_u8GetPortValue+0x4e>
    168a:	1e c0       	rjmp	.+60     	; 0x16c8 <DIO_u8GetPortValue+0x74>
    168c:	2b 81       	ldd	r18, Y+3	; 0x03
    168e:	3c 81       	ldd	r19, Y+4	; 0x04
    1690:	22 30       	cpi	r18, 0x02	; 2
    1692:	31 05       	cpc	r19, r1
    1694:	81 f0       	breq	.+32     	; 0x16b6 <DIO_u8GetPortValue+0x62>
    1696:	8b 81       	ldd	r24, Y+3	; 0x03
    1698:	9c 81       	ldd	r25, Y+4	; 0x04
    169a:	83 30       	cpi	r24, 0x03	; 3
    169c:	91 05       	cpc	r25, r1
    169e:	81 f0       	breq	.+32     	; 0x16c0 <DIO_u8GetPortValue+0x6c>
    16a0:	13 c0       	rjmp	.+38     	; 0x16c8 <DIO_u8GetPortValue+0x74>

			case PORTA :	Lcal_U8PortResult=PINA;	        break;
    16a2:	e9 e3       	ldi	r30, 0x39	; 57
    16a4:	f0 e0       	ldi	r31, 0x00	; 0
    16a6:	80 81       	ld	r24, Z
    16a8:	89 83       	std	Y+1, r24	; 0x01
    16aa:	0e c0       	rjmp	.+28     	; 0x16c8 <DIO_u8GetPortValue+0x74>
			case PORTB :	Lcal_U8PortResult=PINB; 		    break;
    16ac:	e6 e3       	ldi	r30, 0x36	; 54
    16ae:	f0 e0       	ldi	r31, 0x00	; 0
    16b0:	80 81       	ld	r24, Z
    16b2:	89 83       	std	Y+1, r24	; 0x01
    16b4:	09 c0       	rjmp	.+18     	; 0x16c8 <DIO_u8GetPortValue+0x74>
			case PORTC :	Lcal_U8PortResult=PINC;			break;
    16b6:	e3 e3       	ldi	r30, 0x33	; 51
    16b8:	f0 e0       	ldi	r31, 0x00	; 0
    16ba:	80 81       	ld	r24, Z
    16bc:	89 83       	std	Y+1, r24	; 0x01
    16be:	04 c0       	rjmp	.+8      	; 0x16c8 <DIO_u8GetPortValue+0x74>
			case PORTD :	Lcal_U8PortResult=PIND;			break;
    16c0:	e0 e3       	ldi	r30, 0x30	; 48
    16c2:	f0 e0       	ldi	r31, 0x00	; 0
    16c4:	80 81       	ld	r24, Z
    16c6:	89 83       	std	Y+1, r24	; 0x01

			}


return(Lcal_U8PortResult);
    16c8:	89 81       	ldd	r24, Y+1	; 0x01
	
	
}
    16ca:	0f 90       	pop	r0
    16cc:	0f 90       	pop	r0
    16ce:	0f 90       	pop	r0
    16d0:	0f 90       	pop	r0
    16d2:	cf 91       	pop	r28
    16d4:	df 91       	pop	r29
    16d6:	08 95       	ret

000016d8 <LCD_VidInit>:




void LCD_VidInit(void)
{
    16d8:	0f 93       	push	r16
    16da:	1f 93       	push	r17
    16dc:	df 93       	push	r29
    16de:	cf 93       	push	r28
    16e0:	cd b7       	in	r28, 0x3d	; 61
    16e2:	de b7       	in	r29, 0x3e	; 62
    16e4:	c6 54       	subi	r28, 0x46	; 70
    16e6:	d0 40       	sbci	r29, 0x00	; 0
    16e8:	0f b6       	in	r0, 0x3f	; 63
    16ea:	f8 94       	cli
    16ec:	de bf       	out	0x3e, r29	; 62
    16ee:	0f be       	out	0x3f, r0	; 63
    16f0:	cd bf       	out	0x3d, r28	; 61

	#if LCD_Mode==EIGHT_BIT
	DIO_VidSetPinDirection	( Lcopy_u8PORT	,RS_copy_u8Pin,  OUTPUT);
    16f2:	83 e0       	ldi	r24, 0x03	; 3
    16f4:	60 e0       	ldi	r22, 0x00	; 0
    16f6:	41 e0       	ldi	r20, 0x01	; 1
    16f8:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection	( Lcopy_u8PORT	,R_w_copy_u8Pin, OUTPUT);
    16fc:	83 e0       	ldi	r24, 0x03	; 3
    16fe:	61 e0       	ldi	r22, 0x01	; 1
    1700:	41 e0       	ldi	r20, 0x01	; 1
    1702:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection	( Lcopy_u8PORT	,E_copy_u8Pin,   OUTPUT);
    1706:	83 e0       	ldi	r24, 0x03	; 3
    1708:	62 e0       	ldi	r22, 0x02	; 2
    170a:	41 e0       	ldi	r20, 0x01	; 1
    170c:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_VidSetPinDirection>
    1710:	fe 01       	movw	r30, r28
    1712:	ed 5b       	subi	r30, 0xBD	; 189
    1714:	ff 4f       	sbci	r31, 0xFF	; 255
    1716:	80 e0       	ldi	r24, 0x00	; 0
    1718:	90 e0       	ldi	r25, 0x00	; 0
    171a:	a0 e2       	ldi	r26, 0x20	; 32
    171c:	b2 e4       	ldi	r27, 0x42	; 66
    171e:	80 83       	st	Z, r24
    1720:	91 83       	std	Z+1, r25	; 0x01
    1722:	a2 83       	std	Z+2, r26	; 0x02
    1724:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1726:	8e 01       	movw	r16, r28
    1728:	01 5c       	subi	r16, 0xC1	; 193
    172a:	1f 4f       	sbci	r17, 0xFF	; 255
    172c:	fe 01       	movw	r30, r28
    172e:	ed 5b       	subi	r30, 0xBD	; 189
    1730:	ff 4f       	sbci	r31, 0xFF	; 255
    1732:	60 81       	ld	r22, Z
    1734:	71 81       	ldd	r23, Z+1	; 0x01
    1736:	82 81       	ldd	r24, Z+2	; 0x02
    1738:	93 81       	ldd	r25, Z+3	; 0x03
    173a:	20 e0       	ldi	r18, 0x00	; 0
    173c:	30 e0       	ldi	r19, 0x00	; 0
    173e:	4a ef       	ldi	r20, 0xFA	; 250
    1740:	54 e4       	ldi	r21, 0x44	; 68
    1742:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1746:	dc 01       	movw	r26, r24
    1748:	cb 01       	movw	r24, r22
    174a:	f8 01       	movw	r30, r16
    174c:	80 83       	st	Z, r24
    174e:	91 83       	std	Z+1, r25	; 0x01
    1750:	a2 83       	std	Z+2, r26	; 0x02
    1752:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1754:	fe 01       	movw	r30, r28
    1756:	ff 96       	adiw	r30, 0x3f	; 63
    1758:	60 81       	ld	r22, Z
    175a:	71 81       	ldd	r23, Z+1	; 0x01
    175c:	82 81       	ldd	r24, Z+2	; 0x02
    175e:	93 81       	ldd	r25, Z+3	; 0x03
    1760:	20 e0       	ldi	r18, 0x00	; 0
    1762:	30 e0       	ldi	r19, 0x00	; 0
    1764:	40 e8       	ldi	r20, 0x80	; 128
    1766:	5f e3       	ldi	r21, 0x3F	; 63
    1768:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    176c:	88 23       	and	r24, r24
    176e:	2c f4       	brge	.+10     	; 0x177a <LCD_VidInit+0xa2>
		__ticks = 1;
    1770:	81 e0       	ldi	r24, 0x01	; 1
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	9e af       	std	Y+62, r25	; 0x3e
    1776:	8d af       	std	Y+61, r24	; 0x3d
    1778:	46 c0       	rjmp	.+140    	; 0x1806 <LCD_VidInit+0x12e>
	else if (__tmp > 65535)
    177a:	fe 01       	movw	r30, r28
    177c:	ff 96       	adiw	r30, 0x3f	; 63
    177e:	60 81       	ld	r22, Z
    1780:	71 81       	ldd	r23, Z+1	; 0x01
    1782:	82 81       	ldd	r24, Z+2	; 0x02
    1784:	93 81       	ldd	r25, Z+3	; 0x03
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	3f ef       	ldi	r19, 0xFF	; 255
    178a:	4f e7       	ldi	r20, 0x7F	; 127
    178c:	57 e4       	ldi	r21, 0x47	; 71
    178e:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    1792:	18 16       	cp	r1, r24
    1794:	64 f5       	brge	.+88     	; 0x17ee <LCD_VidInit+0x116>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1796:	fe 01       	movw	r30, r28
    1798:	ed 5b       	subi	r30, 0xBD	; 189
    179a:	ff 4f       	sbci	r31, 0xFF	; 255
    179c:	60 81       	ld	r22, Z
    179e:	71 81       	ldd	r23, Z+1	; 0x01
    17a0:	82 81       	ldd	r24, Z+2	; 0x02
    17a2:	93 81       	ldd	r25, Z+3	; 0x03
    17a4:	20 e0       	ldi	r18, 0x00	; 0
    17a6:	30 e0       	ldi	r19, 0x00	; 0
    17a8:	40 e2       	ldi	r20, 0x20	; 32
    17aa:	51 e4       	ldi	r21, 0x41	; 65
    17ac:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    17b0:	dc 01       	movw	r26, r24
    17b2:	cb 01       	movw	r24, r22
    17b4:	bc 01       	movw	r22, r24
    17b6:	cd 01       	movw	r24, r26
    17b8:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    17bc:	dc 01       	movw	r26, r24
    17be:	cb 01       	movw	r24, r22
    17c0:	9e af       	std	Y+62, r25	; 0x3e
    17c2:	8d af       	std	Y+61, r24	; 0x3d
    17c4:	0f c0       	rjmp	.+30     	; 0x17e4 <LCD_VidInit+0x10c>
    17c6:	88 ec       	ldi	r24, 0xC8	; 200
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	9c af       	std	Y+60, r25	; 0x3c
    17cc:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    17ce:	8b ad       	ldd	r24, Y+59	; 0x3b
    17d0:	9c ad       	ldd	r25, Y+60	; 0x3c
    17d2:	01 97       	sbiw	r24, 0x01	; 1
    17d4:	f1 f7       	brne	.-4      	; 0x17d2 <LCD_VidInit+0xfa>
    17d6:	9c af       	std	Y+60, r25	; 0x3c
    17d8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17da:	8d ad       	ldd	r24, Y+61	; 0x3d
    17dc:	9e ad       	ldd	r25, Y+62	; 0x3e
    17de:	01 97       	sbiw	r24, 0x01	; 1
    17e0:	9e af       	std	Y+62, r25	; 0x3e
    17e2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17e4:	8d ad       	ldd	r24, Y+61	; 0x3d
    17e6:	9e ad       	ldd	r25, Y+62	; 0x3e
    17e8:	00 97       	sbiw	r24, 0x00	; 0
    17ea:	69 f7       	brne	.-38     	; 0x17c6 <LCD_VidInit+0xee>
    17ec:	16 c0       	rjmp	.+44     	; 0x181a <LCD_VidInit+0x142>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17ee:	fe 01       	movw	r30, r28
    17f0:	ff 96       	adiw	r30, 0x3f	; 63
    17f2:	60 81       	ld	r22, Z
    17f4:	71 81       	ldd	r23, Z+1	; 0x01
    17f6:	82 81       	ldd	r24, Z+2	; 0x02
    17f8:	93 81       	ldd	r25, Z+3	; 0x03
    17fa:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    17fe:	dc 01       	movw	r26, r24
    1800:	cb 01       	movw	r24, r22
    1802:	9e af       	std	Y+62, r25	; 0x3e
    1804:	8d af       	std	Y+61, r24	; 0x3d
    1806:	8d ad       	ldd	r24, Y+61	; 0x3d
    1808:	9e ad       	ldd	r25, Y+62	; 0x3e
    180a:	9a af       	std	Y+58, r25	; 0x3a
    180c:	89 af       	std	Y+57, r24	; 0x39
    180e:	89 ad       	ldd	r24, Y+57	; 0x39
    1810:	9a ad       	ldd	r25, Y+58	; 0x3a
    1812:	01 97       	sbiw	r24, 0x01	; 1
    1814:	f1 f7       	brne	.-4      	; 0x1812 <LCD_VidInit+0x13a>
    1816:	9a af       	std	Y+58, r25	; 0x3a
    1818:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(40);
	DIO_VidSetPortDirection	( LDcopy_u8PORT,OUTPUT);
    181a:	82 e0       	ldi	r24, 0x02	; 2
    181c:	61 e0       	ldi	r22, 0x01	; 1
    181e:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <DIO_VidSetPortDirection>

	LCD_VidSendCommand(0b00111000);
    1822:	88 e3       	ldi	r24, 0x38	; 56
    1824:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <LCD_VidSendCommand>
    1828:	80 e0       	ldi	r24, 0x00	; 0
    182a:	90 e0       	ldi	r25, 0x00	; 0
    182c:	a0 e8       	ldi	r26, 0x80	; 128
    182e:	bf e3       	ldi	r27, 0x3F	; 63
    1830:	8d ab       	std	Y+53, r24	; 0x35
    1832:	9e ab       	std	Y+54, r25	; 0x36
    1834:	af ab       	std	Y+55, r26	; 0x37
    1836:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1838:	6d a9       	ldd	r22, Y+53	; 0x35
    183a:	7e a9       	ldd	r23, Y+54	; 0x36
    183c:	8f a9       	ldd	r24, Y+55	; 0x37
    183e:	98 ad       	ldd	r25, Y+56	; 0x38
    1840:	20 e0       	ldi	r18, 0x00	; 0
    1842:	30 e0       	ldi	r19, 0x00	; 0
    1844:	4a ef       	ldi	r20, 0xFA	; 250
    1846:	54 e4       	ldi	r21, 0x44	; 68
    1848:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    184c:	dc 01       	movw	r26, r24
    184e:	cb 01       	movw	r24, r22
    1850:	89 ab       	std	Y+49, r24	; 0x31
    1852:	9a ab       	std	Y+50, r25	; 0x32
    1854:	ab ab       	std	Y+51, r26	; 0x33
    1856:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1858:	69 a9       	ldd	r22, Y+49	; 0x31
    185a:	7a a9       	ldd	r23, Y+50	; 0x32
    185c:	8b a9       	ldd	r24, Y+51	; 0x33
    185e:	9c a9       	ldd	r25, Y+52	; 0x34
    1860:	20 e0       	ldi	r18, 0x00	; 0
    1862:	30 e0       	ldi	r19, 0x00	; 0
    1864:	40 e8       	ldi	r20, 0x80	; 128
    1866:	5f e3       	ldi	r21, 0x3F	; 63
    1868:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    186c:	88 23       	and	r24, r24
    186e:	2c f4       	brge	.+10     	; 0x187a <LCD_VidInit+0x1a2>
		__ticks = 1;
    1870:	81 e0       	ldi	r24, 0x01	; 1
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	98 ab       	std	Y+48, r25	; 0x30
    1876:	8f a7       	std	Y+47, r24	; 0x2f
    1878:	3f c0       	rjmp	.+126    	; 0x18f8 <LCD_VidInit+0x220>
	else if (__tmp > 65535)
    187a:	69 a9       	ldd	r22, Y+49	; 0x31
    187c:	7a a9       	ldd	r23, Y+50	; 0x32
    187e:	8b a9       	ldd	r24, Y+51	; 0x33
    1880:	9c a9       	ldd	r25, Y+52	; 0x34
    1882:	20 e0       	ldi	r18, 0x00	; 0
    1884:	3f ef       	ldi	r19, 0xFF	; 255
    1886:	4f e7       	ldi	r20, 0x7F	; 127
    1888:	57 e4       	ldi	r21, 0x47	; 71
    188a:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    188e:	18 16       	cp	r1, r24
    1890:	4c f5       	brge	.+82     	; 0x18e4 <LCD_VidInit+0x20c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1892:	6d a9       	ldd	r22, Y+53	; 0x35
    1894:	7e a9       	ldd	r23, Y+54	; 0x36
    1896:	8f a9       	ldd	r24, Y+55	; 0x37
    1898:	98 ad       	ldd	r25, Y+56	; 0x38
    189a:	20 e0       	ldi	r18, 0x00	; 0
    189c:	30 e0       	ldi	r19, 0x00	; 0
    189e:	40 e2       	ldi	r20, 0x20	; 32
    18a0:	51 e4       	ldi	r21, 0x41	; 65
    18a2:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    18a6:	dc 01       	movw	r26, r24
    18a8:	cb 01       	movw	r24, r22
    18aa:	bc 01       	movw	r22, r24
    18ac:	cd 01       	movw	r24, r26
    18ae:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    18b2:	dc 01       	movw	r26, r24
    18b4:	cb 01       	movw	r24, r22
    18b6:	98 ab       	std	Y+48, r25	; 0x30
    18b8:	8f a7       	std	Y+47, r24	; 0x2f
    18ba:	0f c0       	rjmp	.+30     	; 0x18da <LCD_VidInit+0x202>
    18bc:	88 ec       	ldi	r24, 0xC8	; 200
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	9e a7       	std	Y+46, r25	; 0x2e
    18c2:	8d a7       	std	Y+45, r24	; 0x2d
    18c4:	8d a5       	ldd	r24, Y+45	; 0x2d
    18c6:	9e a5       	ldd	r25, Y+46	; 0x2e
    18c8:	01 97       	sbiw	r24, 0x01	; 1
    18ca:	f1 f7       	brne	.-4      	; 0x18c8 <LCD_VidInit+0x1f0>
    18cc:	9e a7       	std	Y+46, r25	; 0x2e
    18ce:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18d0:	8f a5       	ldd	r24, Y+47	; 0x2f
    18d2:	98 a9       	ldd	r25, Y+48	; 0x30
    18d4:	01 97       	sbiw	r24, 0x01	; 1
    18d6:	98 ab       	std	Y+48, r25	; 0x30
    18d8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18da:	8f a5       	ldd	r24, Y+47	; 0x2f
    18dc:	98 a9       	ldd	r25, Y+48	; 0x30
    18de:	00 97       	sbiw	r24, 0x00	; 0
    18e0:	69 f7       	brne	.-38     	; 0x18bc <LCD_VidInit+0x1e4>
    18e2:	14 c0       	rjmp	.+40     	; 0x190c <LCD_VidInit+0x234>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18e4:	69 a9       	ldd	r22, Y+49	; 0x31
    18e6:	7a a9       	ldd	r23, Y+50	; 0x32
    18e8:	8b a9       	ldd	r24, Y+51	; 0x33
    18ea:	9c a9       	ldd	r25, Y+52	; 0x34
    18ec:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    18f0:	dc 01       	movw	r26, r24
    18f2:	cb 01       	movw	r24, r22
    18f4:	98 ab       	std	Y+48, r25	; 0x30
    18f6:	8f a7       	std	Y+47, r24	; 0x2f
    18f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    18fa:	98 a9       	ldd	r25, Y+48	; 0x30
    18fc:	9c a7       	std	Y+44, r25	; 0x2c
    18fe:	8b a7       	std	Y+43, r24	; 0x2b
    1900:	8b a5       	ldd	r24, Y+43	; 0x2b
    1902:	9c a5       	ldd	r25, Y+44	; 0x2c
    1904:	01 97       	sbiw	r24, 0x01	; 1
    1906:	f1 f7       	brne	.-4      	; 0x1904 <LCD_VidInit+0x22c>
    1908:	9c a7       	std	Y+44, r25	; 0x2c
    190a:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	LCD_VidSendCommand(0b00001111);
    190c:	8f e0       	ldi	r24, 0x0F	; 15
    190e:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <LCD_VidSendCommand>
    1912:	80 e0       	ldi	r24, 0x00	; 0
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	a0 e8       	ldi	r26, 0x80	; 128
    1918:	bf e3       	ldi	r27, 0x3F	; 63
    191a:	8f a3       	std	Y+39, r24	; 0x27
    191c:	98 a7       	std	Y+40, r25	; 0x28
    191e:	a9 a7       	std	Y+41, r26	; 0x29
    1920:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1922:	6f a1       	ldd	r22, Y+39	; 0x27
    1924:	78 a5       	ldd	r23, Y+40	; 0x28
    1926:	89 a5       	ldd	r24, Y+41	; 0x29
    1928:	9a a5       	ldd	r25, Y+42	; 0x2a
    192a:	20 e0       	ldi	r18, 0x00	; 0
    192c:	30 e0       	ldi	r19, 0x00	; 0
    192e:	4a ef       	ldi	r20, 0xFA	; 250
    1930:	54 e4       	ldi	r21, 0x44	; 68
    1932:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1936:	dc 01       	movw	r26, r24
    1938:	cb 01       	movw	r24, r22
    193a:	8b a3       	std	Y+35, r24	; 0x23
    193c:	9c a3       	std	Y+36, r25	; 0x24
    193e:	ad a3       	std	Y+37, r26	; 0x25
    1940:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1942:	6b a1       	ldd	r22, Y+35	; 0x23
    1944:	7c a1       	ldd	r23, Y+36	; 0x24
    1946:	8d a1       	ldd	r24, Y+37	; 0x25
    1948:	9e a1       	ldd	r25, Y+38	; 0x26
    194a:	20 e0       	ldi	r18, 0x00	; 0
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	40 e8       	ldi	r20, 0x80	; 128
    1950:	5f e3       	ldi	r21, 0x3F	; 63
    1952:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    1956:	88 23       	and	r24, r24
    1958:	2c f4       	brge	.+10     	; 0x1964 <LCD_VidInit+0x28c>
		__ticks = 1;
    195a:	81 e0       	ldi	r24, 0x01	; 1
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	9a a3       	std	Y+34, r25	; 0x22
    1960:	89 a3       	std	Y+33, r24	; 0x21
    1962:	3f c0       	rjmp	.+126    	; 0x19e2 <LCD_VidInit+0x30a>
	else if (__tmp > 65535)
    1964:	6b a1       	ldd	r22, Y+35	; 0x23
    1966:	7c a1       	ldd	r23, Y+36	; 0x24
    1968:	8d a1       	ldd	r24, Y+37	; 0x25
    196a:	9e a1       	ldd	r25, Y+38	; 0x26
    196c:	20 e0       	ldi	r18, 0x00	; 0
    196e:	3f ef       	ldi	r19, 0xFF	; 255
    1970:	4f e7       	ldi	r20, 0x7F	; 127
    1972:	57 e4       	ldi	r21, 0x47	; 71
    1974:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    1978:	18 16       	cp	r1, r24
    197a:	4c f5       	brge	.+82     	; 0x19ce <LCD_VidInit+0x2f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    197c:	6f a1       	ldd	r22, Y+39	; 0x27
    197e:	78 a5       	ldd	r23, Y+40	; 0x28
    1980:	89 a5       	ldd	r24, Y+41	; 0x29
    1982:	9a a5       	ldd	r25, Y+42	; 0x2a
    1984:	20 e0       	ldi	r18, 0x00	; 0
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	40 e2       	ldi	r20, 0x20	; 32
    198a:	51 e4       	ldi	r21, 0x41	; 65
    198c:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1990:	dc 01       	movw	r26, r24
    1992:	cb 01       	movw	r24, r22
    1994:	bc 01       	movw	r22, r24
    1996:	cd 01       	movw	r24, r26
    1998:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    199c:	dc 01       	movw	r26, r24
    199e:	cb 01       	movw	r24, r22
    19a0:	9a a3       	std	Y+34, r25	; 0x22
    19a2:	89 a3       	std	Y+33, r24	; 0x21
    19a4:	0f c0       	rjmp	.+30     	; 0x19c4 <LCD_VidInit+0x2ec>
    19a6:	88 ec       	ldi	r24, 0xC8	; 200
    19a8:	90 e0       	ldi	r25, 0x00	; 0
    19aa:	98 a3       	std	Y+32, r25	; 0x20
    19ac:	8f 8f       	std	Y+31, r24	; 0x1f
    19ae:	8f 8d       	ldd	r24, Y+31	; 0x1f
    19b0:	98 a1       	ldd	r25, Y+32	; 0x20
    19b2:	01 97       	sbiw	r24, 0x01	; 1
    19b4:	f1 f7       	brne	.-4      	; 0x19b2 <LCD_VidInit+0x2da>
    19b6:	98 a3       	std	Y+32, r25	; 0x20
    19b8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ba:	89 a1       	ldd	r24, Y+33	; 0x21
    19bc:	9a a1       	ldd	r25, Y+34	; 0x22
    19be:	01 97       	sbiw	r24, 0x01	; 1
    19c0:	9a a3       	std	Y+34, r25	; 0x22
    19c2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c4:	89 a1       	ldd	r24, Y+33	; 0x21
    19c6:	9a a1       	ldd	r25, Y+34	; 0x22
    19c8:	00 97       	sbiw	r24, 0x00	; 0
    19ca:	69 f7       	brne	.-38     	; 0x19a6 <LCD_VidInit+0x2ce>
    19cc:	14 c0       	rjmp	.+40     	; 0x19f6 <LCD_VidInit+0x31e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19ce:	6b a1       	ldd	r22, Y+35	; 0x23
    19d0:	7c a1       	ldd	r23, Y+36	; 0x24
    19d2:	8d a1       	ldd	r24, Y+37	; 0x25
    19d4:	9e a1       	ldd	r25, Y+38	; 0x26
    19d6:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    19da:	dc 01       	movw	r26, r24
    19dc:	cb 01       	movw	r24, r22
    19de:	9a a3       	std	Y+34, r25	; 0x22
    19e0:	89 a3       	std	Y+33, r24	; 0x21
    19e2:	89 a1       	ldd	r24, Y+33	; 0x21
    19e4:	9a a1       	ldd	r25, Y+34	; 0x22
    19e6:	9e 8f       	std	Y+30, r25	; 0x1e
    19e8:	8d 8f       	std	Y+29, r24	; 0x1d
    19ea:	8d 8d       	ldd	r24, Y+29	; 0x1d
    19ec:	9e 8d       	ldd	r25, Y+30	; 0x1e
    19ee:	01 97       	sbiw	r24, 0x01	; 1
    19f0:	f1 f7       	brne	.-4      	; 0x19ee <LCD_VidInit+0x316>
    19f2:	9e 8f       	std	Y+30, r25	; 0x1e
    19f4:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_VidSendCommand(0b00000001);
    19f6:	81 e0       	ldi	r24, 0x01	; 1
    19f8:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <LCD_VidSendCommand>
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	a0 e0       	ldi	r26, 0x00	; 0
    1a02:	b0 e4       	ldi	r27, 0x40	; 64
    1a04:	89 8f       	std	Y+25, r24	; 0x19
    1a06:	9a 8f       	std	Y+26, r25	; 0x1a
    1a08:	ab 8f       	std	Y+27, r26	; 0x1b
    1a0a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a0c:	69 8d       	ldd	r22, Y+25	; 0x19
    1a0e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a10:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a12:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a14:	20 e0       	ldi	r18, 0x00	; 0
    1a16:	30 e0       	ldi	r19, 0x00	; 0
    1a18:	4a ef       	ldi	r20, 0xFA	; 250
    1a1a:	54 e4       	ldi	r21, 0x44	; 68
    1a1c:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1a20:	dc 01       	movw	r26, r24
    1a22:	cb 01       	movw	r24, r22
    1a24:	8d 8b       	std	Y+21, r24	; 0x15
    1a26:	9e 8b       	std	Y+22, r25	; 0x16
    1a28:	af 8b       	std	Y+23, r26	; 0x17
    1a2a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1a2c:	6d 89       	ldd	r22, Y+21	; 0x15
    1a2e:	7e 89       	ldd	r23, Y+22	; 0x16
    1a30:	8f 89       	ldd	r24, Y+23	; 0x17
    1a32:	98 8d       	ldd	r25, Y+24	; 0x18
    1a34:	20 e0       	ldi	r18, 0x00	; 0
    1a36:	30 e0       	ldi	r19, 0x00	; 0
    1a38:	40 e8       	ldi	r20, 0x80	; 128
    1a3a:	5f e3       	ldi	r21, 0x3F	; 63
    1a3c:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    1a40:	88 23       	and	r24, r24
    1a42:	2c f4       	brge	.+10     	; 0x1a4e <LCD_VidInit+0x376>
		__ticks = 1;
    1a44:	81 e0       	ldi	r24, 0x01	; 1
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	9c 8b       	std	Y+20, r25	; 0x14
    1a4a:	8b 8b       	std	Y+19, r24	; 0x13
    1a4c:	3f c0       	rjmp	.+126    	; 0x1acc <LCD_VidInit+0x3f4>
	else if (__tmp > 65535)
    1a4e:	6d 89       	ldd	r22, Y+21	; 0x15
    1a50:	7e 89       	ldd	r23, Y+22	; 0x16
    1a52:	8f 89       	ldd	r24, Y+23	; 0x17
    1a54:	98 8d       	ldd	r25, Y+24	; 0x18
    1a56:	20 e0       	ldi	r18, 0x00	; 0
    1a58:	3f ef       	ldi	r19, 0xFF	; 255
    1a5a:	4f e7       	ldi	r20, 0x7F	; 127
    1a5c:	57 e4       	ldi	r21, 0x47	; 71
    1a5e:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    1a62:	18 16       	cp	r1, r24
    1a64:	4c f5       	brge	.+82     	; 0x1ab8 <LCD_VidInit+0x3e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a66:	69 8d       	ldd	r22, Y+25	; 0x19
    1a68:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a6a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a6c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a6e:	20 e0       	ldi	r18, 0x00	; 0
    1a70:	30 e0       	ldi	r19, 0x00	; 0
    1a72:	40 e2       	ldi	r20, 0x20	; 32
    1a74:	51 e4       	ldi	r21, 0x41	; 65
    1a76:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1a7a:	dc 01       	movw	r26, r24
    1a7c:	cb 01       	movw	r24, r22
    1a7e:	bc 01       	movw	r22, r24
    1a80:	cd 01       	movw	r24, r26
    1a82:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1a86:	dc 01       	movw	r26, r24
    1a88:	cb 01       	movw	r24, r22
    1a8a:	9c 8b       	std	Y+20, r25	; 0x14
    1a8c:	8b 8b       	std	Y+19, r24	; 0x13
    1a8e:	0f c0       	rjmp	.+30     	; 0x1aae <LCD_VidInit+0x3d6>
    1a90:	88 ec       	ldi	r24, 0xC8	; 200
    1a92:	90 e0       	ldi	r25, 0x00	; 0
    1a94:	9a 8b       	std	Y+18, r25	; 0x12
    1a96:	89 8b       	std	Y+17, r24	; 0x11
    1a98:	89 89       	ldd	r24, Y+17	; 0x11
    1a9a:	9a 89       	ldd	r25, Y+18	; 0x12
    1a9c:	01 97       	sbiw	r24, 0x01	; 1
    1a9e:	f1 f7       	brne	.-4      	; 0x1a9c <LCD_VidInit+0x3c4>
    1aa0:	9a 8b       	std	Y+18, r25	; 0x12
    1aa2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aa4:	8b 89       	ldd	r24, Y+19	; 0x13
    1aa6:	9c 89       	ldd	r25, Y+20	; 0x14
    1aa8:	01 97       	sbiw	r24, 0x01	; 1
    1aaa:	9c 8b       	std	Y+20, r25	; 0x14
    1aac:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aae:	8b 89       	ldd	r24, Y+19	; 0x13
    1ab0:	9c 89       	ldd	r25, Y+20	; 0x14
    1ab2:	00 97       	sbiw	r24, 0x00	; 0
    1ab4:	69 f7       	brne	.-38     	; 0x1a90 <LCD_VidInit+0x3b8>
    1ab6:	14 c0       	rjmp	.+40     	; 0x1ae0 <LCD_VidInit+0x408>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ab8:	6d 89       	ldd	r22, Y+21	; 0x15
    1aba:	7e 89       	ldd	r23, Y+22	; 0x16
    1abc:	8f 89       	ldd	r24, Y+23	; 0x17
    1abe:	98 8d       	ldd	r25, Y+24	; 0x18
    1ac0:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1ac4:	dc 01       	movw	r26, r24
    1ac6:	cb 01       	movw	r24, r22
    1ac8:	9c 8b       	std	Y+20, r25	; 0x14
    1aca:	8b 8b       	std	Y+19, r24	; 0x13
    1acc:	8b 89       	ldd	r24, Y+19	; 0x13
    1ace:	9c 89       	ldd	r25, Y+20	; 0x14
    1ad0:	98 8b       	std	Y+16, r25	; 0x10
    1ad2:	8f 87       	std	Y+15, r24	; 0x0f
    1ad4:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ad6:	98 89       	ldd	r25, Y+16	; 0x10
    1ad8:	01 97       	sbiw	r24, 0x01	; 1
    1ada:	f1 f7       	brne	.-4      	; 0x1ad8 <LCD_VidInit+0x400>
    1adc:	98 8b       	std	Y+16, r25	; 0x10
    1ade:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	LCD_VidSendCommand(0b00000110);
    1ae0:	86 e0       	ldi	r24, 0x06	; 6
    1ae2:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <LCD_VidSendCommand>
    1ae6:	80 e0       	ldi	r24, 0x00	; 0
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	a0 e8       	ldi	r26, 0x80	; 128
    1aec:	bf e3       	ldi	r27, 0x3F	; 63
    1aee:	8b 87       	std	Y+11, r24	; 0x0b
    1af0:	9c 87       	std	Y+12, r25	; 0x0c
    1af2:	ad 87       	std	Y+13, r26	; 0x0d
    1af4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1af6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1af8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1afa:	8d 85       	ldd	r24, Y+13	; 0x0d
    1afc:	9e 85       	ldd	r25, Y+14	; 0x0e
    1afe:	20 e0       	ldi	r18, 0x00	; 0
    1b00:	30 e0       	ldi	r19, 0x00	; 0
    1b02:	4a ef       	ldi	r20, 0xFA	; 250
    1b04:	54 e4       	ldi	r21, 0x44	; 68
    1b06:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1b0a:	dc 01       	movw	r26, r24
    1b0c:	cb 01       	movw	r24, r22
    1b0e:	8f 83       	std	Y+7, r24	; 0x07
    1b10:	98 87       	std	Y+8, r25	; 0x08
    1b12:	a9 87       	std	Y+9, r26	; 0x09
    1b14:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b16:	6f 81       	ldd	r22, Y+7	; 0x07
    1b18:	78 85       	ldd	r23, Y+8	; 0x08
    1b1a:	89 85       	ldd	r24, Y+9	; 0x09
    1b1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b1e:	20 e0       	ldi	r18, 0x00	; 0
    1b20:	30 e0       	ldi	r19, 0x00	; 0
    1b22:	40 e8       	ldi	r20, 0x80	; 128
    1b24:	5f e3       	ldi	r21, 0x3F	; 63
    1b26:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    1b2a:	88 23       	and	r24, r24
    1b2c:	2c f4       	brge	.+10     	; 0x1b38 <LCD_VidInit+0x460>
		__ticks = 1;
    1b2e:	81 e0       	ldi	r24, 0x01	; 1
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	9e 83       	std	Y+6, r25	; 0x06
    1b34:	8d 83       	std	Y+5, r24	; 0x05
    1b36:	3f c0       	rjmp	.+126    	; 0x1bb6 <LCD_VidInit+0x4de>
	else if (__tmp > 65535)
    1b38:	6f 81       	ldd	r22, Y+7	; 0x07
    1b3a:	78 85       	ldd	r23, Y+8	; 0x08
    1b3c:	89 85       	ldd	r24, Y+9	; 0x09
    1b3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b40:	20 e0       	ldi	r18, 0x00	; 0
    1b42:	3f ef       	ldi	r19, 0xFF	; 255
    1b44:	4f e7       	ldi	r20, 0x7F	; 127
    1b46:	57 e4       	ldi	r21, 0x47	; 71
    1b48:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    1b4c:	18 16       	cp	r1, r24
    1b4e:	4c f5       	brge	.+82     	; 0x1ba2 <LCD_VidInit+0x4ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b50:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b52:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b54:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b56:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b58:	20 e0       	ldi	r18, 0x00	; 0
    1b5a:	30 e0       	ldi	r19, 0x00	; 0
    1b5c:	40 e2       	ldi	r20, 0x20	; 32
    1b5e:	51 e4       	ldi	r21, 0x41	; 65
    1b60:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1b64:	dc 01       	movw	r26, r24
    1b66:	cb 01       	movw	r24, r22
    1b68:	bc 01       	movw	r22, r24
    1b6a:	cd 01       	movw	r24, r26
    1b6c:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1b70:	dc 01       	movw	r26, r24
    1b72:	cb 01       	movw	r24, r22
    1b74:	9e 83       	std	Y+6, r25	; 0x06
    1b76:	8d 83       	std	Y+5, r24	; 0x05
    1b78:	0f c0       	rjmp	.+30     	; 0x1b98 <LCD_VidInit+0x4c0>
    1b7a:	88 ec       	ldi	r24, 0xC8	; 200
    1b7c:	90 e0       	ldi	r25, 0x00	; 0
    1b7e:	9c 83       	std	Y+4, r25	; 0x04
    1b80:	8b 83       	std	Y+3, r24	; 0x03
    1b82:	8b 81       	ldd	r24, Y+3	; 0x03
    1b84:	9c 81       	ldd	r25, Y+4	; 0x04
    1b86:	01 97       	sbiw	r24, 0x01	; 1
    1b88:	f1 f7       	brne	.-4      	; 0x1b86 <LCD_VidInit+0x4ae>
    1b8a:	9c 83       	std	Y+4, r25	; 0x04
    1b8c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b8e:	8d 81       	ldd	r24, Y+5	; 0x05
    1b90:	9e 81       	ldd	r25, Y+6	; 0x06
    1b92:	01 97       	sbiw	r24, 0x01	; 1
    1b94:	9e 83       	std	Y+6, r25	; 0x06
    1b96:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b98:	8d 81       	ldd	r24, Y+5	; 0x05
    1b9a:	9e 81       	ldd	r25, Y+6	; 0x06
    1b9c:	00 97       	sbiw	r24, 0x00	; 0
    1b9e:	69 f7       	brne	.-38     	; 0x1b7a <LCD_VidInit+0x4a2>
    1ba0:	14 c0       	rjmp	.+40     	; 0x1bca <LCD_VidInit+0x4f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ba2:	6f 81       	ldd	r22, Y+7	; 0x07
    1ba4:	78 85       	ldd	r23, Y+8	; 0x08
    1ba6:	89 85       	ldd	r24, Y+9	; 0x09
    1ba8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1baa:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1bae:	dc 01       	movw	r26, r24
    1bb0:	cb 01       	movw	r24, r22
    1bb2:	9e 83       	std	Y+6, r25	; 0x06
    1bb4:	8d 83       	std	Y+5, r24	; 0x05
    1bb6:	8d 81       	ldd	r24, Y+5	; 0x05
    1bb8:	9e 81       	ldd	r25, Y+6	; 0x06
    1bba:	9a 83       	std	Y+2, r25	; 0x02
    1bbc:	89 83       	std	Y+1, r24	; 0x01
    1bbe:	89 81       	ldd	r24, Y+1	; 0x01
    1bc0:	9a 81       	ldd	r25, Y+2	; 0x02
    1bc2:	01 97       	sbiw	r24, 0x01	; 1
    1bc4:	f1 f7       	brne	.-4      	; 0x1bc2 <LCD_VidInit+0x4ea>
    1bc6:	9a 83       	std	Y+2, r25	; 0x02
    1bc8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	LCD_VidSendCommand(0x01);	/* Clear display screen */
	_delay_ms(2);

	#endif
}
    1bca:	ca 5b       	subi	r28, 0xBA	; 186
    1bcc:	df 4f       	sbci	r29, 0xFF	; 255
    1bce:	0f b6       	in	r0, 0x3f	; 63
    1bd0:	f8 94       	cli
    1bd2:	de bf       	out	0x3e, r29	; 62
    1bd4:	0f be       	out	0x3f, r0	; 63
    1bd6:	cd bf       	out	0x3d, r28	; 61
    1bd8:	cf 91       	pop	r28
    1bda:	df 91       	pop	r29
    1bdc:	1f 91       	pop	r17
    1bde:	0f 91       	pop	r16
    1be0:	08 95       	ret

00001be2 <LCD_VidSendData>:

void LCD_VidSendData(u8 copy_u8data)
{
    1be2:	df 93       	push	r29
    1be4:	cf 93       	push	r28
    1be6:	cd b7       	in	r28, 0x3d	; 61
    1be8:	de b7       	in	r29, 0x3e	; 62
    1bea:	e9 97       	sbiw	r28, 0x39	; 57
    1bec:	0f b6       	in	r0, 0x3f	; 63
    1bee:	f8 94       	cli
    1bf0:	de bf       	out	0x3e, r29	; 62
    1bf2:	0f be       	out	0x3f, r0	; 63
    1bf4:	cd bf       	out	0x3d, r28	; 61
    1bf6:	89 af       	std	Y+57, r24	; 0x39
	#if LCD_Mode==EIGHT_BIT
		DIO_VidSetPinValue(Lcopy_u8PORT,  RS_copy_u8Pin,1);
    1bf8:	83 e0       	ldi	r24, 0x03	; 3
    1bfa:	60 e0       	ldi	r22, 0x00	; 0
    1bfc:	41 e0       	ldi	r20, 0x01	; 1
    1bfe:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
		DIO_VidSetPinValue(Lcopy_u8PORT,  R_w_copy_u8Pin,0);
    1c02:	83 e0       	ldi	r24, 0x03	; 3
    1c04:	61 e0       	ldi	r22, 0x01	; 1
    1c06:	40 e0       	ldi	r20, 0x00	; 0
    1c08:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
    1c0c:	80 e0       	ldi	r24, 0x00	; 0
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	a0 e8       	ldi	r26, 0x80	; 128
    1c12:	bf e3       	ldi	r27, 0x3F	; 63
    1c14:	8d ab       	std	Y+53, r24	; 0x35
    1c16:	9e ab       	std	Y+54, r25	; 0x36
    1c18:	af ab       	std	Y+55, r26	; 0x37
    1c1a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c1c:	6d a9       	ldd	r22, Y+53	; 0x35
    1c1e:	7e a9       	ldd	r23, Y+54	; 0x36
    1c20:	8f a9       	ldd	r24, Y+55	; 0x37
    1c22:	98 ad       	ldd	r25, Y+56	; 0x38
    1c24:	20 e0       	ldi	r18, 0x00	; 0
    1c26:	30 e0       	ldi	r19, 0x00	; 0
    1c28:	4a ef       	ldi	r20, 0xFA	; 250
    1c2a:	54 e4       	ldi	r21, 0x44	; 68
    1c2c:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1c30:	dc 01       	movw	r26, r24
    1c32:	cb 01       	movw	r24, r22
    1c34:	89 ab       	std	Y+49, r24	; 0x31
    1c36:	9a ab       	std	Y+50, r25	; 0x32
    1c38:	ab ab       	std	Y+51, r26	; 0x33
    1c3a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1c3c:	69 a9       	ldd	r22, Y+49	; 0x31
    1c3e:	7a a9       	ldd	r23, Y+50	; 0x32
    1c40:	8b a9       	ldd	r24, Y+51	; 0x33
    1c42:	9c a9       	ldd	r25, Y+52	; 0x34
    1c44:	20 e0       	ldi	r18, 0x00	; 0
    1c46:	30 e0       	ldi	r19, 0x00	; 0
    1c48:	40 e8       	ldi	r20, 0x80	; 128
    1c4a:	5f e3       	ldi	r21, 0x3F	; 63
    1c4c:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    1c50:	88 23       	and	r24, r24
    1c52:	2c f4       	brge	.+10     	; 0x1c5e <LCD_VidSendData+0x7c>
		__ticks = 1;
    1c54:	81 e0       	ldi	r24, 0x01	; 1
    1c56:	90 e0       	ldi	r25, 0x00	; 0
    1c58:	98 ab       	std	Y+48, r25	; 0x30
    1c5a:	8f a7       	std	Y+47, r24	; 0x2f
    1c5c:	3f c0       	rjmp	.+126    	; 0x1cdc <LCD_VidSendData+0xfa>
	else if (__tmp > 65535)
    1c5e:	69 a9       	ldd	r22, Y+49	; 0x31
    1c60:	7a a9       	ldd	r23, Y+50	; 0x32
    1c62:	8b a9       	ldd	r24, Y+51	; 0x33
    1c64:	9c a9       	ldd	r25, Y+52	; 0x34
    1c66:	20 e0       	ldi	r18, 0x00	; 0
    1c68:	3f ef       	ldi	r19, 0xFF	; 255
    1c6a:	4f e7       	ldi	r20, 0x7F	; 127
    1c6c:	57 e4       	ldi	r21, 0x47	; 71
    1c6e:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    1c72:	18 16       	cp	r1, r24
    1c74:	4c f5       	brge	.+82     	; 0x1cc8 <LCD_VidSendData+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c76:	6d a9       	ldd	r22, Y+53	; 0x35
    1c78:	7e a9       	ldd	r23, Y+54	; 0x36
    1c7a:	8f a9       	ldd	r24, Y+55	; 0x37
    1c7c:	98 ad       	ldd	r25, Y+56	; 0x38
    1c7e:	20 e0       	ldi	r18, 0x00	; 0
    1c80:	30 e0       	ldi	r19, 0x00	; 0
    1c82:	40 e2       	ldi	r20, 0x20	; 32
    1c84:	51 e4       	ldi	r21, 0x41	; 65
    1c86:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1c8a:	dc 01       	movw	r26, r24
    1c8c:	cb 01       	movw	r24, r22
    1c8e:	bc 01       	movw	r22, r24
    1c90:	cd 01       	movw	r24, r26
    1c92:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1c96:	dc 01       	movw	r26, r24
    1c98:	cb 01       	movw	r24, r22
    1c9a:	98 ab       	std	Y+48, r25	; 0x30
    1c9c:	8f a7       	std	Y+47, r24	; 0x2f
    1c9e:	0f c0       	rjmp	.+30     	; 0x1cbe <LCD_VidSendData+0xdc>
    1ca0:	88 ec       	ldi	r24, 0xC8	; 200
    1ca2:	90 e0       	ldi	r25, 0x00	; 0
    1ca4:	9e a7       	std	Y+46, r25	; 0x2e
    1ca6:	8d a7       	std	Y+45, r24	; 0x2d
    1ca8:	8d a5       	ldd	r24, Y+45	; 0x2d
    1caa:	9e a5       	ldd	r25, Y+46	; 0x2e
    1cac:	01 97       	sbiw	r24, 0x01	; 1
    1cae:	f1 f7       	brne	.-4      	; 0x1cac <LCD_VidSendData+0xca>
    1cb0:	9e a7       	std	Y+46, r25	; 0x2e
    1cb2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cb4:	8f a5       	ldd	r24, Y+47	; 0x2f
    1cb6:	98 a9       	ldd	r25, Y+48	; 0x30
    1cb8:	01 97       	sbiw	r24, 0x01	; 1
    1cba:	98 ab       	std	Y+48, r25	; 0x30
    1cbc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cbe:	8f a5       	ldd	r24, Y+47	; 0x2f
    1cc0:	98 a9       	ldd	r25, Y+48	; 0x30
    1cc2:	00 97       	sbiw	r24, 0x00	; 0
    1cc4:	69 f7       	brne	.-38     	; 0x1ca0 <LCD_VidSendData+0xbe>
    1cc6:	14 c0       	rjmp	.+40     	; 0x1cf0 <LCD_VidSendData+0x10e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cc8:	69 a9       	ldd	r22, Y+49	; 0x31
    1cca:	7a a9       	ldd	r23, Y+50	; 0x32
    1ccc:	8b a9       	ldd	r24, Y+51	; 0x33
    1cce:	9c a9       	ldd	r25, Y+52	; 0x34
    1cd0:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1cd4:	dc 01       	movw	r26, r24
    1cd6:	cb 01       	movw	r24, r22
    1cd8:	98 ab       	std	Y+48, r25	; 0x30
    1cda:	8f a7       	std	Y+47, r24	; 0x2f
    1cdc:	8f a5       	ldd	r24, Y+47	; 0x2f
    1cde:	98 a9       	ldd	r25, Y+48	; 0x30
    1ce0:	9c a7       	std	Y+44, r25	; 0x2c
    1ce2:	8b a7       	std	Y+43, r24	; 0x2b
    1ce4:	8b a5       	ldd	r24, Y+43	; 0x2b
    1ce6:	9c a5       	ldd	r25, Y+44	; 0x2c
    1ce8:	01 97       	sbiw	r24, 0x01	; 1
    1cea:	f1 f7       	brne	.-4      	; 0x1ce8 <LCD_VidSendData+0x106>
    1cec:	9c a7       	std	Y+44, r25	; 0x2c
    1cee:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);
		DIO_VidSetPortValue(LDcopy_u8PORT,copy_u8data);
    1cf0:	82 e0       	ldi	r24, 0x02	; 2
    1cf2:	69 ad       	ldd	r22, Y+57	; 0x39
    1cf4:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <DIO_VidSetPortValue>
    1cf8:	80 e0       	ldi	r24, 0x00	; 0
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	a0 e8       	ldi	r26, 0x80	; 128
    1cfe:	bf e3       	ldi	r27, 0x3F	; 63
    1d00:	8f a3       	std	Y+39, r24	; 0x27
    1d02:	98 a7       	std	Y+40, r25	; 0x28
    1d04:	a9 a7       	std	Y+41, r26	; 0x29
    1d06:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d08:	6f a1       	ldd	r22, Y+39	; 0x27
    1d0a:	78 a5       	ldd	r23, Y+40	; 0x28
    1d0c:	89 a5       	ldd	r24, Y+41	; 0x29
    1d0e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d10:	20 e0       	ldi	r18, 0x00	; 0
    1d12:	30 e0       	ldi	r19, 0x00	; 0
    1d14:	4a ef       	ldi	r20, 0xFA	; 250
    1d16:	54 e4       	ldi	r21, 0x44	; 68
    1d18:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1d1c:	dc 01       	movw	r26, r24
    1d1e:	cb 01       	movw	r24, r22
    1d20:	8b a3       	std	Y+35, r24	; 0x23
    1d22:	9c a3       	std	Y+36, r25	; 0x24
    1d24:	ad a3       	std	Y+37, r26	; 0x25
    1d26:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1d28:	6b a1       	ldd	r22, Y+35	; 0x23
    1d2a:	7c a1       	ldd	r23, Y+36	; 0x24
    1d2c:	8d a1       	ldd	r24, Y+37	; 0x25
    1d2e:	9e a1       	ldd	r25, Y+38	; 0x26
    1d30:	20 e0       	ldi	r18, 0x00	; 0
    1d32:	30 e0       	ldi	r19, 0x00	; 0
    1d34:	40 e8       	ldi	r20, 0x80	; 128
    1d36:	5f e3       	ldi	r21, 0x3F	; 63
    1d38:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    1d3c:	88 23       	and	r24, r24
    1d3e:	2c f4       	brge	.+10     	; 0x1d4a <LCD_VidSendData+0x168>
		__ticks = 1;
    1d40:	81 e0       	ldi	r24, 0x01	; 1
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	9a a3       	std	Y+34, r25	; 0x22
    1d46:	89 a3       	std	Y+33, r24	; 0x21
    1d48:	3f c0       	rjmp	.+126    	; 0x1dc8 <LCD_VidSendData+0x1e6>
	else if (__tmp > 65535)
    1d4a:	6b a1       	ldd	r22, Y+35	; 0x23
    1d4c:	7c a1       	ldd	r23, Y+36	; 0x24
    1d4e:	8d a1       	ldd	r24, Y+37	; 0x25
    1d50:	9e a1       	ldd	r25, Y+38	; 0x26
    1d52:	20 e0       	ldi	r18, 0x00	; 0
    1d54:	3f ef       	ldi	r19, 0xFF	; 255
    1d56:	4f e7       	ldi	r20, 0x7F	; 127
    1d58:	57 e4       	ldi	r21, 0x47	; 71
    1d5a:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    1d5e:	18 16       	cp	r1, r24
    1d60:	4c f5       	brge	.+82     	; 0x1db4 <LCD_VidSendData+0x1d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d62:	6f a1       	ldd	r22, Y+39	; 0x27
    1d64:	78 a5       	ldd	r23, Y+40	; 0x28
    1d66:	89 a5       	ldd	r24, Y+41	; 0x29
    1d68:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d6a:	20 e0       	ldi	r18, 0x00	; 0
    1d6c:	30 e0       	ldi	r19, 0x00	; 0
    1d6e:	40 e2       	ldi	r20, 0x20	; 32
    1d70:	51 e4       	ldi	r21, 0x41	; 65
    1d72:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1d76:	dc 01       	movw	r26, r24
    1d78:	cb 01       	movw	r24, r22
    1d7a:	bc 01       	movw	r22, r24
    1d7c:	cd 01       	movw	r24, r26
    1d7e:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1d82:	dc 01       	movw	r26, r24
    1d84:	cb 01       	movw	r24, r22
    1d86:	9a a3       	std	Y+34, r25	; 0x22
    1d88:	89 a3       	std	Y+33, r24	; 0x21
    1d8a:	0f c0       	rjmp	.+30     	; 0x1daa <LCD_VidSendData+0x1c8>
    1d8c:	88 ec       	ldi	r24, 0xC8	; 200
    1d8e:	90 e0       	ldi	r25, 0x00	; 0
    1d90:	98 a3       	std	Y+32, r25	; 0x20
    1d92:	8f 8f       	std	Y+31, r24	; 0x1f
    1d94:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d96:	98 a1       	ldd	r25, Y+32	; 0x20
    1d98:	01 97       	sbiw	r24, 0x01	; 1
    1d9a:	f1 f7       	brne	.-4      	; 0x1d98 <LCD_VidSendData+0x1b6>
    1d9c:	98 a3       	std	Y+32, r25	; 0x20
    1d9e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1da0:	89 a1       	ldd	r24, Y+33	; 0x21
    1da2:	9a a1       	ldd	r25, Y+34	; 0x22
    1da4:	01 97       	sbiw	r24, 0x01	; 1
    1da6:	9a a3       	std	Y+34, r25	; 0x22
    1da8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1daa:	89 a1       	ldd	r24, Y+33	; 0x21
    1dac:	9a a1       	ldd	r25, Y+34	; 0x22
    1dae:	00 97       	sbiw	r24, 0x00	; 0
    1db0:	69 f7       	brne	.-38     	; 0x1d8c <LCD_VidSendData+0x1aa>
    1db2:	14 c0       	rjmp	.+40     	; 0x1ddc <LCD_VidSendData+0x1fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1db4:	6b a1       	ldd	r22, Y+35	; 0x23
    1db6:	7c a1       	ldd	r23, Y+36	; 0x24
    1db8:	8d a1       	ldd	r24, Y+37	; 0x25
    1dba:	9e a1       	ldd	r25, Y+38	; 0x26
    1dbc:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1dc0:	dc 01       	movw	r26, r24
    1dc2:	cb 01       	movw	r24, r22
    1dc4:	9a a3       	std	Y+34, r25	; 0x22
    1dc6:	89 a3       	std	Y+33, r24	; 0x21
    1dc8:	89 a1       	ldd	r24, Y+33	; 0x21
    1dca:	9a a1       	ldd	r25, Y+34	; 0x22
    1dcc:	9e 8f       	std	Y+30, r25	; 0x1e
    1dce:	8d 8f       	std	Y+29, r24	; 0x1d
    1dd0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1dd2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1dd4:	01 97       	sbiw	r24, 0x01	; 1
    1dd6:	f1 f7       	brne	.-4      	; 0x1dd4 <LCD_VidSendData+0x1f2>
    1dd8:	9e 8f       	std	Y+30, r25	; 0x1e
    1dda:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1);
		DIO_VidSetPinValue(Lcopy_u8PORT,  E_copy_u8Pin,1);  // E=1; Upload Command
    1ddc:	83 e0       	ldi	r24, 0x03	; 3
    1dde:	62 e0       	ldi	r22, 0x02	; 2
    1de0:	41 e0       	ldi	r20, 0x01	; 1
    1de2:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
    1de6:	80 e0       	ldi	r24, 0x00	; 0
    1de8:	90 e0       	ldi	r25, 0x00	; 0
    1dea:	a0 e8       	ldi	r26, 0x80	; 128
    1dec:	bf e3       	ldi	r27, 0x3F	; 63
    1dee:	89 8f       	std	Y+25, r24	; 0x19
    1df0:	9a 8f       	std	Y+26, r25	; 0x1a
    1df2:	ab 8f       	std	Y+27, r26	; 0x1b
    1df4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1df6:	69 8d       	ldd	r22, Y+25	; 0x19
    1df8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1dfa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1dfc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1dfe:	20 e0       	ldi	r18, 0x00	; 0
    1e00:	30 e0       	ldi	r19, 0x00	; 0
    1e02:	4a ef       	ldi	r20, 0xFA	; 250
    1e04:	54 e4       	ldi	r21, 0x44	; 68
    1e06:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1e0a:	dc 01       	movw	r26, r24
    1e0c:	cb 01       	movw	r24, r22
    1e0e:	8d 8b       	std	Y+21, r24	; 0x15
    1e10:	9e 8b       	std	Y+22, r25	; 0x16
    1e12:	af 8b       	std	Y+23, r26	; 0x17
    1e14:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1e16:	6d 89       	ldd	r22, Y+21	; 0x15
    1e18:	7e 89       	ldd	r23, Y+22	; 0x16
    1e1a:	8f 89       	ldd	r24, Y+23	; 0x17
    1e1c:	98 8d       	ldd	r25, Y+24	; 0x18
    1e1e:	20 e0       	ldi	r18, 0x00	; 0
    1e20:	30 e0       	ldi	r19, 0x00	; 0
    1e22:	40 e8       	ldi	r20, 0x80	; 128
    1e24:	5f e3       	ldi	r21, 0x3F	; 63
    1e26:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    1e2a:	88 23       	and	r24, r24
    1e2c:	2c f4       	brge	.+10     	; 0x1e38 <LCD_VidSendData+0x256>
		__ticks = 1;
    1e2e:	81 e0       	ldi	r24, 0x01	; 1
    1e30:	90 e0       	ldi	r25, 0x00	; 0
    1e32:	9c 8b       	std	Y+20, r25	; 0x14
    1e34:	8b 8b       	std	Y+19, r24	; 0x13
    1e36:	3f c0       	rjmp	.+126    	; 0x1eb6 <LCD_VidSendData+0x2d4>
	else if (__tmp > 65535)
    1e38:	6d 89       	ldd	r22, Y+21	; 0x15
    1e3a:	7e 89       	ldd	r23, Y+22	; 0x16
    1e3c:	8f 89       	ldd	r24, Y+23	; 0x17
    1e3e:	98 8d       	ldd	r25, Y+24	; 0x18
    1e40:	20 e0       	ldi	r18, 0x00	; 0
    1e42:	3f ef       	ldi	r19, 0xFF	; 255
    1e44:	4f e7       	ldi	r20, 0x7F	; 127
    1e46:	57 e4       	ldi	r21, 0x47	; 71
    1e48:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    1e4c:	18 16       	cp	r1, r24
    1e4e:	4c f5       	brge	.+82     	; 0x1ea2 <LCD_VidSendData+0x2c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e50:	69 8d       	ldd	r22, Y+25	; 0x19
    1e52:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e54:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e56:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e58:	20 e0       	ldi	r18, 0x00	; 0
    1e5a:	30 e0       	ldi	r19, 0x00	; 0
    1e5c:	40 e2       	ldi	r20, 0x20	; 32
    1e5e:	51 e4       	ldi	r21, 0x41	; 65
    1e60:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1e64:	dc 01       	movw	r26, r24
    1e66:	cb 01       	movw	r24, r22
    1e68:	bc 01       	movw	r22, r24
    1e6a:	cd 01       	movw	r24, r26
    1e6c:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1e70:	dc 01       	movw	r26, r24
    1e72:	cb 01       	movw	r24, r22
    1e74:	9c 8b       	std	Y+20, r25	; 0x14
    1e76:	8b 8b       	std	Y+19, r24	; 0x13
    1e78:	0f c0       	rjmp	.+30     	; 0x1e98 <LCD_VidSendData+0x2b6>
    1e7a:	88 ec       	ldi	r24, 0xC8	; 200
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	9a 8b       	std	Y+18, r25	; 0x12
    1e80:	89 8b       	std	Y+17, r24	; 0x11
    1e82:	89 89       	ldd	r24, Y+17	; 0x11
    1e84:	9a 89       	ldd	r25, Y+18	; 0x12
    1e86:	01 97       	sbiw	r24, 0x01	; 1
    1e88:	f1 f7       	brne	.-4      	; 0x1e86 <LCD_VidSendData+0x2a4>
    1e8a:	9a 8b       	std	Y+18, r25	; 0x12
    1e8c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e8e:	8b 89       	ldd	r24, Y+19	; 0x13
    1e90:	9c 89       	ldd	r25, Y+20	; 0x14
    1e92:	01 97       	sbiw	r24, 0x01	; 1
    1e94:	9c 8b       	std	Y+20, r25	; 0x14
    1e96:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e98:	8b 89       	ldd	r24, Y+19	; 0x13
    1e9a:	9c 89       	ldd	r25, Y+20	; 0x14
    1e9c:	00 97       	sbiw	r24, 0x00	; 0
    1e9e:	69 f7       	brne	.-38     	; 0x1e7a <LCD_VidSendData+0x298>
    1ea0:	14 c0       	rjmp	.+40     	; 0x1eca <LCD_VidSendData+0x2e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ea2:	6d 89       	ldd	r22, Y+21	; 0x15
    1ea4:	7e 89       	ldd	r23, Y+22	; 0x16
    1ea6:	8f 89       	ldd	r24, Y+23	; 0x17
    1ea8:	98 8d       	ldd	r25, Y+24	; 0x18
    1eaa:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1eae:	dc 01       	movw	r26, r24
    1eb0:	cb 01       	movw	r24, r22
    1eb2:	9c 8b       	std	Y+20, r25	; 0x14
    1eb4:	8b 8b       	std	Y+19, r24	; 0x13
    1eb6:	8b 89       	ldd	r24, Y+19	; 0x13
    1eb8:	9c 89       	ldd	r25, Y+20	; 0x14
    1eba:	98 8b       	std	Y+16, r25	; 0x10
    1ebc:	8f 87       	std	Y+15, r24	; 0x0f
    1ebe:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ec0:	98 89       	ldd	r25, Y+16	; 0x10
    1ec2:	01 97       	sbiw	r24, 0x01	; 1
    1ec4:	f1 f7       	brne	.-4      	; 0x1ec2 <LCD_VidSendData+0x2e0>
    1ec6:	98 8b       	std	Y+16, r25	; 0x10
    1ec8:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);
		DIO_VidSetPinValue(Lcopy_u8PORT,  E_copy_u8Pin,0);   // E=0 Display Command
    1eca:	83 e0       	ldi	r24, 0x03	; 3
    1ecc:	62 e0       	ldi	r22, 0x02	; 2
    1ece:	40 e0       	ldi	r20, 0x00	; 0
    1ed0:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
    1ed4:	80 e0       	ldi	r24, 0x00	; 0
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	a0 e8       	ldi	r26, 0x80	; 128
    1eda:	bf e3       	ldi	r27, 0x3F	; 63
    1edc:	8b 87       	std	Y+11, r24	; 0x0b
    1ede:	9c 87       	std	Y+12, r25	; 0x0c
    1ee0:	ad 87       	std	Y+13, r26	; 0x0d
    1ee2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ee4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ee6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ee8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1eea:	9e 85       	ldd	r25, Y+14	; 0x0e
    1eec:	20 e0       	ldi	r18, 0x00	; 0
    1eee:	30 e0       	ldi	r19, 0x00	; 0
    1ef0:	4a ef       	ldi	r20, 0xFA	; 250
    1ef2:	54 e4       	ldi	r21, 0x44	; 68
    1ef4:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1ef8:	dc 01       	movw	r26, r24
    1efa:	cb 01       	movw	r24, r22
    1efc:	8f 83       	std	Y+7, r24	; 0x07
    1efe:	98 87       	std	Y+8, r25	; 0x08
    1f00:	a9 87       	std	Y+9, r26	; 0x09
    1f02:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1f04:	6f 81       	ldd	r22, Y+7	; 0x07
    1f06:	78 85       	ldd	r23, Y+8	; 0x08
    1f08:	89 85       	ldd	r24, Y+9	; 0x09
    1f0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f0c:	20 e0       	ldi	r18, 0x00	; 0
    1f0e:	30 e0       	ldi	r19, 0x00	; 0
    1f10:	40 e8       	ldi	r20, 0x80	; 128
    1f12:	5f e3       	ldi	r21, 0x3F	; 63
    1f14:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    1f18:	88 23       	and	r24, r24
    1f1a:	2c f4       	brge	.+10     	; 0x1f26 <LCD_VidSendData+0x344>
		__ticks = 1;
    1f1c:	81 e0       	ldi	r24, 0x01	; 1
    1f1e:	90 e0       	ldi	r25, 0x00	; 0
    1f20:	9e 83       	std	Y+6, r25	; 0x06
    1f22:	8d 83       	std	Y+5, r24	; 0x05
    1f24:	3f c0       	rjmp	.+126    	; 0x1fa4 <LCD_VidSendData+0x3c2>
	else if (__tmp > 65535)
    1f26:	6f 81       	ldd	r22, Y+7	; 0x07
    1f28:	78 85       	ldd	r23, Y+8	; 0x08
    1f2a:	89 85       	ldd	r24, Y+9	; 0x09
    1f2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f2e:	20 e0       	ldi	r18, 0x00	; 0
    1f30:	3f ef       	ldi	r19, 0xFF	; 255
    1f32:	4f e7       	ldi	r20, 0x7F	; 127
    1f34:	57 e4       	ldi	r21, 0x47	; 71
    1f36:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    1f3a:	18 16       	cp	r1, r24
    1f3c:	4c f5       	brge	.+82     	; 0x1f90 <LCD_VidSendData+0x3ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f3e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f40:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f42:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f44:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f46:	20 e0       	ldi	r18, 0x00	; 0
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	40 e2       	ldi	r20, 0x20	; 32
    1f4c:	51 e4       	ldi	r21, 0x41	; 65
    1f4e:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1f52:	dc 01       	movw	r26, r24
    1f54:	cb 01       	movw	r24, r22
    1f56:	bc 01       	movw	r22, r24
    1f58:	cd 01       	movw	r24, r26
    1f5a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1f5e:	dc 01       	movw	r26, r24
    1f60:	cb 01       	movw	r24, r22
    1f62:	9e 83       	std	Y+6, r25	; 0x06
    1f64:	8d 83       	std	Y+5, r24	; 0x05
    1f66:	0f c0       	rjmp	.+30     	; 0x1f86 <LCD_VidSendData+0x3a4>
    1f68:	88 ec       	ldi	r24, 0xC8	; 200
    1f6a:	90 e0       	ldi	r25, 0x00	; 0
    1f6c:	9c 83       	std	Y+4, r25	; 0x04
    1f6e:	8b 83       	std	Y+3, r24	; 0x03
    1f70:	8b 81       	ldd	r24, Y+3	; 0x03
    1f72:	9c 81       	ldd	r25, Y+4	; 0x04
    1f74:	01 97       	sbiw	r24, 0x01	; 1
    1f76:	f1 f7       	brne	.-4      	; 0x1f74 <LCD_VidSendData+0x392>
    1f78:	9c 83       	std	Y+4, r25	; 0x04
    1f7a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f7c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f7e:	9e 81       	ldd	r25, Y+6	; 0x06
    1f80:	01 97       	sbiw	r24, 0x01	; 1
    1f82:	9e 83       	std	Y+6, r25	; 0x06
    1f84:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f86:	8d 81       	ldd	r24, Y+5	; 0x05
    1f88:	9e 81       	ldd	r25, Y+6	; 0x06
    1f8a:	00 97       	sbiw	r24, 0x00	; 0
    1f8c:	69 f7       	brne	.-38     	; 0x1f68 <LCD_VidSendData+0x386>
    1f8e:	14 c0       	rjmp	.+40     	; 0x1fb8 <LCD_VidSendData+0x3d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f90:	6f 81       	ldd	r22, Y+7	; 0x07
    1f92:	78 85       	ldd	r23, Y+8	; 0x08
    1f94:	89 85       	ldd	r24, Y+9	; 0x09
    1f96:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f98:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1f9c:	dc 01       	movw	r26, r24
    1f9e:	cb 01       	movw	r24, r22
    1fa0:	9e 83       	std	Y+6, r25	; 0x06
    1fa2:	8d 83       	std	Y+5, r24	; 0x05
    1fa4:	8d 81       	ldd	r24, Y+5	; 0x05
    1fa6:	9e 81       	ldd	r25, Y+6	; 0x06
    1fa8:	9a 83       	std	Y+2, r25	; 0x02
    1faa:	89 83       	std	Y+1, r24	; 0x01
    1fac:	89 81       	ldd	r24, Y+1	; 0x01
    1fae:	9a 81       	ldd	r25, Y+2	; 0x02
    1fb0:	01 97       	sbiw	r24, 0x01	; 1
    1fb2:	f1 f7       	brne	.-4      	; 0x1fb0 <LCD_VidSendData+0x3ce>
    1fb4:	9a 83       	std	Y+2, r25	; 0x02
    1fb6:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);
		DIO_VidSetPinValue(Lcopy_u8PORT,  E_copy_u8Pin,0);   // E=0 Display Command
		_delay_ms(2);

	#endif
}
    1fb8:	e9 96       	adiw	r28, 0x39	; 57
    1fba:	0f b6       	in	r0, 0x3f	; 63
    1fbc:	f8 94       	cli
    1fbe:	de bf       	out	0x3e, r29	; 62
    1fc0:	0f be       	out	0x3f, r0	; 63
    1fc2:	cd bf       	out	0x3d, r28	; 61
    1fc4:	cf 91       	pop	r28
    1fc6:	df 91       	pop	r29
    1fc8:	08 95       	ret

00001fca <LCD_VidSendCommand>:

void LCD_VidSendCommand(u8 copy_u8command)
{
    1fca:	df 93       	push	r29
    1fcc:	cf 93       	push	r28
    1fce:	cd b7       	in	r28, 0x3d	; 61
    1fd0:	de b7       	in	r29, 0x3e	; 62
    1fd2:	6d 97       	sbiw	r28, 0x1d	; 29
    1fd4:	0f b6       	in	r0, 0x3f	; 63
    1fd6:	f8 94       	cli
    1fd8:	de bf       	out	0x3e, r29	; 62
    1fda:	0f be       	out	0x3f, r0	; 63
    1fdc:	cd bf       	out	0x3d, r28	; 61
    1fde:	8d 8f       	std	Y+29, r24	; 0x1d
	#if LCD_Mode==EIGHT_BIT
	DIO_VidSetPinValue(Lcopy_u8PORT,  RS_copy_u8Pin,0);
    1fe0:	83 e0       	ldi	r24, 0x03	; 3
    1fe2:	60 e0       	ldi	r22, 0x00	; 0
    1fe4:	40 e0       	ldi	r20, 0x00	; 0
    1fe6:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(Lcopy_u8PORT,  R_w_copy_u8Pin,0);
    1fea:	83 e0       	ldi	r24, 0x03	; 3
    1fec:	61 e0       	ldi	r22, 0x01	; 1
    1fee:	40 e0       	ldi	r20, 0x00	; 0
    1ff0:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
	
	
	DIO_VidSetPortValue(LDcopy_u8PORT,copy_u8command);
    1ff4:	82 e0       	ldi	r24, 0x02	; 2
    1ff6:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1ff8:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <DIO_VidSetPortValue>
	DIO_VidSetPinValue(Lcopy_u8PORT,  E_copy_u8Pin,1);  // E=1; Upload Command
    1ffc:	83 e0       	ldi	r24, 0x03	; 3
    1ffe:	62 e0       	ldi	r22, 0x02	; 2
    2000:	41 e0       	ldi	r20, 0x01	; 1
    2002:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
    2006:	80 e0       	ldi	r24, 0x00	; 0
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	a0 e8       	ldi	r26, 0x80	; 128
    200c:	bf e3       	ldi	r27, 0x3F	; 63
    200e:	89 8f       	std	Y+25, r24	; 0x19
    2010:	9a 8f       	std	Y+26, r25	; 0x1a
    2012:	ab 8f       	std	Y+27, r26	; 0x1b
    2014:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2016:	69 8d       	ldd	r22, Y+25	; 0x19
    2018:	7a 8d       	ldd	r23, Y+26	; 0x1a
    201a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    201c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    201e:	20 e0       	ldi	r18, 0x00	; 0
    2020:	30 e0       	ldi	r19, 0x00	; 0
    2022:	4a ef       	ldi	r20, 0xFA	; 250
    2024:	54 e4       	ldi	r21, 0x44	; 68
    2026:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    202a:	dc 01       	movw	r26, r24
    202c:	cb 01       	movw	r24, r22
    202e:	8d 8b       	std	Y+21, r24	; 0x15
    2030:	9e 8b       	std	Y+22, r25	; 0x16
    2032:	af 8b       	std	Y+23, r26	; 0x17
    2034:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2036:	6d 89       	ldd	r22, Y+21	; 0x15
    2038:	7e 89       	ldd	r23, Y+22	; 0x16
    203a:	8f 89       	ldd	r24, Y+23	; 0x17
    203c:	98 8d       	ldd	r25, Y+24	; 0x18
    203e:	20 e0       	ldi	r18, 0x00	; 0
    2040:	30 e0       	ldi	r19, 0x00	; 0
    2042:	40 e8       	ldi	r20, 0x80	; 128
    2044:	5f e3       	ldi	r21, 0x3F	; 63
    2046:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    204a:	88 23       	and	r24, r24
    204c:	2c f4       	brge	.+10     	; 0x2058 <LCD_VidSendCommand+0x8e>
		__ticks = 1;
    204e:	81 e0       	ldi	r24, 0x01	; 1
    2050:	90 e0       	ldi	r25, 0x00	; 0
    2052:	9c 8b       	std	Y+20, r25	; 0x14
    2054:	8b 8b       	std	Y+19, r24	; 0x13
    2056:	3f c0       	rjmp	.+126    	; 0x20d6 <LCD_VidSendCommand+0x10c>
	else if (__tmp > 65535)
    2058:	6d 89       	ldd	r22, Y+21	; 0x15
    205a:	7e 89       	ldd	r23, Y+22	; 0x16
    205c:	8f 89       	ldd	r24, Y+23	; 0x17
    205e:	98 8d       	ldd	r25, Y+24	; 0x18
    2060:	20 e0       	ldi	r18, 0x00	; 0
    2062:	3f ef       	ldi	r19, 0xFF	; 255
    2064:	4f e7       	ldi	r20, 0x7F	; 127
    2066:	57 e4       	ldi	r21, 0x47	; 71
    2068:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    206c:	18 16       	cp	r1, r24
    206e:	4c f5       	brge	.+82     	; 0x20c2 <LCD_VidSendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2070:	69 8d       	ldd	r22, Y+25	; 0x19
    2072:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2074:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2076:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2078:	20 e0       	ldi	r18, 0x00	; 0
    207a:	30 e0       	ldi	r19, 0x00	; 0
    207c:	40 e2       	ldi	r20, 0x20	; 32
    207e:	51 e4       	ldi	r21, 0x41	; 65
    2080:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    2084:	dc 01       	movw	r26, r24
    2086:	cb 01       	movw	r24, r22
    2088:	bc 01       	movw	r22, r24
    208a:	cd 01       	movw	r24, r26
    208c:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2090:	dc 01       	movw	r26, r24
    2092:	cb 01       	movw	r24, r22
    2094:	9c 8b       	std	Y+20, r25	; 0x14
    2096:	8b 8b       	std	Y+19, r24	; 0x13
    2098:	0f c0       	rjmp	.+30     	; 0x20b8 <LCD_VidSendCommand+0xee>
    209a:	88 ec       	ldi	r24, 0xC8	; 200
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	9a 8b       	std	Y+18, r25	; 0x12
    20a0:	89 8b       	std	Y+17, r24	; 0x11
    20a2:	89 89       	ldd	r24, Y+17	; 0x11
    20a4:	9a 89       	ldd	r25, Y+18	; 0x12
    20a6:	01 97       	sbiw	r24, 0x01	; 1
    20a8:	f1 f7       	brne	.-4      	; 0x20a6 <LCD_VidSendCommand+0xdc>
    20aa:	9a 8b       	std	Y+18, r25	; 0x12
    20ac:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20ae:	8b 89       	ldd	r24, Y+19	; 0x13
    20b0:	9c 89       	ldd	r25, Y+20	; 0x14
    20b2:	01 97       	sbiw	r24, 0x01	; 1
    20b4:	9c 8b       	std	Y+20, r25	; 0x14
    20b6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20b8:	8b 89       	ldd	r24, Y+19	; 0x13
    20ba:	9c 89       	ldd	r25, Y+20	; 0x14
    20bc:	00 97       	sbiw	r24, 0x00	; 0
    20be:	69 f7       	brne	.-38     	; 0x209a <LCD_VidSendCommand+0xd0>
    20c0:	14 c0       	rjmp	.+40     	; 0x20ea <LCD_VidSendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20c2:	6d 89       	ldd	r22, Y+21	; 0x15
    20c4:	7e 89       	ldd	r23, Y+22	; 0x16
    20c6:	8f 89       	ldd	r24, Y+23	; 0x17
    20c8:	98 8d       	ldd	r25, Y+24	; 0x18
    20ca:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    20ce:	dc 01       	movw	r26, r24
    20d0:	cb 01       	movw	r24, r22
    20d2:	9c 8b       	std	Y+20, r25	; 0x14
    20d4:	8b 8b       	std	Y+19, r24	; 0x13
    20d6:	8b 89       	ldd	r24, Y+19	; 0x13
    20d8:	9c 89       	ldd	r25, Y+20	; 0x14
    20da:	98 8b       	std	Y+16, r25	; 0x10
    20dc:	8f 87       	std	Y+15, r24	; 0x0f
    20de:	8f 85       	ldd	r24, Y+15	; 0x0f
    20e0:	98 89       	ldd	r25, Y+16	; 0x10
    20e2:	01 97       	sbiw	r24, 0x01	; 1
    20e4:	f1 f7       	brne	.-4      	; 0x20e2 <LCD_VidSendCommand+0x118>
    20e6:	98 8b       	std	Y+16, r25	; 0x10
    20e8:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_VidSetPinValue(Lcopy_u8PORT,  E_copy_u8Pin,0);   // E=0 Display Command
    20ea:	83 e0       	ldi	r24, 0x03	; 3
    20ec:	62 e0       	ldi	r22, 0x02	; 2
    20ee:	40 e0       	ldi	r20, 0x00	; 0
    20f0:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
	if (copy_u8command==1)
    20f4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    20f6:	81 30       	cpi	r24, 0x01	; 1
    20f8:	09 f0       	breq	.+2      	; 0x20fc <LCD_VidSendCommand+0x132>
    20fa:	72 c0       	rjmp	.+228    	; 0x21e0 <LCD_VidSendCommand+0x216>
    20fc:	80 e0       	ldi	r24, 0x00	; 0
    20fe:	90 e0       	ldi	r25, 0x00	; 0
    2100:	a0 e0       	ldi	r26, 0x00	; 0
    2102:	b0 e4       	ldi	r27, 0x40	; 64
    2104:	8b 87       	std	Y+11, r24	; 0x0b
    2106:	9c 87       	std	Y+12, r25	; 0x0c
    2108:	ad 87       	std	Y+13, r26	; 0x0d
    210a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    210c:	6b 85       	ldd	r22, Y+11	; 0x0b
    210e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2110:	8d 85       	ldd	r24, Y+13	; 0x0d
    2112:	9e 85       	ldd	r25, Y+14	; 0x0e
    2114:	20 e0       	ldi	r18, 0x00	; 0
    2116:	30 e0       	ldi	r19, 0x00	; 0
    2118:	4a ef       	ldi	r20, 0xFA	; 250
    211a:	54 e4       	ldi	r21, 0x44	; 68
    211c:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    2120:	dc 01       	movw	r26, r24
    2122:	cb 01       	movw	r24, r22
    2124:	8f 83       	std	Y+7, r24	; 0x07
    2126:	98 87       	std	Y+8, r25	; 0x08
    2128:	a9 87       	std	Y+9, r26	; 0x09
    212a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    212c:	6f 81       	ldd	r22, Y+7	; 0x07
    212e:	78 85       	ldd	r23, Y+8	; 0x08
    2130:	89 85       	ldd	r24, Y+9	; 0x09
    2132:	9a 85       	ldd	r25, Y+10	; 0x0a
    2134:	20 e0       	ldi	r18, 0x00	; 0
    2136:	30 e0       	ldi	r19, 0x00	; 0
    2138:	40 e8       	ldi	r20, 0x80	; 128
    213a:	5f e3       	ldi	r21, 0x3F	; 63
    213c:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    2140:	88 23       	and	r24, r24
    2142:	2c f4       	brge	.+10     	; 0x214e <LCD_VidSendCommand+0x184>
		__ticks = 1;
    2144:	81 e0       	ldi	r24, 0x01	; 1
    2146:	90 e0       	ldi	r25, 0x00	; 0
    2148:	9e 83       	std	Y+6, r25	; 0x06
    214a:	8d 83       	std	Y+5, r24	; 0x05
    214c:	3f c0       	rjmp	.+126    	; 0x21cc <LCD_VidSendCommand+0x202>
	else if (__tmp > 65535)
    214e:	6f 81       	ldd	r22, Y+7	; 0x07
    2150:	78 85       	ldd	r23, Y+8	; 0x08
    2152:	89 85       	ldd	r24, Y+9	; 0x09
    2154:	9a 85       	ldd	r25, Y+10	; 0x0a
    2156:	20 e0       	ldi	r18, 0x00	; 0
    2158:	3f ef       	ldi	r19, 0xFF	; 255
    215a:	4f e7       	ldi	r20, 0x7F	; 127
    215c:	57 e4       	ldi	r21, 0x47	; 71
    215e:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    2162:	18 16       	cp	r1, r24
    2164:	4c f5       	brge	.+82     	; 0x21b8 <LCD_VidSendCommand+0x1ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2166:	6b 85       	ldd	r22, Y+11	; 0x0b
    2168:	7c 85       	ldd	r23, Y+12	; 0x0c
    216a:	8d 85       	ldd	r24, Y+13	; 0x0d
    216c:	9e 85       	ldd	r25, Y+14	; 0x0e
    216e:	20 e0       	ldi	r18, 0x00	; 0
    2170:	30 e0       	ldi	r19, 0x00	; 0
    2172:	40 e2       	ldi	r20, 0x20	; 32
    2174:	51 e4       	ldi	r21, 0x41	; 65
    2176:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    217a:	dc 01       	movw	r26, r24
    217c:	cb 01       	movw	r24, r22
    217e:	bc 01       	movw	r22, r24
    2180:	cd 01       	movw	r24, r26
    2182:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2186:	dc 01       	movw	r26, r24
    2188:	cb 01       	movw	r24, r22
    218a:	9e 83       	std	Y+6, r25	; 0x06
    218c:	8d 83       	std	Y+5, r24	; 0x05
    218e:	0f c0       	rjmp	.+30     	; 0x21ae <LCD_VidSendCommand+0x1e4>
    2190:	88 ec       	ldi	r24, 0xC8	; 200
    2192:	90 e0       	ldi	r25, 0x00	; 0
    2194:	9c 83       	std	Y+4, r25	; 0x04
    2196:	8b 83       	std	Y+3, r24	; 0x03
    2198:	8b 81       	ldd	r24, Y+3	; 0x03
    219a:	9c 81       	ldd	r25, Y+4	; 0x04
    219c:	01 97       	sbiw	r24, 0x01	; 1
    219e:	f1 f7       	brne	.-4      	; 0x219c <LCD_VidSendCommand+0x1d2>
    21a0:	9c 83       	std	Y+4, r25	; 0x04
    21a2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21a4:	8d 81       	ldd	r24, Y+5	; 0x05
    21a6:	9e 81       	ldd	r25, Y+6	; 0x06
    21a8:	01 97       	sbiw	r24, 0x01	; 1
    21aa:	9e 83       	std	Y+6, r25	; 0x06
    21ac:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21ae:	8d 81       	ldd	r24, Y+5	; 0x05
    21b0:	9e 81       	ldd	r25, Y+6	; 0x06
    21b2:	00 97       	sbiw	r24, 0x00	; 0
    21b4:	69 f7       	brne	.-38     	; 0x2190 <LCD_VidSendCommand+0x1c6>
    21b6:	14 c0       	rjmp	.+40     	; 0x21e0 <LCD_VidSendCommand+0x216>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21b8:	6f 81       	ldd	r22, Y+7	; 0x07
    21ba:	78 85       	ldd	r23, Y+8	; 0x08
    21bc:	89 85       	ldd	r24, Y+9	; 0x09
    21be:	9a 85       	ldd	r25, Y+10	; 0x0a
    21c0:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    21c4:	dc 01       	movw	r26, r24
    21c6:	cb 01       	movw	r24, r22
    21c8:	9e 83       	std	Y+6, r25	; 0x06
    21ca:	8d 83       	std	Y+5, r24	; 0x05
    21cc:	8d 81       	ldd	r24, Y+5	; 0x05
    21ce:	9e 81       	ldd	r25, Y+6	; 0x06
    21d0:	9a 83       	std	Y+2, r25	; 0x02
    21d2:	89 83       	std	Y+1, r24	; 0x01
    21d4:	89 81       	ldd	r24, Y+1	; 0x01
    21d6:	9a 81       	ldd	r25, Y+2	; 0x02
    21d8:	01 97       	sbiw	r24, 0x01	; 1
    21da:	f1 f7       	brne	.-4      	; 0x21d8 <LCD_VidSendCommand+0x20e>
    21dc:	9a 83       	std	Y+2, r25	; 0x02
    21de:	89 83       	std	Y+1, r24	; 0x01
	DIO_VidSetPinValue(Lcopy_u8PORT,  E_copy_u8Pin,0);
	_delay_ms(2);

	_delay_ms(5);
	#endif
}
    21e0:	6d 96       	adiw	r28, 0x1d	; 29
    21e2:	0f b6       	in	r0, 0x3f	; 63
    21e4:	f8 94       	cli
    21e6:	de bf       	out	0x3e, r29	; 62
    21e8:	0f be       	out	0x3f, r0	; 63
    21ea:	cd bf       	out	0x3d, r28	; 61
    21ec:	cf 91       	pop	r28
    21ee:	df 91       	pop	r29
    21f0:	08 95       	ret

000021f2 <LCD_VidSendString>:

void LCD_VidSendString( u8 *copy_u8string)
{
    21f2:	df 93       	push	r29
    21f4:	cf 93       	push	r28
    21f6:	00 d0       	rcall	.+0      	; 0x21f8 <LCD_VidSendString+0x6>
    21f8:	0f 92       	push	r0
    21fa:	cd b7       	in	r28, 0x3d	; 61
    21fc:	de b7       	in	r29, 0x3e	; 62
    21fe:	9b 83       	std	Y+3, r25	; 0x03
    2200:	8a 83       	std	Y+2, r24	; 0x02

	u8 i=0;
    2202:	19 82       	std	Y+1, r1	; 0x01
    2204:	0e c0       	rjmp	.+28     	; 0x2222 <LCD_VidSendString+0x30>

	while(copy_u8string[i] != '\0')
	{

		LCD_VidSendData(copy_u8string[i]);
    2206:	89 81       	ldd	r24, Y+1	; 0x01
    2208:	28 2f       	mov	r18, r24
    220a:	30 e0       	ldi	r19, 0x00	; 0
    220c:	8a 81       	ldd	r24, Y+2	; 0x02
    220e:	9b 81       	ldd	r25, Y+3	; 0x03
    2210:	fc 01       	movw	r30, r24
    2212:	e2 0f       	add	r30, r18
    2214:	f3 1f       	adc	r31, r19
    2216:	80 81       	ld	r24, Z
    2218:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
		i++;
    221c:	89 81       	ldd	r24, Y+1	; 0x01
    221e:	8f 5f       	subi	r24, 0xFF	; 255
    2220:	89 83       	std	Y+1, r24	; 0x01
void LCD_VidSendString( u8 *copy_u8string)
{

	u8 i=0;

	while(copy_u8string[i] != '\0')
    2222:	89 81       	ldd	r24, Y+1	; 0x01
    2224:	28 2f       	mov	r18, r24
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	8a 81       	ldd	r24, Y+2	; 0x02
    222a:	9b 81       	ldd	r25, Y+3	; 0x03
    222c:	fc 01       	movw	r30, r24
    222e:	e2 0f       	add	r30, r18
    2230:	f3 1f       	adc	r31, r19
    2232:	80 81       	ld	r24, Z
    2234:	88 23       	and	r24, r24
    2236:	39 f7       	brne	.-50     	; 0x2206 <LCD_VidSendString+0x14>
		LCD_VidSendData(copy_u8string[i]);
		i++;
	}


}
    2238:	0f 90       	pop	r0
    223a:	0f 90       	pop	r0
    223c:	0f 90       	pop	r0
    223e:	cf 91       	pop	r28
    2240:	df 91       	pop	r29
    2242:	08 95       	ret

00002244 <LCD_VidSendNumber>:

 void LCD_VidSendNumber( u16 copy_u16number)
{
    2244:	df 93       	push	r29
    2246:	cf 93       	push	r28
    2248:	cd b7       	in	r28, 0x3d	; 61
    224a:	de b7       	in	r29, 0x3e	; 62
    224c:	2a 97       	sbiw	r28, 0x0a	; 10
    224e:	0f b6       	in	r0, 0x3f	; 63
    2250:	f8 94       	cli
    2252:	de bf       	out	0x3e, r29	; 62
    2254:	0f be       	out	0x3f, r0	; 63
    2256:	cd bf       	out	0x3d, r28	; 61
    2258:	98 87       	std	Y+8, r25	; 0x08
    225a:	8f 83       	std	Y+7, r24	; 0x07

	if (copy_u16number==0)
    225c:	8f 81       	ldd	r24, Y+7	; 0x07
    225e:	98 85       	ldd	r25, Y+8	; 0x08
    2260:	00 97       	sbiw	r24, 0x00	; 0
    2262:	19 f4       	brne	.+6      	; 0x226a <LCD_VidSendNumber+0x26>
	{
		LCD_VidSendData('0');
    2264:	80 e3       	ldi	r24, 0x30	; 48
    2266:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
	}
	s8 i=0;
    226a:	19 82       	std	Y+1, r1	; 0x01
    226c:	1f c0       	rjmp	.+62     	; 0x22ac <LCD_VidSendNumber+0x68>
	u8 str_num[5];
	while(copy_u16number>0)
	{
		str_num[i]=copy_u16number%10;
    226e:	89 81       	ldd	r24, Y+1	; 0x01
    2270:	e8 2f       	mov	r30, r24
    2272:	ff 27       	eor	r31, r31
    2274:	e7 fd       	sbrc	r30, 7
    2276:	f0 95       	com	r31
    2278:	8f 81       	ldd	r24, Y+7	; 0x07
    227a:	98 85       	ldd	r25, Y+8	; 0x08
    227c:	2a e0       	ldi	r18, 0x0A	; 10
    227e:	30 e0       	ldi	r19, 0x00	; 0
    2280:	b9 01       	movw	r22, r18
    2282:	0e 94 1b 16 	call	0x2c36	; 0x2c36 <__udivmodhi4>
    2286:	28 2f       	mov	r18, r24
    2288:	ce 01       	movw	r24, r28
    228a:	02 96       	adiw	r24, 0x02	; 2
    228c:	e8 0f       	add	r30, r24
    228e:	f9 1f       	adc	r31, r25
    2290:	20 83       	st	Z, r18
		copy_u16number/=10;
    2292:	8f 81       	ldd	r24, Y+7	; 0x07
    2294:	98 85       	ldd	r25, Y+8	; 0x08
    2296:	2a e0       	ldi	r18, 0x0A	; 10
    2298:	30 e0       	ldi	r19, 0x00	; 0
    229a:	b9 01       	movw	r22, r18
    229c:	0e 94 1b 16 	call	0x2c36	; 0x2c36 <__udivmodhi4>
    22a0:	cb 01       	movw	r24, r22
    22a2:	98 87       	std	Y+8, r25	; 0x08
    22a4:	8f 83       	std	Y+7, r24	; 0x07
		i++;
    22a6:	89 81       	ldd	r24, Y+1	; 0x01
    22a8:	8f 5f       	subi	r24, 0xFF	; 255
    22aa:	89 83       	std	Y+1, r24	; 0x01
	{
		LCD_VidSendData('0');
	}
	s8 i=0;
	u8 str_num[5];
	while(copy_u16number>0)
    22ac:	8f 81       	ldd	r24, Y+7	; 0x07
    22ae:	98 85       	ldd	r25, Y+8	; 0x08
    22b0:	00 97       	sbiw	r24, 0x00	; 0
    22b2:	e9 f6       	brne	.-70     	; 0x226e <LCD_VidSendNumber+0x2a>
	{
		str_num[i]=copy_u16number%10;
		copy_u16number/=10;
		i++;
	}
	i--;
    22b4:	89 81       	ldd	r24, Y+1	; 0x01
    22b6:	81 50       	subi	r24, 0x01	; 1
    22b8:	89 83       	std	Y+1, r24	; 0x01
    22ba:	7e c0       	rjmp	.+252    	; 0x23b8 <LCD_VidSendNumber+0x174>
	while(i>=0)
	{
		switch(str_num[i])
    22bc:	89 81       	ldd	r24, Y+1	; 0x01
    22be:	28 2f       	mov	r18, r24
    22c0:	33 27       	eor	r19, r19
    22c2:	27 fd       	sbrc	r18, 7
    22c4:	30 95       	com	r19
    22c6:	ce 01       	movw	r24, r28
    22c8:	02 96       	adiw	r24, 0x02	; 2
    22ca:	fc 01       	movw	r30, r24
    22cc:	e2 0f       	add	r30, r18
    22ce:	f3 1f       	adc	r31, r19
    22d0:	80 81       	ld	r24, Z
    22d2:	28 2f       	mov	r18, r24
    22d4:	30 e0       	ldi	r19, 0x00	; 0
    22d6:	3a 87       	std	Y+10, r19	; 0x0a
    22d8:	29 87       	std	Y+9, r18	; 0x09
    22da:	89 85       	ldd	r24, Y+9	; 0x09
    22dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    22de:	84 30       	cpi	r24, 0x04	; 4
    22e0:	91 05       	cpc	r25, r1
    22e2:	09 f4       	brne	.+2      	; 0x22e6 <LCD_VidSendNumber+0xa2>
    22e4:	4f c0       	rjmp	.+158    	; 0x2384 <LCD_VidSendNumber+0x140>
    22e6:	29 85       	ldd	r18, Y+9	; 0x09
    22e8:	3a 85       	ldd	r19, Y+10	; 0x0a
    22ea:	25 30       	cpi	r18, 0x05	; 5
    22ec:	31 05       	cpc	r19, r1
    22ee:	d4 f4       	brge	.+52     	; 0x2324 <LCD_VidSendNumber+0xe0>
    22f0:	89 85       	ldd	r24, Y+9	; 0x09
    22f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    22f4:	81 30       	cpi	r24, 0x01	; 1
    22f6:	91 05       	cpc	r25, r1
    22f8:	c9 f1       	breq	.+114    	; 0x236c <LCD_VidSendNumber+0x128>
    22fa:	29 85       	ldd	r18, Y+9	; 0x09
    22fc:	3a 85       	ldd	r19, Y+10	; 0x0a
    22fe:	22 30       	cpi	r18, 0x02	; 2
    2300:	31 05       	cpc	r19, r1
    2302:	2c f4       	brge	.+10     	; 0x230e <LCD_VidSendNumber+0xca>
    2304:	89 85       	ldd	r24, Y+9	; 0x09
    2306:	9a 85       	ldd	r25, Y+10	; 0x0a
    2308:	00 97       	sbiw	r24, 0x00	; 0
    230a:	61 f1       	breq	.+88     	; 0x2364 <LCD_VidSendNumber+0x120>
    230c:	52 c0       	rjmp	.+164    	; 0x23b2 <LCD_VidSendNumber+0x16e>
    230e:	29 85       	ldd	r18, Y+9	; 0x09
    2310:	3a 85       	ldd	r19, Y+10	; 0x0a
    2312:	22 30       	cpi	r18, 0x02	; 2
    2314:	31 05       	cpc	r19, r1
    2316:	71 f1       	breq	.+92     	; 0x2374 <LCD_VidSendNumber+0x130>
    2318:	89 85       	ldd	r24, Y+9	; 0x09
    231a:	9a 85       	ldd	r25, Y+10	; 0x0a
    231c:	83 30       	cpi	r24, 0x03	; 3
    231e:	91 05       	cpc	r25, r1
    2320:	69 f1       	breq	.+90     	; 0x237c <LCD_VidSendNumber+0x138>
    2322:	47 c0       	rjmp	.+142    	; 0x23b2 <LCD_VidSendNumber+0x16e>
    2324:	29 85       	ldd	r18, Y+9	; 0x09
    2326:	3a 85       	ldd	r19, Y+10	; 0x0a
    2328:	27 30       	cpi	r18, 0x07	; 7
    232a:	31 05       	cpc	r19, r1
    232c:	b9 f1       	breq	.+110    	; 0x239c <LCD_VidSendNumber+0x158>
    232e:	89 85       	ldd	r24, Y+9	; 0x09
    2330:	9a 85       	ldd	r25, Y+10	; 0x0a
    2332:	88 30       	cpi	r24, 0x08	; 8
    2334:	91 05       	cpc	r25, r1
    2336:	5c f4       	brge	.+22     	; 0x234e <LCD_VidSendNumber+0x10a>
    2338:	29 85       	ldd	r18, Y+9	; 0x09
    233a:	3a 85       	ldd	r19, Y+10	; 0x0a
    233c:	25 30       	cpi	r18, 0x05	; 5
    233e:	31 05       	cpc	r19, r1
    2340:	29 f1       	breq	.+74     	; 0x238c <LCD_VidSendNumber+0x148>
    2342:	89 85       	ldd	r24, Y+9	; 0x09
    2344:	9a 85       	ldd	r25, Y+10	; 0x0a
    2346:	86 30       	cpi	r24, 0x06	; 6
    2348:	91 05       	cpc	r25, r1
    234a:	21 f1       	breq	.+72     	; 0x2394 <LCD_VidSendNumber+0x150>
    234c:	32 c0       	rjmp	.+100    	; 0x23b2 <LCD_VidSendNumber+0x16e>
    234e:	29 85       	ldd	r18, Y+9	; 0x09
    2350:	3a 85       	ldd	r19, Y+10	; 0x0a
    2352:	28 30       	cpi	r18, 0x08	; 8
    2354:	31 05       	cpc	r19, r1
    2356:	31 f1       	breq	.+76     	; 0x23a4 <LCD_VidSendNumber+0x160>
    2358:	89 85       	ldd	r24, Y+9	; 0x09
    235a:	9a 85       	ldd	r25, Y+10	; 0x0a
    235c:	89 30       	cpi	r24, 0x09	; 9
    235e:	91 05       	cpc	r25, r1
    2360:	29 f1       	breq	.+74     	; 0x23ac <LCD_VidSendNumber+0x168>
    2362:	27 c0       	rjmp	.+78     	; 0x23b2 <LCD_VidSendNumber+0x16e>
		{
		case 0 : LCD_VidSendData('0');break;
    2364:	80 e3       	ldi	r24, 0x30	; 48
    2366:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
    236a:	23 c0       	rjmp	.+70     	; 0x23b2 <LCD_VidSendNumber+0x16e>
		case 1 : LCD_VidSendData('1');break;
    236c:	81 e3       	ldi	r24, 0x31	; 49
    236e:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
    2372:	1f c0       	rjmp	.+62     	; 0x23b2 <LCD_VidSendNumber+0x16e>
		case 2 : LCD_VidSendData('2');break;
    2374:	82 e3       	ldi	r24, 0x32	; 50
    2376:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
    237a:	1b c0       	rjmp	.+54     	; 0x23b2 <LCD_VidSendNumber+0x16e>
		case 3 : LCD_VidSendData('3');break;
    237c:	83 e3       	ldi	r24, 0x33	; 51
    237e:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
    2382:	17 c0       	rjmp	.+46     	; 0x23b2 <LCD_VidSendNumber+0x16e>
		case 4 : LCD_VidSendData('4');break;
    2384:	84 e3       	ldi	r24, 0x34	; 52
    2386:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
    238a:	13 c0       	rjmp	.+38     	; 0x23b2 <LCD_VidSendNumber+0x16e>
		case 5 : LCD_VidSendData('5');break;
    238c:	85 e3       	ldi	r24, 0x35	; 53
    238e:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
    2392:	0f c0       	rjmp	.+30     	; 0x23b2 <LCD_VidSendNumber+0x16e>
		case 6 : LCD_VidSendData('6');break;
    2394:	86 e3       	ldi	r24, 0x36	; 54
    2396:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
    239a:	0b c0       	rjmp	.+22     	; 0x23b2 <LCD_VidSendNumber+0x16e>
		case 7 : LCD_VidSendData('7');break;
    239c:	87 e3       	ldi	r24, 0x37	; 55
    239e:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
    23a2:	07 c0       	rjmp	.+14     	; 0x23b2 <LCD_VidSendNumber+0x16e>
		case 8 : LCD_VidSendData('8');break;
    23a4:	88 e3       	ldi	r24, 0x38	; 56
    23a6:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
    23aa:	03 c0       	rjmp	.+6      	; 0x23b2 <LCD_VidSendNumber+0x16e>
		case 9 : LCD_VidSendData('9');break;
    23ac:	89 e3       	ldi	r24, 0x39	; 57
    23ae:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <LCD_VidSendData>
		}

		i--;
    23b2:	89 81       	ldd	r24, Y+1	; 0x01
    23b4:	81 50       	subi	r24, 0x01	; 1
    23b6:	89 83       	std	Y+1, r24	; 0x01
		str_num[i]=copy_u16number%10;
		copy_u16number/=10;
		i++;
	}
	i--;
	while(i>=0)
    23b8:	89 81       	ldd	r24, Y+1	; 0x01
    23ba:	88 23       	and	r24, r24
    23bc:	0c f0       	brlt	.+2      	; 0x23c0 <LCD_VidSendNumber+0x17c>
    23be:	7e cf       	rjmp	.-260    	; 0x22bc <LCD_VidSendNumber+0x78>

		i--;
	}


}
    23c0:	2a 96       	adiw	r28, 0x0a	; 10
    23c2:	0f b6       	in	r0, 0x3f	; 63
    23c4:	f8 94       	cli
    23c6:	de bf       	out	0x3e, r29	; 62
    23c8:	0f be       	out	0x3f, r0	; 63
    23ca:	cd bf       	out	0x3d, r28	; 61
    23cc:	cf 91       	pop	r28
    23ce:	df 91       	pop	r29
    23d0:	08 95       	ret

000023d2 <LCD_VidSetPosition>:


void LCD_VidSetPosition(u8 raw, u8 column)
{
    23d2:	df 93       	push	r29
    23d4:	cf 93       	push	r28
    23d6:	00 d0       	rcall	.+0      	; 0x23d8 <LCD_VidSetPosition+0x6>
    23d8:	cd b7       	in	r28, 0x3d	; 61
    23da:	de b7       	in	r29, 0x3e	; 62
    23dc:	89 83       	std	Y+1, r24	; 0x01
    23de:	6a 83       	std	Y+2, r22	; 0x02
	if(0==raw)       // raw= 0
    23e0:	89 81       	ldd	r24, Y+1	; 0x01
    23e2:	88 23       	and	r24, r24
    23e4:	21 f4       	brne	.+8      	; 0x23ee <LCD_VidSetPosition+0x1c>
	{
	LCD_VidSendCommand(128+column);    // 0b10000000=128 +column
    23e6:	8a 81       	ldd	r24, Y+2	; 0x02
    23e8:	80 58       	subi	r24, 0x80	; 128
    23ea:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <LCD_VidSendCommand>
	}
	if(1==raw)
    23ee:	89 81       	ldd	r24, Y+1	; 0x01
    23f0:	81 30       	cpi	r24, 0x01	; 1
    23f2:	21 f4       	brne	.+8      	; 0x23fc <LCD_VidSetPosition+0x2a>
	{
	LCD_VidSendCommand(128+64+column);  //  // 0b10000000=128 +column+64
    23f4:	8a 81       	ldd	r24, Y+2	; 0x02
    23f6:	80 54       	subi	r24, 0x40	; 64
    23f8:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <LCD_VidSendCommand>
	                                    // 64 is the start address of row 2
	}

}
    23fc:	0f 90       	pop	r0
    23fe:	0f 90       	pop	r0
    2400:	cf 91       	pop	r28
    2402:	df 91       	pop	r29
    2404:	08 95       	ret

00002406 <LCD_VidClear>:

void LCD_VidClear(void)
{
    2406:	df 93       	push	r29
    2408:	cf 93       	push	r28
    240a:	cd b7       	in	r28, 0x3d	; 61
    240c:	de b7       	in	r29, 0x3e	; 62
	LCD_VidSendCommand(1);
    240e:	81 e0       	ldi	r24, 0x01	; 1
    2410:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <LCD_VidSendCommand>


}
    2414:	cf 91       	pop	r28
    2416:	df 91       	pop	r29
    2418:	08 95       	ret

0000241a <LCD_VidShiftRight>:

void LCD_VidShiftRight(void)
{
    241a:	df 93       	push	r29
    241c:	cf 93       	push	r28
    241e:	cd b7       	in	r28, 0x3d	; 61
    2420:	de b7       	in	r29, 0x3e	; 62
	LCD_VidSendCommand(0b00011100);
    2422:	8c e1       	ldi	r24, 0x1C	; 28
    2424:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <LCD_VidSendCommand>

}
    2428:	cf 91       	pop	r28
    242a:	df 91       	pop	r29
    242c:	08 95       	ret

0000242e <LCD_VidShiftLeft>:

void LCD_VidShiftLeft(void)
{
    242e:	df 93       	push	r29
    2430:	cf 93       	push	r28
    2432:	cd b7       	in	r28, 0x3d	; 61
    2434:	de b7       	in	r29, 0x3e	; 62
	LCD_VidSendCommand(0x18);
    2436:	88 e1       	ldi	r24, 0x18	; 24
    2438:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <LCD_VidSendCommand>

}
    243c:	cf 91       	pop	r28
    243e:	df 91       	pop	r29
    2440:	08 95       	ret

00002442 <LCD_voidReturnHome>:

void LCD_voidReturnHome(void)
{
    2442:	df 93       	push	r29
    2444:	cf 93       	push	r28
    2446:	cd b7       	in	r28, 0x3d	; 61
    2448:	de b7       	in	r29, 0x3e	; 62
	LCD_VidSendCommand(0x02);
    244a:	82 e0       	ldi	r24, 0x02	; 2
    244c:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <LCD_VidSendCommand>

}
    2450:	cf 91       	pop	r28
    2452:	df 91       	pop	r29
    2454:	08 95       	ret

00002456 <TM_voidTimerInit>:
/*Input Capture Variables*/ 
u16 ov=0;
u8 flag=0;

void TM_voidTimerInit(void)
{
    2456:	df 93       	push	r29
    2458:	cf 93       	push	r28
    245a:	cd b7       	in	r28, 0x3d	; 61
    245c:	de b7       	in	r29, 0x3e	; 62
        #endif


    #elif TIMER_S== TIMER1
        #if TIMER1_M==T1_NORMAL    
            CLR_BIT(TCCR1,WGM10);
    245e:	ae e4       	ldi	r26, 0x4E	; 78
    2460:	b0 e0       	ldi	r27, 0x00	; 0
    2462:	ee e4       	ldi	r30, 0x4E	; 78
    2464:	f0 e0       	ldi	r31, 0x00	; 0
    2466:	80 81       	ld	r24, Z
    2468:	91 81       	ldd	r25, Z+1	; 0x01
    246a:	9e 7f       	andi	r25, 0xFE	; 254
    246c:	11 96       	adiw	r26, 0x01	; 1
    246e:	9c 93       	st	X, r25
    2470:	8e 93       	st	-X, r24
            CLR_BIT(TCCR1,WGM11);
    2472:	ae e4       	ldi	r26, 0x4E	; 78
    2474:	b0 e0       	ldi	r27, 0x00	; 0
    2476:	ee e4       	ldi	r30, 0x4E	; 78
    2478:	f0 e0       	ldi	r31, 0x00	; 0
    247a:	80 81       	ld	r24, Z
    247c:	91 81       	ldd	r25, Z+1	; 0x01
    247e:	9d 7f       	andi	r25, 0xFD	; 253
    2480:	11 96       	adiw	r26, 0x01	; 1
    2482:	9c 93       	st	X, r25
    2484:	8e 93       	st	-X, r24
            CLR_BIT(TCCR1,WGM12);
    2486:	ae e4       	ldi	r26, 0x4E	; 78
    2488:	b0 e0       	ldi	r27, 0x00	; 0
    248a:	ee e4       	ldi	r30, 0x4E	; 78
    248c:	f0 e0       	ldi	r31, 0x00	; 0
    248e:	80 81       	ld	r24, Z
    2490:	91 81       	ldd	r25, Z+1	; 0x01
    2492:	87 7f       	andi	r24, 0xF7	; 247
    2494:	11 96       	adiw	r26, 0x01	; 1
    2496:	9c 93       	st	X, r25
    2498:	8e 93       	st	-X, r24
            CLR_BIT(TCCR1,WGM13);
    249a:	ae e4       	ldi	r26, 0x4E	; 78
    249c:	b0 e0       	ldi	r27, 0x00	; 0
    249e:	ee e4       	ldi	r30, 0x4E	; 78
    24a0:	f0 e0       	ldi	r31, 0x00	; 0
    24a2:	80 81       	ld	r24, Z
    24a4:	91 81       	ldd	r25, Z+1	; 0x01
    24a6:	8f 7e       	andi	r24, 0xEF	; 239
    24a8:	11 96       	adiw	r26, 0x01	; 1
    24aa:	9c 93       	st	X, r25
    24ac:	8e 93       	st	-X, r24
            SET_BIT(TIMSK, TOIE1);
    24ae:	a9 e5       	ldi	r26, 0x59	; 89
    24b0:	b0 e0       	ldi	r27, 0x00	; 0
    24b2:	e9 e5       	ldi	r30, 0x59	; 89
    24b4:	f0 e0       	ldi	r31, 0x00	; 0
    24b6:	80 81       	ld	r24, Z
    24b8:	84 60       	ori	r24, 0x04	; 4
    24ba:	8c 93       	st	X, r24
        #if TIMER1_CLK == NO_CLOCK
            CLR_BIT(TCCR1,CS10);
            CLR_BIT(TCCR1,CS11);
            CLR_BIT(TCCR1,CS12);
        #elif TIMER1_CLK == CLK
            SET_BIT(TCCR1,CS10);
    24bc:	ae e4       	ldi	r26, 0x4E	; 78
    24be:	b0 e0       	ldi	r27, 0x00	; 0
    24c0:	ee e4       	ldi	r30, 0x4E	; 78
    24c2:	f0 e0       	ldi	r31, 0x00	; 0
    24c4:	80 81       	ld	r24, Z
    24c6:	91 81       	ldd	r25, Z+1	; 0x01
    24c8:	81 60       	ori	r24, 0x01	; 1
    24ca:	11 96       	adiw	r26, 0x01	; 1
    24cc:	9c 93       	st	X, r25
    24ce:	8e 93       	st	-X, r24
            CLR_BIT(TCCR1,CS11);
    24d0:	ae e4       	ldi	r26, 0x4E	; 78
    24d2:	b0 e0       	ldi	r27, 0x00	; 0
    24d4:	ee e4       	ldi	r30, 0x4E	; 78
    24d6:	f0 e0       	ldi	r31, 0x00	; 0
    24d8:	80 81       	ld	r24, Z
    24da:	91 81       	ldd	r25, Z+1	; 0x01
    24dc:	8d 7f       	andi	r24, 0xFD	; 253
    24de:	11 96       	adiw	r26, 0x01	; 1
    24e0:	9c 93       	st	X, r25
    24e2:	8e 93       	st	-X, r24
            CLR_BIT(TCCR1,CS12);
    24e4:	ae e4       	ldi	r26, 0x4E	; 78
    24e6:	b0 e0       	ldi	r27, 0x00	; 0
    24e8:	ee e4       	ldi	r30, 0x4E	; 78
    24ea:	f0 e0       	ldi	r31, 0x00	; 0
    24ec:	80 81       	ld	r24, Z
    24ee:	91 81       	ldd	r25, Z+1	; 0x01
    24f0:	8b 7f       	andi	r24, 0xFB	; 251
    24f2:	11 96       	adiw	r26, 0x01	; 1
    24f4:	9c 93       	st	X, r25
    24f6:	8e 93       	st	-X, r24
        #endif

    #else
    #endif
   
    SET_BIT(SREG, BIT7);
    24f8:	af e5       	ldi	r26, 0x5F	; 95
    24fa:	b0 e0       	ldi	r27, 0x00	; 0
    24fc:	ef e5       	ldi	r30, 0x5F	; 95
    24fe:	f0 e0       	ldi	r31, 0x00	; 0
    2500:	80 81       	ld	r24, Z
    2502:	80 68       	ori	r24, 0x80	; 128
    2504:	8c 93       	st	X, r24
    
}
    2506:	cf 91       	pop	r28
    2508:	df 91       	pop	r29
    250a:	08 95       	ret

0000250c <TM_VoidPrealoadOverFlow>:


void TM_VoidPrealoadOverFlow(void)
{ 
    250c:	df 93       	push	r29
    250e:	cf 93       	push	r28
    2510:	cd b7       	in	r28, 0x3d	; 61
    2512:	de b7       	in	r29, 0x3e	; 62
    #if TIMER_S== TIMER0
        TCNT0= PRELOAD_VALUE;
    #elif TIMER_S== TIMER1
        TCNT1= PRELOAD_VALUE;      
    2514:	ec e4       	ldi	r30, 0x4C	; 76
    2516:	f0 e0       	ldi	r31, 0x00	; 0
    2518:	8c ed       	ldi	r24, 0xDC	; 220
    251a:	90 e0       	ldi	r25, 0x00	; 0
    251c:	91 83       	std	Z+1, r25	; 0x01
    251e:	80 83       	st	Z, r24
    #elif TIMER_S== TIMER2
        TCNT2= PRELOAD_VALUE;  
    #endif

    
}
    2520:	cf 91       	pop	r28
    2522:	df 91       	pop	r29
    2524:	08 95       	ret

00002526 <TM_VoidSetDuty>:


void TM_VoidSetDuty(u16 Copy_U8Duty)
{
    2526:	df 93       	push	r29
    2528:	cf 93       	push	r28
    252a:	00 d0       	rcall	.+0      	; 0x252c <TM_VoidSetDuty+0x6>
    252c:	cd b7       	in	r28, 0x3d	; 61
    252e:	de b7       	in	r29, 0x3e	; 62
    2530:	9a 83       	std	Y+2, r25	; 0x02
    2532:	89 83       	std	Y+1, r24	; 0x01
    #if TIMER_S== TIMER0
        OCR0= Copy_U8Duty;
    #elif TIMER_S== TIMER1
        OCR1A= Copy_U8Duty;
    2534:	ea e4       	ldi	r30, 0x4A	; 74
    2536:	f0 e0       	ldi	r31, 0x00	; 0
    2538:	89 81       	ldd	r24, Y+1	; 0x01
    253a:	9a 81       	ldd	r25, Y+2	; 0x02
    253c:	91 83       	std	Z+1, r25	; 0x01
    253e:	80 83       	st	Z, r24
    #elif TIMER_S== TIMER2
        OCR2 =Copy_U8Duty;
    #endif
}
    2540:	0f 90       	pop	r0
    2542:	0f 90       	pop	r0
    2544:	cf 91       	pop	r28
    2546:	df 91       	pop	r29
    2548:	08 95       	ret

0000254a <TM1_VoidInputCapture>:

void TM1_VoidInputCapture(void)
{ 
    254a:	df 93       	push	r29
    254c:	cf 93       	push	r28
    254e:	cd b7       	in	r28, 0x3d	; 61
    2550:	de b7       	in	r29, 0x3e	; 62
    DIO_VidSetPinDirection(PORTD,PIN6,INPUT);
    2552:	83 e0       	ldi	r24, 0x03	; 3
    2554:	67 e0       	ldi	r22, 0x07	; 7
    2556:	40 e0       	ldi	r20, 0x00	; 0
    2558:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_VidSetPinDirection>
    /*IT can be any mode of the Timer except 8,10,12,14*/
    SET_BIT(TIMSK,TICIE1);
    255c:	a9 e5       	ldi	r26, 0x59	; 89
    255e:	b0 e0       	ldi	r27, 0x00	; 0
    2560:	e9 e5       	ldi	r30, 0x59	; 89
    2562:	f0 e0       	ldi	r31, 0x00	; 0
    2564:	80 81       	ld	r24, Z
    2566:	80 62       	ori	r24, 0x20	; 32
    2568:	8c 93       	st	X, r24
    SET_BIT(TCCR1,ICES1);   // Rising Edge
    256a:	ae e4       	ldi	r26, 0x4E	; 78
    256c:	b0 e0       	ldi	r27, 0x00	; 0
    256e:	ee e4       	ldi	r30, 0x4E	; 78
    2570:	f0 e0       	ldi	r31, 0x00	; 0
    2572:	80 81       	ld	r24, Z
    2574:	91 81       	ldd	r25, Z+1	; 0x01
    2576:	80 64       	ori	r24, 0x40	; 64
    2578:	11 96       	adiw	r26, 0x01	; 1
    257a:	9c 93       	st	X, r25
    257c:	8e 93       	st	-X, r24

}
    257e:	cf 91       	pop	r28
    2580:	df 91       	pop	r29
    2582:	08 95       	ret

00002584 <__vector_6>:
long count;
double distance;
u32 snap1;
u32 snap2;
void __vector_6(void)
{
    2584:	1f 92       	push	r1
    2586:	0f 92       	push	r0
    2588:	0f b6       	in	r0, 0x3f	; 63
    258a:	0f 92       	push	r0
    258c:	11 24       	eor	r1, r1
    258e:	ef 92       	push	r14
    2590:	ff 92       	push	r15
    2592:	0f 93       	push	r16
    2594:	1f 93       	push	r17
    2596:	2f 93       	push	r18
    2598:	3f 93       	push	r19
    259a:	4f 93       	push	r20
    259c:	5f 93       	push	r21
    259e:	6f 93       	push	r22
    25a0:	7f 93       	push	r23
    25a2:	8f 93       	push	r24
    25a4:	9f 93       	push	r25
    25a6:	af 93       	push	r26
    25a8:	bf 93       	push	r27
    25aa:	ef 93       	push	r30
    25ac:	ff 93       	push	r31
    25ae:	df 93       	push	r29
    25b0:	cf 93       	push	r28
    25b2:	cd b7       	in	r28, 0x3d	; 61
    25b4:	de b7       	in	r29, 0x3e	; 62

	if (0==flag)
    25b6:	80 91 82 01 	lds	r24, 0x0182
    25ba:	88 23       	and	r24, r24
    25bc:	09 f5       	brne	.+66     	; 0x2600 <__vector_6+0x7c>
	{
		snap1=ICR1;
    25be:	e6 e4       	ldi	r30, 0x46	; 70
    25c0:	f0 e0       	ldi	r31, 0x00	; 0
    25c2:	80 81       	ld	r24, Z
    25c4:	91 81       	ldd	r25, Z+1	; 0x01
    25c6:	cc 01       	movw	r24, r24
    25c8:	a0 e0       	ldi	r26, 0x00	; 0
    25ca:	b0 e0       	ldi	r27, 0x00	; 0
    25cc:	80 93 87 01 	sts	0x0187, r24
    25d0:	90 93 88 01 	sts	0x0188, r25
    25d4:	a0 93 89 01 	sts	0x0189, r26
    25d8:	b0 93 8a 01 	sts	0x018A, r27
		ov =0;
    25dc:	10 92 81 01 	sts	0x0181, r1
    25e0:	10 92 80 01 	sts	0x0180, r1
		CLR_BIT(TCCR1,ICES1);   // Falling Edge
    25e4:	ae e4       	ldi	r26, 0x4E	; 78
    25e6:	b0 e0       	ldi	r27, 0x00	; 0
    25e8:	ee e4       	ldi	r30, 0x4E	; 78
    25ea:	f0 e0       	ldi	r31, 0x00	; 0
    25ec:	80 81       	ld	r24, Z
    25ee:	91 81       	ldd	r25, Z+1	; 0x01
    25f0:	8f 7b       	andi	r24, 0xBF	; 191
    25f2:	11 96       	adiw	r26, 0x01	; 1
    25f4:	9c 93       	st	X, r25
    25f6:	8e 93       	st	-X, r24
		flag=1;
    25f8:	81 e0       	ldi	r24, 0x01	; 1
    25fa:	80 93 82 01 	sts	0x0182, r24
    25fe:	89 c0       	rjmp	.+274    	; 0x2712 <__vector_6+0x18e>
	}
	else if(flag ==1)
    2600:	80 91 82 01 	lds	r24, 0x0182
    2604:	81 30       	cpi	r24, 0x01	; 1
    2606:	09 f0       	breq	.+2      	; 0x260a <__vector_6+0x86>
    2608:	84 c0       	rjmp	.+264    	; 0x2712 <__vector_6+0x18e>
	{
		snap2= ICR1+ (ov*65536);
    260a:	e6 e4       	ldi	r30, 0x46	; 70
    260c:	f0 e0       	ldi	r31, 0x00	; 0
    260e:	80 81       	ld	r24, Z
    2610:	91 81       	ldd	r25, Z+1	; 0x01
    2612:	9c 01       	movw	r18, r24
    2614:	40 e0       	ldi	r20, 0x00	; 0
    2616:	50 e0       	ldi	r21, 0x00	; 0
    2618:	80 91 80 01 	lds	r24, 0x0180
    261c:	90 91 81 01 	lds	r25, 0x0181
    2620:	cc 01       	movw	r24, r24
    2622:	a0 e0       	ldi	r26, 0x00	; 0
    2624:	b0 e0       	ldi	r27, 0x00	; 0
    2626:	dc 01       	movw	r26, r24
    2628:	99 27       	eor	r25, r25
    262a:	88 27       	eor	r24, r24
    262c:	82 0f       	add	r24, r18
    262e:	93 1f       	adc	r25, r19
    2630:	a4 1f       	adc	r26, r20
    2632:	b5 1f       	adc	r27, r21
    2634:	80 93 8f 01 	sts	0x018F, r24
    2638:	90 93 90 01 	sts	0x0190, r25
    263c:	a0 93 91 01 	sts	0x0191, r26
    2640:	b0 93 92 01 	sts	0x0192, r27
		count = snap2 - snap1;	/* Take count */
    2644:	20 91 8f 01 	lds	r18, 0x018F
    2648:	30 91 90 01 	lds	r19, 0x0190
    264c:	40 91 91 01 	lds	r20, 0x0191
    2650:	50 91 92 01 	lds	r21, 0x0192
    2654:	80 91 87 01 	lds	r24, 0x0187
    2658:	90 91 88 01 	lds	r25, 0x0188
    265c:	a0 91 89 01 	lds	r26, 0x0189
    2660:	b0 91 8a 01 	lds	r27, 0x018A
    2664:	79 01       	movw	r14, r18
    2666:	8a 01       	movw	r16, r20
    2668:	e8 1a       	sub	r14, r24
    266a:	f9 0a       	sbc	r15, r25
    266c:	0a 0b       	sbc	r16, r26
    266e:	1b 0b       	sbc	r17, r27
    2670:	d8 01       	movw	r26, r16
    2672:	c7 01       	movw	r24, r14
    2674:	80 93 8b 01 	sts	0x018B, r24
    2678:	90 93 8c 01 	sts	0x018C, r25
    267c:	a0 93 8d 01 	sts	0x018D, r26
    2680:	b0 93 8e 01 	sts	0x018E, r27
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;
    2684:	80 91 8b 01 	lds	r24, 0x018B
    2688:	90 91 8c 01 	lds	r25, 0x018C
    268c:	a0 91 8d 01 	lds	r26, 0x018D
    2690:	b0 91 8e 01 	lds	r27, 0x018E
    2694:	bc 01       	movw	r22, r24
    2696:	cd 01       	movw	r24, r26
    2698:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__floatsisf>
    269c:	dc 01       	movw	r26, r24
    269e:	cb 01       	movw	r24, r22
    26a0:	bc 01       	movw	r22, r24
    26a2:	cd 01       	movw	r24, r26
    26a4:	29 e2       	ldi	r18, 0x29	; 41
    26a6:	3c e3       	ldi	r19, 0x3C	; 60
    26a8:	49 ee       	ldi	r20, 0xE9	; 233
    26aa:	53 e4       	ldi	r21, 0x43	; 67
    26ac:	0e 94 96 03 	call	0x72c	; 0x72c <__divsf3>
    26b0:	dc 01       	movw	r26, r24
    26b2:	cb 01       	movw	r24, r22
    26b4:	80 93 83 01 	sts	0x0183, r24
    26b8:	90 93 84 01 	sts	0x0184, r25
    26bc:	a0 93 85 01 	sts	0x0185, r26
    26c0:	b0 93 86 01 	sts	0x0186, r27
		distance = distance+2;
    26c4:	80 91 83 01 	lds	r24, 0x0183
    26c8:	90 91 84 01 	lds	r25, 0x0184
    26cc:	a0 91 85 01 	lds	r26, 0x0185
    26d0:	b0 91 86 01 	lds	r27, 0x0186
    26d4:	bc 01       	movw	r22, r24
    26d6:	cd 01       	movw	r24, r26
    26d8:	20 e0       	ldi	r18, 0x00	; 0
    26da:	30 e0       	ldi	r19, 0x00	; 0
    26dc:	40 e0       	ldi	r20, 0x00	; 0
    26de:	50 e4       	ldi	r21, 0x40	; 64
    26e0:	0e 94 6f 02 	call	0x4de	; 0x4de <__addsf3>
    26e4:	dc 01       	movw	r26, r24
    26e6:	cb 01       	movw	r24, r22
    26e8:	80 93 83 01 	sts	0x0183, r24
    26ec:	90 93 84 01 	sts	0x0184, r25
    26f0:	a0 93 85 01 	sts	0x0185, r26
    26f4:	b0 93 86 01 	sts	0x0186, r27
		// rising edge
		SET_BIT(TCCR1,ICES1);
    26f8:	ae e4       	ldi	r26, 0x4E	; 78
    26fa:	b0 e0       	ldi	r27, 0x00	; 0
    26fc:	ee e4       	ldi	r30, 0x4E	; 78
    26fe:	f0 e0       	ldi	r31, 0x00	; 0
    2700:	80 81       	ld	r24, Z
    2702:	91 81       	ldd	r25, Z+1	; 0x01
    2704:	80 64       	ori	r24, 0x40	; 64
    2706:	11 96       	adiw	r26, 0x01	; 1
    2708:	9c 93       	st	X, r25
    270a:	8e 93       	st	-X, r24
		flag =3;
    270c:	83 e0       	ldi	r24, 0x03	; 3
    270e:	80 93 82 01 	sts	0x0182, r24
	}

}
    2712:	cf 91       	pop	r28
    2714:	df 91       	pop	r29
    2716:	ff 91       	pop	r31
    2718:	ef 91       	pop	r30
    271a:	bf 91       	pop	r27
    271c:	af 91       	pop	r26
    271e:	9f 91       	pop	r25
    2720:	8f 91       	pop	r24
    2722:	7f 91       	pop	r23
    2724:	6f 91       	pop	r22
    2726:	5f 91       	pop	r21
    2728:	4f 91       	pop	r20
    272a:	3f 91       	pop	r19
    272c:	2f 91       	pop	r18
    272e:	1f 91       	pop	r17
    2730:	0f 91       	pop	r16
    2732:	ff 90       	pop	r15
    2734:	ef 90       	pop	r14
    2736:	0f 90       	pop	r0
    2738:	0f be       	out	0x3f, r0	; 63
    273a:	0f 90       	pop	r0
    273c:	1f 90       	pop	r1
    273e:	18 95       	reti

00002740 <__vector_9>:

void __vector_9(void)
{
    2740:	1f 92       	push	r1
    2742:	0f 92       	push	r0
    2744:	0f b6       	in	r0, 0x3f	; 63
    2746:	0f 92       	push	r0
    2748:	11 24       	eor	r1, r1
    274a:	8f 93       	push	r24
    274c:	9f 93       	push	r25
    274e:	df 93       	push	r29
    2750:	cf 93       	push	r28
    2752:	cd b7       	in	r28, 0x3d	; 61
    2754:	de b7       	in	r29, 0x3e	; 62
	ov++;
    2756:	80 91 80 01 	lds	r24, 0x0180
    275a:	90 91 81 01 	lds	r25, 0x0181
    275e:	01 96       	adiw	r24, 0x01	; 1
    2760:	90 93 81 01 	sts	0x0181, r25
    2764:	80 93 80 01 	sts	0x0180, r24
}
    2768:	cf 91       	pop	r28
    276a:	df 91       	pop	r29
    276c:	9f 91       	pop	r25
    276e:	8f 91       	pop	r24
    2770:	0f 90       	pop	r0
    2772:	0f be       	out	0x3f, r0	; 63
    2774:	0f 90       	pop	r0
    2776:	1f 90       	pop	r1
    2778:	18 95       	reti

0000277a <main>:


extern u8 flag;
extern 	double distance;
void main(void)
{
    277a:	0f 93       	push	r16
    277c:	1f 93       	push	r17
    277e:	df 93       	push	r29
    2780:	cf 93       	push	r28
    2782:	cd b7       	in	r28, 0x3d	; 61
    2784:	de b7       	in	r29, 0x3e	; 62
    2786:	c8 54       	subi	r28, 0x48	; 72
    2788:	d0 40       	sbci	r29, 0x00	; 0
    278a:	0f b6       	in	r0, 0x3f	; 63
    278c:	f8 94       	cli
    278e:	de bf       	out	0x3e, r29	; 62
    2790:	0f be       	out	0x3f, r0	; 63
    2792:	cd bf       	out	0x3d, r28	; 61

	char string[10];

	DIO_VidSetPinDirection(PORTA,PIN0,OUTPUT);
    2794:	80 e0       	ldi	r24, 0x00	; 0
    2796:	60 e0       	ldi	r22, 0x00	; 0
    2798:	41 e0       	ldi	r20, 0x01	; 1
    279a:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(PORTA,PIN1,OUTPUT);
    279e:	80 e0       	ldi	r24, 0x00	; 0
    27a0:	61 e0       	ldi	r22, 0x01	; 1
    27a2:	41 e0       	ldi	r20, 0x01	; 1
    27a4:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_VidSetPinDirection>
	TM_voidTimerInit();
    27a8:	0e 94 2b 12 	call	0x2456	; 0x2456 <TM_voidTimerInit>
	TM1_VoidInputCapture();
    27ac:	0e 94 a5 12 	call	0x254a	; 0x254a <TM1_VoidInputCapture>
	LCD_VidInit();
    27b0:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <LCD_VidInit>
	while(1)
	{
		DIO_VidSetPinValue(0,5,1);
    27b4:	80 e0       	ldi	r24, 0x00	; 0
    27b6:	65 e0       	ldi	r22, 0x05	; 5
    27b8:	41 e0       	ldi	r20, 0x01	; 1
    27ba:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
		// Trigger Signal
		DIO_VidSetPinValue(PORTA,PIN0,LOW);
    27be:	80 e0       	ldi	r24, 0x00	; 0
    27c0:	60 e0       	ldi	r22, 0x00	; 0
    27c2:	40 e0       	ldi	r20, 0x00	; 0
    27c4:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
    27c8:	80 e0       	ldi	r24, 0x00	; 0
    27ca:	90 e0       	ldi	r25, 0x00	; 0
    27cc:	a0 ea       	ldi	r26, 0xA0	; 160
    27ce:	b0 e4       	ldi	r27, 0x40	; 64
    27d0:	8b af       	std	Y+59, r24	; 0x3b
    27d2:	9c af       	std	Y+60, r25	; 0x3c
    27d4:	ad af       	std	Y+61, r26	; 0x3d
    27d6:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    27d8:	6b ad       	ldd	r22, Y+59	; 0x3b
    27da:	7c ad       	ldd	r23, Y+60	; 0x3c
    27dc:	8d ad       	ldd	r24, Y+61	; 0x3d
    27de:	9e ad       	ldd	r25, Y+62	; 0x3e
    27e0:	2b ea       	ldi	r18, 0xAB	; 171
    27e2:	3a ea       	ldi	r19, 0xAA	; 170
    27e4:	4a e2       	ldi	r20, 0x2A	; 42
    27e6:	50 e4       	ldi	r21, 0x40	; 64
    27e8:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    27ec:	dc 01       	movw	r26, r24
    27ee:	cb 01       	movw	r24, r22
    27f0:	8f ab       	std	Y+55, r24	; 0x37
    27f2:	98 af       	std	Y+56, r25	; 0x38
    27f4:	a9 af       	std	Y+57, r26	; 0x39
    27f6:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    27f8:	6f a9       	ldd	r22, Y+55	; 0x37
    27fa:	78 ad       	ldd	r23, Y+56	; 0x38
    27fc:	89 ad       	ldd	r24, Y+57	; 0x39
    27fe:	9a ad       	ldd	r25, Y+58	; 0x3a
    2800:	20 e0       	ldi	r18, 0x00	; 0
    2802:	30 e0       	ldi	r19, 0x00	; 0
    2804:	40 e8       	ldi	r20, 0x80	; 128
    2806:	5f e3       	ldi	r21, 0x3F	; 63
    2808:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    280c:	88 23       	and	r24, r24
    280e:	1c f4       	brge	.+6      	; 0x2816 <main+0x9c>
		__ticks = 1;
    2810:	81 e0       	ldi	r24, 0x01	; 1
    2812:	8e ab       	std	Y+54, r24	; 0x36
    2814:	91 c0       	rjmp	.+290    	; 0x2938 <main+0x1be>
	else if (__tmp > 255)
    2816:	6f a9       	ldd	r22, Y+55	; 0x37
    2818:	78 ad       	ldd	r23, Y+56	; 0x38
    281a:	89 ad       	ldd	r24, Y+57	; 0x39
    281c:	9a ad       	ldd	r25, Y+58	; 0x3a
    281e:	20 e0       	ldi	r18, 0x00	; 0
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	4f e7       	ldi	r20, 0x7F	; 127
    2824:	53 e4       	ldi	r21, 0x43	; 67
    2826:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    282a:	18 16       	cp	r1, r24
    282c:	0c f0       	brlt	.+2      	; 0x2830 <main+0xb6>
    282e:	7b c0       	rjmp	.+246    	; 0x2926 <main+0x1ac>
	{
		_delay_ms(__us / 1000.0);
    2830:	6b ad       	ldd	r22, Y+59	; 0x3b
    2832:	7c ad       	ldd	r23, Y+60	; 0x3c
    2834:	8d ad       	ldd	r24, Y+61	; 0x3d
    2836:	9e ad       	ldd	r25, Y+62	; 0x3e
    2838:	20 e0       	ldi	r18, 0x00	; 0
    283a:	30 e0       	ldi	r19, 0x00	; 0
    283c:	4a e7       	ldi	r20, 0x7A	; 122
    283e:	54 e4       	ldi	r21, 0x44	; 68
    2840:	0e 94 96 03 	call	0x72c	; 0x72c <__divsf3>
    2844:	dc 01       	movw	r26, r24
    2846:	cb 01       	movw	r24, r22
    2848:	8a ab       	std	Y+50, r24	; 0x32
    284a:	9b ab       	std	Y+51, r25	; 0x33
    284c:	ac ab       	std	Y+52, r26	; 0x34
    284e:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2850:	6a a9       	ldd	r22, Y+50	; 0x32
    2852:	7b a9       	ldd	r23, Y+51	; 0x33
    2854:	8c a9       	ldd	r24, Y+52	; 0x34
    2856:	9d a9       	ldd	r25, Y+53	; 0x35
    2858:	20 e0       	ldi	r18, 0x00	; 0
    285a:	30 e0       	ldi	r19, 0x00	; 0
    285c:	4a ef       	ldi	r20, 0xFA	; 250
    285e:	54 e4       	ldi	r21, 0x44	; 68
    2860:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    2864:	dc 01       	movw	r26, r24
    2866:	cb 01       	movw	r24, r22
    2868:	8e a7       	std	Y+46, r24	; 0x2e
    286a:	9f a7       	std	Y+47, r25	; 0x2f
    286c:	a8 ab       	std	Y+48, r26	; 0x30
    286e:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    2870:	6e a5       	ldd	r22, Y+46	; 0x2e
    2872:	7f a5       	ldd	r23, Y+47	; 0x2f
    2874:	88 a9       	ldd	r24, Y+48	; 0x30
    2876:	99 a9       	ldd	r25, Y+49	; 0x31
    2878:	20 e0       	ldi	r18, 0x00	; 0
    287a:	30 e0       	ldi	r19, 0x00	; 0
    287c:	40 e8       	ldi	r20, 0x80	; 128
    287e:	5f e3       	ldi	r21, 0x3F	; 63
    2880:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    2884:	88 23       	and	r24, r24
    2886:	2c f4       	brge	.+10     	; 0x2892 <main+0x118>
		__ticks = 1;
    2888:	81 e0       	ldi	r24, 0x01	; 1
    288a:	90 e0       	ldi	r25, 0x00	; 0
    288c:	9d a7       	std	Y+45, r25	; 0x2d
    288e:	8c a7       	std	Y+44, r24	; 0x2c
    2890:	3f c0       	rjmp	.+126    	; 0x2910 <main+0x196>
	else if (__tmp > 65535)
    2892:	6e a5       	ldd	r22, Y+46	; 0x2e
    2894:	7f a5       	ldd	r23, Y+47	; 0x2f
    2896:	88 a9       	ldd	r24, Y+48	; 0x30
    2898:	99 a9       	ldd	r25, Y+49	; 0x31
    289a:	20 e0       	ldi	r18, 0x00	; 0
    289c:	3f ef       	ldi	r19, 0xFF	; 255
    289e:	4f e7       	ldi	r20, 0x7F	; 127
    28a0:	57 e4       	ldi	r21, 0x47	; 71
    28a2:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    28a6:	18 16       	cp	r1, r24
    28a8:	4c f5       	brge	.+82     	; 0x28fc <main+0x182>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28aa:	6a a9       	ldd	r22, Y+50	; 0x32
    28ac:	7b a9       	ldd	r23, Y+51	; 0x33
    28ae:	8c a9       	ldd	r24, Y+52	; 0x34
    28b0:	9d a9       	ldd	r25, Y+53	; 0x35
    28b2:	20 e0       	ldi	r18, 0x00	; 0
    28b4:	30 e0       	ldi	r19, 0x00	; 0
    28b6:	40 e2       	ldi	r20, 0x20	; 32
    28b8:	51 e4       	ldi	r21, 0x41	; 65
    28ba:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    28be:	dc 01       	movw	r26, r24
    28c0:	cb 01       	movw	r24, r22
    28c2:	bc 01       	movw	r22, r24
    28c4:	cd 01       	movw	r24, r26
    28c6:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    28ca:	dc 01       	movw	r26, r24
    28cc:	cb 01       	movw	r24, r22
    28ce:	9d a7       	std	Y+45, r25	; 0x2d
    28d0:	8c a7       	std	Y+44, r24	; 0x2c
    28d2:	0f c0       	rjmp	.+30     	; 0x28f2 <main+0x178>
    28d4:	88 ec       	ldi	r24, 0xC8	; 200
    28d6:	90 e0       	ldi	r25, 0x00	; 0
    28d8:	9b a7       	std	Y+43, r25	; 0x2b
    28da:	8a a7       	std	Y+42, r24	; 0x2a
    28dc:	8a a5       	ldd	r24, Y+42	; 0x2a
    28de:	9b a5       	ldd	r25, Y+43	; 0x2b
    28e0:	01 97       	sbiw	r24, 0x01	; 1
    28e2:	f1 f7       	brne	.-4      	; 0x28e0 <main+0x166>
    28e4:	9b a7       	std	Y+43, r25	; 0x2b
    28e6:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28e8:	8c a5       	ldd	r24, Y+44	; 0x2c
    28ea:	9d a5       	ldd	r25, Y+45	; 0x2d
    28ec:	01 97       	sbiw	r24, 0x01	; 1
    28ee:	9d a7       	std	Y+45, r25	; 0x2d
    28f0:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28f2:	8c a5       	ldd	r24, Y+44	; 0x2c
    28f4:	9d a5       	ldd	r25, Y+45	; 0x2d
    28f6:	00 97       	sbiw	r24, 0x00	; 0
    28f8:	69 f7       	brne	.-38     	; 0x28d4 <main+0x15a>
    28fa:	24 c0       	rjmp	.+72     	; 0x2944 <main+0x1ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28fc:	6e a5       	ldd	r22, Y+46	; 0x2e
    28fe:	7f a5       	ldd	r23, Y+47	; 0x2f
    2900:	88 a9       	ldd	r24, Y+48	; 0x30
    2902:	99 a9       	ldd	r25, Y+49	; 0x31
    2904:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2908:	dc 01       	movw	r26, r24
    290a:	cb 01       	movw	r24, r22
    290c:	9d a7       	std	Y+45, r25	; 0x2d
    290e:	8c a7       	std	Y+44, r24	; 0x2c
    2910:	8c a5       	ldd	r24, Y+44	; 0x2c
    2912:	9d a5       	ldd	r25, Y+45	; 0x2d
    2914:	99 a7       	std	Y+41, r25	; 0x29
    2916:	88 a7       	std	Y+40, r24	; 0x28
    2918:	88 a5       	ldd	r24, Y+40	; 0x28
    291a:	99 a5       	ldd	r25, Y+41	; 0x29
    291c:	01 97       	sbiw	r24, 0x01	; 1
    291e:	f1 f7       	brne	.-4      	; 0x291c <main+0x1a2>
    2920:	99 a7       	std	Y+41, r25	; 0x29
    2922:	88 a7       	std	Y+40, r24	; 0x28
    2924:	0f c0       	rjmp	.+30     	; 0x2944 <main+0x1ca>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2926:	6f a9       	ldd	r22, Y+55	; 0x37
    2928:	78 ad       	ldd	r23, Y+56	; 0x38
    292a:	89 ad       	ldd	r24, Y+57	; 0x39
    292c:	9a ad       	ldd	r25, Y+58	; 0x3a
    292e:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2932:	dc 01       	movw	r26, r24
    2934:	cb 01       	movw	r24, r22
    2936:	8e ab       	std	Y+54, r24	; 0x36
    2938:	8e a9       	ldd	r24, Y+54	; 0x36
    293a:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    293c:	8f a1       	ldd	r24, Y+39	; 0x27
    293e:	8a 95       	dec	r24
    2940:	f1 f7       	brne	.-4      	; 0x293e <main+0x1c4>
    2942:	8f a3       	std	Y+39, r24	; 0x27
		_delay_us(5);
		DIO_VidSetPinValue(PORTA,PIN0,HIGH);
    2944:	80 e0       	ldi	r24, 0x00	; 0
    2946:	60 e0       	ldi	r22, 0x00	; 0
    2948:	41 e0       	ldi	r20, 0x01	; 1
    294a:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>
    294e:	80 e0       	ldi	r24, 0x00	; 0
    2950:	90 e0       	ldi	r25, 0x00	; 0
    2952:	a0 e2       	ldi	r26, 0x20	; 32
    2954:	b1 e4       	ldi	r27, 0x41	; 65
    2956:	8b a3       	std	Y+35, r24	; 0x23
    2958:	9c a3       	std	Y+36, r25	; 0x24
    295a:	ad a3       	std	Y+37, r26	; 0x25
    295c:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    295e:	6b a1       	ldd	r22, Y+35	; 0x23
    2960:	7c a1       	ldd	r23, Y+36	; 0x24
    2962:	8d a1       	ldd	r24, Y+37	; 0x25
    2964:	9e a1       	ldd	r25, Y+38	; 0x26
    2966:	2b ea       	ldi	r18, 0xAB	; 171
    2968:	3a ea       	ldi	r19, 0xAA	; 170
    296a:	4a e2       	ldi	r20, 0x2A	; 42
    296c:	50 e4       	ldi	r21, 0x40	; 64
    296e:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    2972:	dc 01       	movw	r26, r24
    2974:	cb 01       	movw	r24, r22
    2976:	8f 8f       	std	Y+31, r24	; 0x1f
    2978:	98 a3       	std	Y+32, r25	; 0x20
    297a:	a9 a3       	std	Y+33, r26	; 0x21
    297c:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    297e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2980:	78 a1       	ldd	r23, Y+32	; 0x20
    2982:	89 a1       	ldd	r24, Y+33	; 0x21
    2984:	9a a1       	ldd	r25, Y+34	; 0x22
    2986:	20 e0       	ldi	r18, 0x00	; 0
    2988:	30 e0       	ldi	r19, 0x00	; 0
    298a:	40 e8       	ldi	r20, 0x80	; 128
    298c:	5f e3       	ldi	r21, 0x3F	; 63
    298e:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    2992:	88 23       	and	r24, r24
    2994:	1c f4       	brge	.+6      	; 0x299c <main+0x222>
		__ticks = 1;
    2996:	81 e0       	ldi	r24, 0x01	; 1
    2998:	8e 8f       	std	Y+30, r24	; 0x1e
    299a:	91 c0       	rjmp	.+290    	; 0x2abe <main+0x344>
	else if (__tmp > 255)
    299c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    299e:	78 a1       	ldd	r23, Y+32	; 0x20
    29a0:	89 a1       	ldd	r24, Y+33	; 0x21
    29a2:	9a a1       	ldd	r25, Y+34	; 0x22
    29a4:	20 e0       	ldi	r18, 0x00	; 0
    29a6:	30 e0       	ldi	r19, 0x00	; 0
    29a8:	4f e7       	ldi	r20, 0x7F	; 127
    29aa:	53 e4       	ldi	r21, 0x43	; 67
    29ac:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    29b0:	18 16       	cp	r1, r24
    29b2:	0c f0       	brlt	.+2      	; 0x29b6 <main+0x23c>
    29b4:	7b c0       	rjmp	.+246    	; 0x2aac <main+0x332>
	{
		_delay_ms(__us / 1000.0);
    29b6:	6b a1       	ldd	r22, Y+35	; 0x23
    29b8:	7c a1       	ldd	r23, Y+36	; 0x24
    29ba:	8d a1       	ldd	r24, Y+37	; 0x25
    29bc:	9e a1       	ldd	r25, Y+38	; 0x26
    29be:	20 e0       	ldi	r18, 0x00	; 0
    29c0:	30 e0       	ldi	r19, 0x00	; 0
    29c2:	4a e7       	ldi	r20, 0x7A	; 122
    29c4:	54 e4       	ldi	r21, 0x44	; 68
    29c6:	0e 94 96 03 	call	0x72c	; 0x72c <__divsf3>
    29ca:	dc 01       	movw	r26, r24
    29cc:	cb 01       	movw	r24, r22
    29ce:	8a 8f       	std	Y+26, r24	; 0x1a
    29d0:	9b 8f       	std	Y+27, r25	; 0x1b
    29d2:	ac 8f       	std	Y+28, r26	; 0x1c
    29d4:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29d6:	6a 8d       	ldd	r22, Y+26	; 0x1a
    29d8:	7b 8d       	ldd	r23, Y+27	; 0x1b
    29da:	8c 8d       	ldd	r24, Y+28	; 0x1c
    29dc:	9d 8d       	ldd	r25, Y+29	; 0x1d
    29de:	20 e0       	ldi	r18, 0x00	; 0
    29e0:	30 e0       	ldi	r19, 0x00	; 0
    29e2:	4a ef       	ldi	r20, 0xFA	; 250
    29e4:	54 e4       	ldi	r21, 0x44	; 68
    29e6:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    29ea:	dc 01       	movw	r26, r24
    29ec:	cb 01       	movw	r24, r22
    29ee:	8e 8b       	std	Y+22, r24	; 0x16
    29f0:	9f 8b       	std	Y+23, r25	; 0x17
    29f2:	a8 8f       	std	Y+24, r26	; 0x18
    29f4:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    29f6:	6e 89       	ldd	r22, Y+22	; 0x16
    29f8:	7f 89       	ldd	r23, Y+23	; 0x17
    29fa:	88 8d       	ldd	r24, Y+24	; 0x18
    29fc:	99 8d       	ldd	r25, Y+25	; 0x19
    29fe:	20 e0       	ldi	r18, 0x00	; 0
    2a00:	30 e0       	ldi	r19, 0x00	; 0
    2a02:	40 e8       	ldi	r20, 0x80	; 128
    2a04:	5f e3       	ldi	r21, 0x3F	; 63
    2a06:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    2a0a:	88 23       	and	r24, r24
    2a0c:	2c f4       	brge	.+10     	; 0x2a18 <main+0x29e>
		__ticks = 1;
    2a0e:	81 e0       	ldi	r24, 0x01	; 1
    2a10:	90 e0       	ldi	r25, 0x00	; 0
    2a12:	9d 8b       	std	Y+21, r25	; 0x15
    2a14:	8c 8b       	std	Y+20, r24	; 0x14
    2a16:	3f c0       	rjmp	.+126    	; 0x2a96 <main+0x31c>
	else if (__tmp > 65535)
    2a18:	6e 89       	ldd	r22, Y+22	; 0x16
    2a1a:	7f 89       	ldd	r23, Y+23	; 0x17
    2a1c:	88 8d       	ldd	r24, Y+24	; 0x18
    2a1e:	99 8d       	ldd	r25, Y+25	; 0x19
    2a20:	20 e0       	ldi	r18, 0x00	; 0
    2a22:	3f ef       	ldi	r19, 0xFF	; 255
    2a24:	4f e7       	ldi	r20, 0x7F	; 127
    2a26:	57 e4       	ldi	r21, 0x47	; 71
    2a28:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    2a2c:	18 16       	cp	r1, r24
    2a2e:	4c f5       	brge	.+82     	; 0x2a82 <main+0x308>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a30:	6a 8d       	ldd	r22, Y+26	; 0x1a
    2a32:	7b 8d       	ldd	r23, Y+27	; 0x1b
    2a34:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a36:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2a38:	20 e0       	ldi	r18, 0x00	; 0
    2a3a:	30 e0       	ldi	r19, 0x00	; 0
    2a3c:	40 e2       	ldi	r20, 0x20	; 32
    2a3e:	51 e4       	ldi	r21, 0x41	; 65
    2a40:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    2a44:	dc 01       	movw	r26, r24
    2a46:	cb 01       	movw	r24, r22
    2a48:	bc 01       	movw	r22, r24
    2a4a:	cd 01       	movw	r24, r26
    2a4c:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2a50:	dc 01       	movw	r26, r24
    2a52:	cb 01       	movw	r24, r22
    2a54:	9d 8b       	std	Y+21, r25	; 0x15
    2a56:	8c 8b       	std	Y+20, r24	; 0x14
    2a58:	0f c0       	rjmp	.+30     	; 0x2a78 <main+0x2fe>
    2a5a:	88 ec       	ldi	r24, 0xC8	; 200
    2a5c:	90 e0       	ldi	r25, 0x00	; 0
    2a5e:	9b 8b       	std	Y+19, r25	; 0x13
    2a60:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2a62:	8a 89       	ldd	r24, Y+18	; 0x12
    2a64:	9b 89       	ldd	r25, Y+19	; 0x13
    2a66:	01 97       	sbiw	r24, 0x01	; 1
    2a68:	f1 f7       	brne	.-4      	; 0x2a66 <main+0x2ec>
    2a6a:	9b 8b       	std	Y+19, r25	; 0x13
    2a6c:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a6e:	8c 89       	ldd	r24, Y+20	; 0x14
    2a70:	9d 89       	ldd	r25, Y+21	; 0x15
    2a72:	01 97       	sbiw	r24, 0x01	; 1
    2a74:	9d 8b       	std	Y+21, r25	; 0x15
    2a76:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a78:	8c 89       	ldd	r24, Y+20	; 0x14
    2a7a:	9d 89       	ldd	r25, Y+21	; 0x15
    2a7c:	00 97       	sbiw	r24, 0x00	; 0
    2a7e:	69 f7       	brne	.-38     	; 0x2a5a <main+0x2e0>
    2a80:	24 c0       	rjmp	.+72     	; 0x2aca <main+0x350>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a82:	6e 89       	ldd	r22, Y+22	; 0x16
    2a84:	7f 89       	ldd	r23, Y+23	; 0x17
    2a86:	88 8d       	ldd	r24, Y+24	; 0x18
    2a88:	99 8d       	ldd	r25, Y+25	; 0x19
    2a8a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2a8e:	dc 01       	movw	r26, r24
    2a90:	cb 01       	movw	r24, r22
    2a92:	9d 8b       	std	Y+21, r25	; 0x15
    2a94:	8c 8b       	std	Y+20, r24	; 0x14
    2a96:	8c 89       	ldd	r24, Y+20	; 0x14
    2a98:	9d 89       	ldd	r25, Y+21	; 0x15
    2a9a:	99 8b       	std	Y+17, r25	; 0x11
    2a9c:	88 8b       	std	Y+16, r24	; 0x10
    2a9e:	88 89       	ldd	r24, Y+16	; 0x10
    2aa0:	99 89       	ldd	r25, Y+17	; 0x11
    2aa2:	01 97       	sbiw	r24, 0x01	; 1
    2aa4:	f1 f7       	brne	.-4      	; 0x2aa2 <main+0x328>
    2aa6:	99 8b       	std	Y+17, r25	; 0x11
    2aa8:	88 8b       	std	Y+16, r24	; 0x10
    2aaa:	0f c0       	rjmp	.+30     	; 0x2aca <main+0x350>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2aac:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2aae:	78 a1       	ldd	r23, Y+32	; 0x20
    2ab0:	89 a1       	ldd	r24, Y+33	; 0x21
    2ab2:	9a a1       	ldd	r25, Y+34	; 0x22
    2ab4:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2ab8:	dc 01       	movw	r26, r24
    2aba:	cb 01       	movw	r24, r22
    2abc:	8e 8f       	std	Y+30, r24	; 0x1e
    2abe:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2ac0:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2ac2:	8f 85       	ldd	r24, Y+15	; 0x0f
    2ac4:	8a 95       	dec	r24
    2ac6:	f1 f7       	brne	.-4      	; 0x2ac4 <main+0x34a>
    2ac8:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_us(10);
		DIO_VidSetPinValue(PORTA,PIN0,LOW);
    2aca:	80 e0       	ldi	r24, 0x00	; 0
    2acc:	60 e0       	ldi	r22, 0x00	; 0
    2ace:	40 e0       	ldi	r20, 0x00	; 0
    2ad0:	0e 94 79 08 	call	0x10f2	; 0x10f2 <DIO_VidSetPinValue>

		if(3==flag)
    2ad4:	80 91 82 01 	lds	r24, 0x0182
    2ad8:	83 30       	cpi	r24, 0x03	; 3
    2ada:	09 f0       	breq	.+2      	; 0x2ade <main+0x364>
    2adc:	6b ce       	rjmp	.-810    	; 0x27b4 <main+0x3a>
		{
			LCD_VidClear();
    2ade:	0e 94 03 12 	call	0x2406	; 0x2406 <LCD_VidClear>
			LCD_VidSetPosition(0,0);
    2ae2:	80 e0       	ldi	r24, 0x00	; 0
    2ae4:	60 e0       	ldi	r22, 0x00	; 0
    2ae6:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <LCD_VidSetPosition>
			LCD_VidSendString("Ultrasonic");
    2aea:	80 e6       	ldi	r24, 0x60	; 96
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <LCD_VidSendString>
			LCD_VidSetPosition(1,0);
    2af2:	81 e0       	ldi	r24, 0x01	; 1
    2af4:	60 e0       	ldi	r22, 0x00	; 0
    2af6:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <LCD_VidSetPosition>

			dtostrf(distance, 2, 2, string);/* distance to string */
    2afa:	80 91 83 01 	lds	r24, 0x0183
    2afe:	90 91 84 01 	lds	r25, 0x0184
    2b02:	a0 91 85 01 	lds	r26, 0x0185
    2b06:	b0 91 86 01 	lds	r27, 0x0186
    2b0a:	fe 01       	movw	r30, r28
    2b0c:	ff 96       	adiw	r30, 0x3f	; 63
    2b0e:	bc 01       	movw	r22, r24
    2b10:	cd 01       	movw	r24, r26
    2b12:	42 e0       	ldi	r20, 0x02	; 2
    2b14:	22 e0       	ldi	r18, 0x02	; 2
    2b16:	8f 01       	movw	r16, r30
    2b18:	0e 94 66 16 	call	0x2ccc	; 0x2ccc <dtostrf>
			strcat(string, " cm   ");	/* Concat unit i.e.cm */
    2b1c:	8e 01       	movw	r16, r28
    2b1e:	01 5c       	subi	r16, 0xC1	; 193
    2b20:	1f 4f       	sbci	r17, 0xFF	; 255
    2b22:	ce 01       	movw	r24, r28
    2b24:	cf 96       	adiw	r24, 0x3f	; 63
    2b26:	0e 94 90 16 	call	0x2d20	; 0x2d20 <strlen>
    2b2a:	80 0f       	add	r24, r16
    2b2c:	91 1f       	adc	r25, r17
    2b2e:	2b e6       	ldi	r18, 0x6B	; 107
    2b30:	30 e0       	ldi	r19, 0x00	; 0
    2b32:	b9 01       	movw	r22, r18
    2b34:	47 e0       	ldi	r20, 0x07	; 7
    2b36:	50 e0       	ldi	r21, 0x00	; 0
    2b38:	0e 94 87 16 	call	0x2d0e	; 0x2d0e <memcpy>
			LCD_VidSendString("Dist=");
    2b3c:	82 e7       	ldi	r24, 0x72	; 114
    2b3e:	90 e0       	ldi	r25, 0x00	; 0
    2b40:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <LCD_VidSendString>
			LCD_VidSendString(string);
    2b44:	ce 01       	movw	r24, r28
    2b46:	cf 96       	adiw	r24, 0x3f	; 63
    2b48:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <LCD_VidSendString>
    2b4c:	80 e0       	ldi	r24, 0x00	; 0
    2b4e:	90 e0       	ldi	r25, 0x00	; 0
    2b50:	a8 e4       	ldi	r26, 0x48	; 72
    2b52:	b3 e4       	ldi	r27, 0x43	; 67
    2b54:	8b 87       	std	Y+11, r24	; 0x0b
    2b56:	9c 87       	std	Y+12, r25	; 0x0c
    2b58:	ad 87       	std	Y+13, r26	; 0x0d
    2b5a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b5c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b5e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b60:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b62:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b64:	20 e0       	ldi	r18, 0x00	; 0
    2b66:	30 e0       	ldi	r19, 0x00	; 0
    2b68:	4a ef       	ldi	r20, 0xFA	; 250
    2b6a:	54 e4       	ldi	r21, 0x44	; 68
    2b6c:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    2b70:	dc 01       	movw	r26, r24
    2b72:	cb 01       	movw	r24, r22
    2b74:	8f 83       	std	Y+7, r24	; 0x07
    2b76:	98 87       	std	Y+8, r25	; 0x08
    2b78:	a9 87       	std	Y+9, r26	; 0x09
    2b7a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2b7c:	6f 81       	ldd	r22, Y+7	; 0x07
    2b7e:	78 85       	ldd	r23, Y+8	; 0x08
    2b80:	89 85       	ldd	r24, Y+9	; 0x09
    2b82:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b84:	20 e0       	ldi	r18, 0x00	; 0
    2b86:	30 e0       	ldi	r19, 0x00	; 0
    2b88:	40 e8       	ldi	r20, 0x80	; 128
    2b8a:	5f e3       	ldi	r21, 0x3F	; 63
    2b8c:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    2b90:	88 23       	and	r24, r24
    2b92:	2c f4       	brge	.+10     	; 0x2b9e <main+0x424>
		__ticks = 1;
    2b94:	81 e0       	ldi	r24, 0x01	; 1
    2b96:	90 e0       	ldi	r25, 0x00	; 0
    2b98:	9e 83       	std	Y+6, r25	; 0x06
    2b9a:	8d 83       	std	Y+5, r24	; 0x05
    2b9c:	3f c0       	rjmp	.+126    	; 0x2c1c <main+0x4a2>
	else if (__tmp > 65535)
    2b9e:	6f 81       	ldd	r22, Y+7	; 0x07
    2ba0:	78 85       	ldd	r23, Y+8	; 0x08
    2ba2:	89 85       	ldd	r24, Y+9	; 0x09
    2ba4:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ba6:	20 e0       	ldi	r18, 0x00	; 0
    2ba8:	3f ef       	ldi	r19, 0xFF	; 255
    2baa:	4f e7       	ldi	r20, 0x7F	; 127
    2bac:	57 e4       	ldi	r21, 0x47	; 71
    2bae:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    2bb2:	18 16       	cp	r1, r24
    2bb4:	4c f5       	brge	.+82     	; 0x2c08 <main+0x48e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bb6:	6b 85       	ldd	r22, Y+11	; 0x0b
    2bb8:	7c 85       	ldd	r23, Y+12	; 0x0c
    2bba:	8d 85       	ldd	r24, Y+13	; 0x0d
    2bbc:	9e 85       	ldd	r25, Y+14	; 0x0e
    2bbe:	20 e0       	ldi	r18, 0x00	; 0
    2bc0:	30 e0       	ldi	r19, 0x00	; 0
    2bc2:	40 e2       	ldi	r20, 0x20	; 32
    2bc4:	51 e4       	ldi	r21, 0x41	; 65
    2bc6:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    2bca:	dc 01       	movw	r26, r24
    2bcc:	cb 01       	movw	r24, r22
    2bce:	bc 01       	movw	r22, r24
    2bd0:	cd 01       	movw	r24, r26
    2bd2:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2bd6:	dc 01       	movw	r26, r24
    2bd8:	cb 01       	movw	r24, r22
    2bda:	9e 83       	std	Y+6, r25	; 0x06
    2bdc:	8d 83       	std	Y+5, r24	; 0x05
    2bde:	0f c0       	rjmp	.+30     	; 0x2bfe <main+0x484>
    2be0:	88 ec       	ldi	r24, 0xC8	; 200
    2be2:	90 e0       	ldi	r25, 0x00	; 0
    2be4:	9c 83       	std	Y+4, r25	; 0x04
    2be6:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2be8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bea:	9c 81       	ldd	r25, Y+4	; 0x04
    2bec:	01 97       	sbiw	r24, 0x01	; 1
    2bee:	f1 f7       	brne	.-4      	; 0x2bec <main+0x472>
    2bf0:	9c 83       	std	Y+4, r25	; 0x04
    2bf2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bf4:	8d 81       	ldd	r24, Y+5	; 0x05
    2bf6:	9e 81       	ldd	r25, Y+6	; 0x06
    2bf8:	01 97       	sbiw	r24, 0x01	; 1
    2bfa:	9e 83       	std	Y+6, r25	; 0x06
    2bfc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bfe:	8d 81       	ldd	r24, Y+5	; 0x05
    2c00:	9e 81       	ldd	r25, Y+6	; 0x06
    2c02:	00 97       	sbiw	r24, 0x00	; 0
    2c04:	69 f7       	brne	.-38     	; 0x2be0 <main+0x466>
    2c06:	14 c0       	rjmp	.+40     	; 0x2c30 <main+0x4b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c08:	6f 81       	ldd	r22, Y+7	; 0x07
    2c0a:	78 85       	ldd	r23, Y+8	; 0x08
    2c0c:	89 85       	ldd	r24, Y+9	; 0x09
    2c0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c10:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2c14:	dc 01       	movw	r26, r24
    2c16:	cb 01       	movw	r24, r22
    2c18:	9e 83       	std	Y+6, r25	; 0x06
    2c1a:	8d 83       	std	Y+5, r24	; 0x05
    2c1c:	8d 81       	ldd	r24, Y+5	; 0x05
    2c1e:	9e 81       	ldd	r25, Y+6	; 0x06
    2c20:	9a 83       	std	Y+2, r25	; 0x02
    2c22:	89 83       	std	Y+1, r24	; 0x01
    2c24:	89 81       	ldd	r24, Y+1	; 0x01
    2c26:	9a 81       	ldd	r25, Y+2	; 0x02
    2c28:	01 97       	sbiw	r24, 0x01	; 1
    2c2a:	f1 f7       	brne	.-4      	; 0x2c28 <main+0x4ae>
    2c2c:	9a 83       	std	Y+2, r25	; 0x02
    2c2e:	89 83       	std	Y+1, r24	; 0x01

			_delay_ms(200);
			flag = 0;
    2c30:	10 92 82 01 	sts	0x0182, r1
    2c34:	bf cd       	rjmp	.-1154   	; 0x27b4 <main+0x3a>

00002c36 <__udivmodhi4>:
    2c36:	aa 1b       	sub	r26, r26
    2c38:	bb 1b       	sub	r27, r27
    2c3a:	51 e1       	ldi	r21, 0x11	; 17
    2c3c:	07 c0       	rjmp	.+14     	; 0x2c4c <__udivmodhi4_ep>

00002c3e <__udivmodhi4_loop>:
    2c3e:	aa 1f       	adc	r26, r26
    2c40:	bb 1f       	adc	r27, r27
    2c42:	a6 17       	cp	r26, r22
    2c44:	b7 07       	cpc	r27, r23
    2c46:	10 f0       	brcs	.+4      	; 0x2c4c <__udivmodhi4_ep>
    2c48:	a6 1b       	sub	r26, r22
    2c4a:	b7 0b       	sbc	r27, r23

00002c4c <__udivmodhi4_ep>:
    2c4c:	88 1f       	adc	r24, r24
    2c4e:	99 1f       	adc	r25, r25
    2c50:	5a 95       	dec	r21
    2c52:	a9 f7       	brne	.-22     	; 0x2c3e <__udivmodhi4_loop>
    2c54:	80 95       	com	r24
    2c56:	90 95       	com	r25
    2c58:	bc 01       	movw	r22, r24
    2c5a:	cd 01       	movw	r24, r26
    2c5c:	08 95       	ret

00002c5e <__prologue_saves__>:
    2c5e:	2f 92       	push	r2
    2c60:	3f 92       	push	r3
    2c62:	4f 92       	push	r4
    2c64:	5f 92       	push	r5
    2c66:	6f 92       	push	r6
    2c68:	7f 92       	push	r7
    2c6a:	8f 92       	push	r8
    2c6c:	9f 92       	push	r9
    2c6e:	af 92       	push	r10
    2c70:	bf 92       	push	r11
    2c72:	cf 92       	push	r12
    2c74:	df 92       	push	r13
    2c76:	ef 92       	push	r14
    2c78:	ff 92       	push	r15
    2c7a:	0f 93       	push	r16
    2c7c:	1f 93       	push	r17
    2c7e:	cf 93       	push	r28
    2c80:	df 93       	push	r29
    2c82:	cd b7       	in	r28, 0x3d	; 61
    2c84:	de b7       	in	r29, 0x3e	; 62
    2c86:	ca 1b       	sub	r28, r26
    2c88:	db 0b       	sbc	r29, r27
    2c8a:	0f b6       	in	r0, 0x3f	; 63
    2c8c:	f8 94       	cli
    2c8e:	de bf       	out	0x3e, r29	; 62
    2c90:	0f be       	out	0x3f, r0	; 63
    2c92:	cd bf       	out	0x3d, r28	; 61
    2c94:	09 94       	ijmp

00002c96 <__epilogue_restores__>:
    2c96:	2a 88       	ldd	r2, Y+18	; 0x12
    2c98:	39 88       	ldd	r3, Y+17	; 0x11
    2c9a:	48 88       	ldd	r4, Y+16	; 0x10
    2c9c:	5f 84       	ldd	r5, Y+15	; 0x0f
    2c9e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2ca0:	7d 84       	ldd	r7, Y+13	; 0x0d
    2ca2:	8c 84       	ldd	r8, Y+12	; 0x0c
    2ca4:	9b 84       	ldd	r9, Y+11	; 0x0b
    2ca6:	aa 84       	ldd	r10, Y+10	; 0x0a
    2ca8:	b9 84       	ldd	r11, Y+9	; 0x09
    2caa:	c8 84       	ldd	r12, Y+8	; 0x08
    2cac:	df 80       	ldd	r13, Y+7	; 0x07
    2cae:	ee 80       	ldd	r14, Y+6	; 0x06
    2cb0:	fd 80       	ldd	r15, Y+5	; 0x05
    2cb2:	0c 81       	ldd	r16, Y+4	; 0x04
    2cb4:	1b 81       	ldd	r17, Y+3	; 0x03
    2cb6:	aa 81       	ldd	r26, Y+2	; 0x02
    2cb8:	b9 81       	ldd	r27, Y+1	; 0x01
    2cba:	ce 0f       	add	r28, r30
    2cbc:	d1 1d       	adc	r29, r1
    2cbe:	0f b6       	in	r0, 0x3f	; 63
    2cc0:	f8 94       	cli
    2cc2:	de bf       	out	0x3e, r29	; 62
    2cc4:	0f be       	out	0x3f, r0	; 63
    2cc6:	cd bf       	out	0x3d, r28	; 61
    2cc8:	ed 01       	movw	r28, r26
    2cca:	08 95       	ret

00002ccc <dtostrf>:
    2ccc:	ef 92       	push	r14
    2cce:	ff 92       	push	r15
    2cd0:	0f 93       	push	r16
    2cd2:	1f 93       	push	r17
    2cd4:	f2 2f       	mov	r31, r18
    2cd6:	f0 2e       	mov	r15, r16
    2cd8:	47 fd       	sbrc	r20, 7
    2cda:	02 c0       	rjmp	.+4      	; 0x2ce0 <dtostrf+0x14>
    2cdc:	e4 e0       	ldi	r30, 0x04	; 4
    2cde:	01 c0       	rjmp	.+2      	; 0x2ce2 <dtostrf+0x16>
    2ce0:	e4 e1       	ldi	r30, 0x14	; 20
    2ce2:	24 2f       	mov	r18, r20
    2ce4:	33 27       	eor	r19, r19
    2ce6:	27 fd       	sbrc	r18, 7
    2ce8:	30 95       	com	r19
    2cea:	37 ff       	sbrs	r19, 7
    2cec:	03 c0       	rjmp	.+6      	; 0x2cf4 <dtostrf+0x28>
    2cee:	30 95       	com	r19
    2cf0:	21 95       	neg	r18
    2cf2:	3f 4f       	sbci	r19, 0xFF	; 255
    2cf4:	4f 2d       	mov	r20, r15
    2cf6:	51 2f       	mov	r21, r17
    2cf8:	0f 2f       	mov	r16, r31
    2cfa:	ee 2e       	mov	r14, r30
    2cfc:	0e 94 99 16 	call	0x2d32	; 0x2d32 <dtoa_prf>
    2d00:	8f 2d       	mov	r24, r15
    2d02:	91 2f       	mov	r25, r17
    2d04:	1f 91       	pop	r17
    2d06:	0f 91       	pop	r16
    2d08:	ff 90       	pop	r15
    2d0a:	ef 90       	pop	r14
    2d0c:	08 95       	ret

00002d0e <memcpy>:
    2d0e:	fb 01       	movw	r30, r22
    2d10:	dc 01       	movw	r26, r24
    2d12:	02 c0       	rjmp	.+4      	; 0x2d18 <memcpy+0xa>
    2d14:	01 90       	ld	r0, Z+
    2d16:	0d 92       	st	X+, r0
    2d18:	41 50       	subi	r20, 0x01	; 1
    2d1a:	50 40       	sbci	r21, 0x00	; 0
    2d1c:	d8 f7       	brcc	.-10     	; 0x2d14 <memcpy+0x6>
    2d1e:	08 95       	ret

00002d20 <strlen>:
    2d20:	fc 01       	movw	r30, r24
    2d22:	01 90       	ld	r0, Z+
    2d24:	00 20       	and	r0, r0
    2d26:	e9 f7       	brne	.-6      	; 0x2d22 <strlen+0x2>
    2d28:	80 95       	com	r24
    2d2a:	90 95       	com	r25
    2d2c:	8e 0f       	add	r24, r30
    2d2e:	9f 1f       	adc	r25, r31
    2d30:	08 95       	ret

00002d32 <dtoa_prf>:
    2d32:	a9 e0       	ldi	r26, 0x09	; 9
    2d34:	b0 e0       	ldi	r27, 0x00	; 0
    2d36:	ef e9       	ldi	r30, 0x9F	; 159
    2d38:	f6 e1       	ldi	r31, 0x16	; 22
    2d3a:	0c 94 33 16 	jmp	0x2c66	; 0x2c66 <__prologue_saves__+0x8>
    2d3e:	6a 01       	movw	r12, r20
    2d40:	12 2f       	mov	r17, r18
    2d42:	a0 2e       	mov	r10, r16
    2d44:	be 2c       	mov	r11, r14
    2d46:	2b e3       	ldi	r18, 0x3B	; 59
    2d48:	20 17       	cp	r18, r16
    2d4a:	18 f4       	brcc	.+6      	; 0x2d52 <dtoa_prf+0x20>
    2d4c:	2c e3       	ldi	r18, 0x3C	; 60
    2d4e:	92 2e       	mov	r9, r18
    2d50:	02 c0       	rjmp	.+4      	; 0x2d56 <dtoa_prf+0x24>
    2d52:	90 2e       	mov	r9, r16
    2d54:	93 94       	inc	r9
    2d56:	ae 01       	movw	r20, r28
    2d58:	4f 5f       	subi	r20, 0xFF	; 255
    2d5a:	5f 4f       	sbci	r21, 0xFF	; 255
    2d5c:	27 e0       	ldi	r18, 0x07	; 7
    2d5e:	09 2d       	mov	r16, r9
    2d60:	0e 94 fb 17 	call	0x2ff6	; 0x2ff6 <__ftoa_engine>
    2d64:	bc 01       	movw	r22, r24
    2d66:	89 81       	ldd	r24, Y+1	; 0x01
    2d68:	e8 2e       	mov	r14, r24
    2d6a:	ff 24       	eor	r15, r15
    2d6c:	c7 01       	movw	r24, r14
    2d6e:	89 70       	andi	r24, 0x09	; 9
    2d70:	90 70       	andi	r25, 0x00	; 0
    2d72:	01 97       	sbiw	r24, 0x01	; 1
    2d74:	11 f4       	brne	.+4      	; 0x2d7a <dtoa_prf+0x48>
    2d76:	ad e2       	ldi	r26, 0x2D	; 45
    2d78:	09 c0       	rjmp	.+18     	; 0x2d8c <dtoa_prf+0x5a>
    2d7a:	b1 fe       	sbrs	r11, 1
    2d7c:	02 c0       	rjmp	.+4      	; 0x2d82 <dtoa_prf+0x50>
    2d7e:	ab e2       	ldi	r26, 0x2B	; 43
    2d80:	05 c0       	rjmp	.+10     	; 0x2d8c <dtoa_prf+0x5a>
    2d82:	b0 fc       	sbrc	r11, 0
    2d84:	02 c0       	rjmp	.+4      	; 0x2d8a <dtoa_prf+0x58>
    2d86:	a0 e0       	ldi	r26, 0x00	; 0
    2d88:	01 c0       	rjmp	.+2      	; 0x2d8c <dtoa_prf+0x5a>
    2d8a:	a0 e2       	ldi	r26, 0x20	; 32
    2d8c:	e3 fe       	sbrs	r14, 3
    2d8e:	3b c0       	rjmp	.+118    	; 0x2e06 <dtoa_prf+0xd4>
    2d90:	aa 23       	and	r26, r26
    2d92:	11 f4       	brne	.+4      	; 0x2d98 <dtoa_prf+0x66>
    2d94:	23 e0       	ldi	r18, 0x03	; 3
    2d96:	01 c0       	rjmp	.+2      	; 0x2d9a <dtoa_prf+0x68>
    2d98:	24 e0       	ldi	r18, 0x04	; 4
    2d9a:	21 17       	cp	r18, r17
    2d9c:	10 f0       	brcs	.+4      	; 0x2da2 <dtoa_prf+0x70>
    2d9e:	20 e0       	ldi	r18, 0x00	; 0
    2da0:	02 c0       	rjmp	.+4      	; 0x2da6 <dtoa_prf+0x74>
    2da2:	12 1b       	sub	r17, r18
    2da4:	21 2f       	mov	r18, r17
    2da6:	eb 2c       	mov	r14, r11
    2da8:	b4 fe       	sbrs	r11, 4
    2daa:	02 c0       	rjmp	.+4      	; 0x2db0 <dtoa_prf+0x7e>
    2dac:	32 2f       	mov	r19, r18
    2dae:	0a c0       	rjmp	.+20     	; 0x2dc4 <dtoa_prf+0x92>
    2db0:	f6 01       	movw	r30, r12
    2db2:	32 2f       	mov	r19, r18
    2db4:	80 e2       	ldi	r24, 0x20	; 32
    2db6:	02 c0       	rjmp	.+4      	; 0x2dbc <dtoa_prf+0x8a>
    2db8:	81 93       	st	Z+, r24
    2dba:	31 50       	subi	r19, 0x01	; 1
    2dbc:	33 23       	and	r19, r19
    2dbe:	e1 f7       	brne	.-8      	; 0x2db8 <dtoa_prf+0x86>
    2dc0:	c2 0e       	add	r12, r18
    2dc2:	d1 1c       	adc	r13, r1
    2dc4:	aa 23       	and	r26, r26
    2dc6:	19 f0       	breq	.+6      	; 0x2dce <dtoa_prf+0x9c>
    2dc8:	f6 01       	movw	r30, r12
    2dca:	a1 93       	st	Z+, r26
    2dcc:	6f 01       	movw	r12, r30
    2dce:	f6 01       	movw	r30, r12
    2dd0:	31 96       	adiw	r30, 0x01	; 1
    2dd2:	e2 fe       	sbrs	r14, 2
    2dd4:	05 c0       	rjmp	.+10     	; 0x2de0 <dtoa_prf+0xae>
    2dd6:	9e e4       	ldi	r25, 0x4E	; 78
    2dd8:	d6 01       	movw	r26, r12
    2dda:	9c 93       	st	X, r25
    2ddc:	81 e4       	ldi	r24, 0x41	; 65
    2dde:	04 c0       	rjmp	.+8      	; 0x2de8 <dtoa_prf+0xb6>
    2de0:	9e e6       	ldi	r25, 0x6E	; 110
    2de2:	d6 01       	movw	r26, r12
    2de4:	9c 93       	st	X, r25
    2de6:	81 e6       	ldi	r24, 0x61	; 97
    2de8:	11 96       	adiw	r26, 0x01	; 1
    2dea:	8c 93       	st	X, r24
    2dec:	91 83       	std	Z+1, r25	; 0x01
    2dee:	32 96       	adiw	r30, 0x02	; 2
    2df0:	df 01       	movw	r26, r30
    2df2:	83 2f       	mov	r24, r19
    2df4:	90 e2       	ldi	r25, 0x20	; 32
    2df6:	02 c0       	rjmp	.+4      	; 0x2dfc <dtoa_prf+0xca>
    2df8:	9d 93       	st	X+, r25
    2dfa:	81 50       	subi	r24, 0x01	; 1
    2dfc:	88 23       	and	r24, r24
    2dfe:	e1 f7       	brne	.-8      	; 0x2df8 <dtoa_prf+0xc6>
    2e00:	e3 0f       	add	r30, r19
    2e02:	f1 1d       	adc	r31, r1
    2e04:	40 c0       	rjmp	.+128    	; 0x2e86 <dtoa_prf+0x154>
    2e06:	e2 fe       	sbrs	r14, 2
    2e08:	42 c0       	rjmp	.+132    	; 0x2e8e <dtoa_prf+0x15c>
    2e0a:	aa 23       	and	r26, r26
    2e0c:	11 f4       	brne	.+4      	; 0x2e12 <dtoa_prf+0xe0>
    2e0e:	23 e0       	ldi	r18, 0x03	; 3
    2e10:	01 c0       	rjmp	.+2      	; 0x2e14 <dtoa_prf+0xe2>
    2e12:	24 e0       	ldi	r18, 0x04	; 4
    2e14:	21 17       	cp	r18, r17
    2e16:	10 f0       	brcs	.+4      	; 0x2e1c <dtoa_prf+0xea>
    2e18:	20 e0       	ldi	r18, 0x00	; 0
    2e1a:	02 c0       	rjmp	.+4      	; 0x2e20 <dtoa_prf+0xee>
    2e1c:	12 1b       	sub	r17, r18
    2e1e:	21 2f       	mov	r18, r17
    2e20:	eb 2c       	mov	r14, r11
    2e22:	b4 fe       	sbrs	r11, 4
    2e24:	02 c0       	rjmp	.+4      	; 0x2e2a <dtoa_prf+0xf8>
    2e26:	92 2f       	mov	r25, r18
    2e28:	0a c0       	rjmp	.+20     	; 0x2e3e <dtoa_prf+0x10c>
    2e2a:	f6 01       	movw	r30, r12
    2e2c:	92 2f       	mov	r25, r18
    2e2e:	80 e2       	ldi	r24, 0x20	; 32
    2e30:	02 c0       	rjmp	.+4      	; 0x2e36 <dtoa_prf+0x104>
    2e32:	81 93       	st	Z+, r24
    2e34:	91 50       	subi	r25, 0x01	; 1
    2e36:	99 23       	and	r25, r25
    2e38:	e1 f7       	brne	.-8      	; 0x2e32 <dtoa_prf+0x100>
    2e3a:	c2 0e       	add	r12, r18
    2e3c:	d1 1c       	adc	r13, r1
    2e3e:	aa 23       	and	r26, r26
    2e40:	19 f0       	breq	.+6      	; 0x2e48 <dtoa_prf+0x116>
    2e42:	f6 01       	movw	r30, r12
    2e44:	a1 93       	st	Z+, r26
    2e46:	6f 01       	movw	r12, r30
    2e48:	f6 01       	movw	r30, r12
    2e4a:	31 96       	adiw	r30, 0x01	; 1
    2e4c:	e2 fe       	sbrs	r14, 2
    2e4e:	08 c0       	rjmp	.+16     	; 0x2e60 <dtoa_prf+0x12e>
    2e50:	89 e4       	ldi	r24, 0x49	; 73
    2e52:	d6 01       	movw	r26, r12
    2e54:	8c 93       	st	X, r24
    2e56:	8e e4       	ldi	r24, 0x4E	; 78
    2e58:	11 96       	adiw	r26, 0x01	; 1
    2e5a:	8c 93       	st	X, r24
    2e5c:	86 e4       	ldi	r24, 0x46	; 70
    2e5e:	07 c0       	rjmp	.+14     	; 0x2e6e <dtoa_prf+0x13c>
    2e60:	89 e6       	ldi	r24, 0x69	; 105
    2e62:	d6 01       	movw	r26, r12
    2e64:	8c 93       	st	X, r24
    2e66:	8e e6       	ldi	r24, 0x6E	; 110
    2e68:	11 96       	adiw	r26, 0x01	; 1
    2e6a:	8c 93       	st	X, r24
    2e6c:	86 e6       	ldi	r24, 0x66	; 102
    2e6e:	81 83       	std	Z+1, r24	; 0x01
    2e70:	32 96       	adiw	r30, 0x02	; 2
    2e72:	df 01       	movw	r26, r30
    2e74:	89 2f       	mov	r24, r25
    2e76:	20 e2       	ldi	r18, 0x20	; 32
    2e78:	02 c0       	rjmp	.+4      	; 0x2e7e <dtoa_prf+0x14c>
    2e7a:	2d 93       	st	X+, r18
    2e7c:	81 50       	subi	r24, 0x01	; 1
    2e7e:	88 23       	and	r24, r24
    2e80:	e1 f7       	brne	.-8      	; 0x2e7a <dtoa_prf+0x148>
    2e82:	e9 0f       	add	r30, r25
    2e84:	f1 1d       	adc	r31, r1
    2e86:	10 82       	st	Z, r1
    2e88:	2e ef       	ldi	r18, 0xFE	; 254
    2e8a:	3f ef       	ldi	r19, 0xFF	; 255
    2e8c:	af c0       	rjmp	.+350    	; 0x2fec <dtoa_prf+0x2ba>
    2e8e:	16 16       	cp	r1, r22
    2e90:	17 06       	cpc	r1, r23
    2e92:	1c f0       	brlt	.+6      	; 0x2e9a <dtoa_prf+0x168>
    2e94:	41 e0       	ldi	r20, 0x01	; 1
    2e96:	50 e0       	ldi	r21, 0x00	; 0
    2e98:	03 c0       	rjmp	.+6      	; 0x2ea0 <dtoa_prf+0x16e>
    2e9a:	ab 01       	movw	r20, r22
    2e9c:	4f 5f       	subi	r20, 0xFF	; 255
    2e9e:	5f 4f       	sbci	r21, 0xFF	; 255
    2ea0:	aa 20       	and	r10, r10
    2ea2:	19 f4       	brne	.+6      	; 0x2eaa <dtoa_prf+0x178>
    2ea4:	80 e0       	ldi	r24, 0x00	; 0
    2ea6:	90 e0       	ldi	r25, 0x00	; 0
    2ea8:	03 c0       	rjmp	.+6      	; 0x2eb0 <dtoa_prf+0x17e>
    2eaa:	8a 2d       	mov	r24, r10
    2eac:	90 e0       	ldi	r25, 0x00	; 0
    2eae:	01 96       	adiw	r24, 0x01	; 1
    2eb0:	20 e0       	ldi	r18, 0x00	; 0
    2eb2:	30 e0       	ldi	r19, 0x00	; 0
    2eb4:	aa 23       	and	r26, r26
    2eb6:	11 f0       	breq	.+4      	; 0x2ebc <dtoa_prf+0x18a>
    2eb8:	21 e0       	ldi	r18, 0x01	; 1
    2eba:	30 e0       	ldi	r19, 0x00	; 0
    2ebc:	24 0f       	add	r18, r20
    2ebe:	35 1f       	adc	r19, r21
    2ec0:	28 0f       	add	r18, r24
    2ec2:	39 1f       	adc	r19, r25
    2ec4:	81 2f       	mov	r24, r17
    2ec6:	90 e0       	ldi	r25, 0x00	; 0
    2ec8:	28 17       	cp	r18, r24
    2eca:	39 07       	cpc	r19, r25
    2ecc:	14 f0       	brlt	.+4      	; 0x2ed2 <dtoa_prf+0x1a0>
    2ece:	20 e0       	ldi	r18, 0x00	; 0
    2ed0:	02 c0       	rjmp	.+4      	; 0x2ed6 <dtoa_prf+0x1a4>
    2ed2:	12 1b       	sub	r17, r18
    2ed4:	21 2f       	mov	r18, r17
    2ed6:	4b 2d       	mov	r20, r11
    2ed8:	50 e0       	ldi	r21, 0x00	; 0
    2eda:	ca 01       	movw	r24, r20
    2edc:	80 71       	andi	r24, 0x10	; 16
    2ede:	90 70       	andi	r25, 0x00	; 0
    2ee0:	b4 fc       	sbrc	r11, 4
    2ee2:	0d c0       	rjmp	.+26     	; 0x2efe <dtoa_prf+0x1cc>
    2ee4:	b3 fc       	sbrc	r11, 3
    2ee6:	0b c0       	rjmp	.+22     	; 0x2efe <dtoa_prf+0x1cc>
    2ee8:	f6 01       	movw	r30, r12
    2eea:	32 2f       	mov	r19, r18
    2eec:	40 e2       	ldi	r20, 0x20	; 32
    2eee:	02 c0       	rjmp	.+4      	; 0x2ef4 <dtoa_prf+0x1c2>
    2ef0:	41 93       	st	Z+, r20
    2ef2:	31 50       	subi	r19, 0x01	; 1
    2ef4:	33 23       	and	r19, r19
    2ef6:	e1 f7       	brne	.-8      	; 0x2ef0 <dtoa_prf+0x1be>
    2ef8:	c2 0e       	add	r12, r18
    2efa:	d1 1c       	adc	r13, r1
    2efc:	01 c0       	rjmp	.+2      	; 0x2f00 <dtoa_prf+0x1ce>
    2efe:	32 2f       	mov	r19, r18
    2f00:	aa 23       	and	r26, r26
    2f02:	19 f0       	breq	.+6      	; 0x2f0a <dtoa_prf+0x1d8>
    2f04:	f6 01       	movw	r30, r12
    2f06:	a1 93       	st	Z+, r26
    2f08:	6f 01       	movw	r12, r30
    2f0a:	89 2b       	or	r24, r25
    2f0c:	11 f0       	breq	.+4      	; 0x2f12 <dtoa_prf+0x1e0>
    2f0e:	13 2f       	mov	r17, r19
    2f10:	0a c0       	rjmp	.+20     	; 0x2f26 <dtoa_prf+0x1f4>
    2f12:	f6 01       	movw	r30, r12
    2f14:	13 2f       	mov	r17, r19
    2f16:	80 e3       	ldi	r24, 0x30	; 48
    2f18:	02 c0       	rjmp	.+4      	; 0x2f1e <dtoa_prf+0x1ec>
    2f1a:	81 93       	st	Z+, r24
    2f1c:	11 50       	subi	r17, 0x01	; 1
    2f1e:	11 23       	and	r17, r17
    2f20:	e1 f7       	brne	.-8      	; 0x2f1a <dtoa_prf+0x1e8>
    2f22:	c3 0e       	add	r12, r19
    2f24:	d1 1c       	adc	r13, r1
    2f26:	09 2d       	mov	r16, r9
    2f28:	06 0f       	add	r16, r22
    2f2a:	ba 80       	ldd	r11, Y+2	; 0x02
    2f2c:	90 e1       	ldi	r25, 0x10	; 16
    2f2e:	89 2e       	mov	r8, r25
    2f30:	91 2c       	mov	r9, r1
    2f32:	8e 20       	and	r8, r14
    2f34:	9f 20       	and	r9, r15
    2f36:	e4 fe       	sbrs	r14, 4
    2f38:	04 c0       	rjmp	.+8      	; 0x2f42 <dtoa_prf+0x210>
    2f3a:	f1 e3       	ldi	r31, 0x31	; 49
    2f3c:	bf 16       	cp	r11, r31
    2f3e:	09 f4       	brne	.+2      	; 0x2f42 <dtoa_prf+0x210>
    2f40:	01 50       	subi	r16, 0x01	; 1
    2f42:	10 16       	cp	r1, r16
    2f44:	14 f0       	brlt	.+4      	; 0x2f4a <dtoa_prf+0x218>
    2f46:	01 e0       	ldi	r16, 0x01	; 1
    2f48:	03 c0       	rjmp	.+6      	; 0x2f50 <dtoa_prf+0x21e>
    2f4a:	09 30       	cpi	r16, 0x09	; 9
    2f4c:	08 f0       	brcs	.+2      	; 0x2f50 <dtoa_prf+0x21e>
    2f4e:	08 e0       	ldi	r16, 0x08	; 8
    2f50:	9b 01       	movw	r18, r22
    2f52:	77 ff       	sbrs	r23, 7
    2f54:	02 c0       	rjmp	.+4      	; 0x2f5a <dtoa_prf+0x228>
    2f56:	20 e0       	ldi	r18, 0x00	; 0
    2f58:	30 e0       	ldi	r19, 0x00	; 0
    2f5a:	cb 01       	movw	r24, r22
    2f5c:	01 96       	adiw	r24, 0x01	; 1
    2f5e:	82 1b       	sub	r24, r18
    2f60:	93 0b       	sbc	r25, r19
    2f62:	fe 01       	movw	r30, r28
    2f64:	31 96       	adiw	r30, 0x01	; 1
    2f66:	e8 0f       	add	r30, r24
    2f68:	f9 1f       	adc	r31, r25
    2f6a:	8e e2       	ldi	r24, 0x2E	; 46
    2f6c:	f8 2e       	mov	r15, r24
    2f6e:	3b 01       	movw	r6, r22
    2f70:	60 1a       	sub	r6, r16
    2f72:	71 08       	sbc	r7, r1
    2f74:	8a 2d       	mov	r24, r10
    2f76:	90 e0       	ldi	r25, 0x00	; 0
    2f78:	44 27       	eor	r20, r20
    2f7a:	55 27       	eor	r21, r21
    2f7c:	48 1b       	sub	r20, r24
    2f7e:	59 0b       	sbc	r21, r25
    2f80:	8f ef       	ldi	r24, 0xFF	; 255
    2f82:	2f 3f       	cpi	r18, 0xFF	; 255
    2f84:	38 07       	cpc	r19, r24
    2f86:	19 f4       	brne	.+6      	; 0x2f8e <dtoa_prf+0x25c>
    2f88:	d6 01       	movw	r26, r12
    2f8a:	fd 92       	st	X+, r15
    2f8c:	6d 01       	movw	r12, r26
    2f8e:	62 17       	cp	r22, r18
    2f90:	73 07       	cpc	r23, r19
    2f92:	2c f0       	brlt	.+10     	; 0x2f9e <dtoa_prf+0x26c>
    2f94:	62 16       	cp	r6, r18
    2f96:	73 06       	cpc	r7, r19
    2f98:	14 f4       	brge	.+4      	; 0x2f9e <dtoa_prf+0x26c>
    2f9a:	80 81       	ld	r24, Z
    2f9c:	01 c0       	rjmp	.+2      	; 0x2fa0 <dtoa_prf+0x26e>
    2f9e:	80 e3       	ldi	r24, 0x30	; 48
    2fa0:	21 50       	subi	r18, 0x01	; 1
    2fa2:	30 40       	sbci	r19, 0x00	; 0
    2fa4:	31 96       	adiw	r30, 0x01	; 1
    2fa6:	24 17       	cp	r18, r20
    2fa8:	35 07       	cpc	r19, r21
    2faa:	24 f0       	brlt	.+8      	; 0x2fb4 <dtoa_prf+0x282>
    2fac:	d6 01       	movw	r26, r12
    2fae:	8d 93       	st	X+, r24
    2fb0:	6d 01       	movw	r12, r26
    2fb2:	e6 cf       	rjmp	.-52     	; 0x2f80 <dtoa_prf+0x24e>
    2fb4:	26 17       	cp	r18, r22
    2fb6:	37 07       	cpc	r19, r23
    2fb8:	49 f4       	brne	.+18     	; 0x2fcc <dtoa_prf+0x29a>
    2fba:	b5 e3       	ldi	r27, 0x35	; 53
    2fbc:	bb 15       	cp	r27, r11
    2fbe:	28 f0       	brcs	.+10     	; 0x2fca <dtoa_prf+0x298>
    2fc0:	bb 16       	cp	r11, r27
    2fc2:	21 f4       	brne	.+8      	; 0x2fcc <dtoa_prf+0x29a>
    2fc4:	81 14       	cp	r8, r1
    2fc6:	91 04       	cpc	r9, r1
    2fc8:	09 f4       	brne	.+2      	; 0x2fcc <dtoa_prf+0x29a>
    2fca:	81 e3       	ldi	r24, 0x31	; 49
    2fcc:	f6 01       	movw	r30, r12
    2fce:	81 93       	st	Z+, r24
    2fd0:	d6 01       	movw	r26, r12
    2fd2:	81 2f       	mov	r24, r17
    2fd4:	90 e2       	ldi	r25, 0x20	; 32
    2fd6:	02 c0       	rjmp	.+4      	; 0x2fdc <dtoa_prf+0x2aa>
    2fd8:	9c 93       	st	X, r25
    2fda:	81 50       	subi	r24, 0x01	; 1
    2fdc:	11 96       	adiw	r26, 0x01	; 1
    2fde:	88 23       	and	r24, r24
    2fe0:	d9 f7       	brne	.-10     	; 0x2fd8 <dtoa_prf+0x2a6>
    2fe2:	e1 0f       	add	r30, r17
    2fe4:	f1 1d       	adc	r31, r1
    2fe6:	10 82       	st	Z, r1
    2fe8:	20 e0       	ldi	r18, 0x00	; 0
    2fea:	30 e0       	ldi	r19, 0x00	; 0
    2fec:	c9 01       	movw	r24, r18
    2fee:	29 96       	adiw	r28, 0x09	; 9
    2ff0:	ee e0       	ldi	r30, 0x0E	; 14
    2ff2:	0c 94 4f 16 	jmp	0x2c9e	; 0x2c9e <__epilogue_restores__+0x8>

00002ff6 <__ftoa_engine>:
    2ff6:	28 30       	cpi	r18, 0x08	; 8
    2ff8:	08 f0       	brcs	.+2      	; 0x2ffc <__ftoa_engine+0x6>
    2ffa:	27 e0       	ldi	r18, 0x07	; 7
    2ffc:	33 27       	eor	r19, r19
    2ffe:	da 01       	movw	r26, r20
    3000:	99 0f       	add	r25, r25
    3002:	31 1d       	adc	r19, r1
    3004:	87 fd       	sbrc	r24, 7
    3006:	91 60       	ori	r25, 0x01	; 1
    3008:	00 96       	adiw	r24, 0x00	; 0
    300a:	61 05       	cpc	r22, r1
    300c:	71 05       	cpc	r23, r1
    300e:	39 f4       	brne	.+14     	; 0x301e <__ftoa_engine+0x28>
    3010:	32 60       	ori	r19, 0x02	; 2
    3012:	2e 5f       	subi	r18, 0xFE	; 254
    3014:	3d 93       	st	X+, r19
    3016:	30 e3       	ldi	r19, 0x30	; 48
    3018:	2a 95       	dec	r18
    301a:	e1 f7       	brne	.-8      	; 0x3014 <__ftoa_engine+0x1e>
    301c:	08 95       	ret
    301e:	9f 3f       	cpi	r25, 0xFF	; 255
    3020:	30 f0       	brcs	.+12     	; 0x302e <__ftoa_engine+0x38>
    3022:	80 38       	cpi	r24, 0x80	; 128
    3024:	71 05       	cpc	r23, r1
    3026:	61 05       	cpc	r22, r1
    3028:	09 f0       	breq	.+2      	; 0x302c <__ftoa_engine+0x36>
    302a:	3c 5f       	subi	r19, 0xFC	; 252
    302c:	3c 5f       	subi	r19, 0xFC	; 252
    302e:	3d 93       	st	X+, r19
    3030:	91 30       	cpi	r25, 0x01	; 1
    3032:	08 f0       	brcs	.+2      	; 0x3036 <__ftoa_engine+0x40>
    3034:	80 68       	ori	r24, 0x80	; 128
    3036:	91 1d       	adc	r25, r1
    3038:	df 93       	push	r29
    303a:	cf 93       	push	r28
    303c:	1f 93       	push	r17
    303e:	0f 93       	push	r16
    3040:	ff 92       	push	r15
    3042:	ef 92       	push	r14
    3044:	19 2f       	mov	r17, r25
    3046:	98 7f       	andi	r25, 0xF8	; 248
    3048:	96 95       	lsr	r25
    304a:	e9 2f       	mov	r30, r25
    304c:	96 95       	lsr	r25
    304e:	96 95       	lsr	r25
    3050:	e9 0f       	add	r30, r25
    3052:	ff 27       	eor	r31, r31
    3054:	e2 55       	subi	r30, 0x52	; 82
    3056:	ff 4f       	sbci	r31, 0xFF	; 255
    3058:	99 27       	eor	r25, r25
    305a:	33 27       	eor	r19, r19
    305c:	ee 24       	eor	r14, r14
    305e:	ff 24       	eor	r15, r15
    3060:	a7 01       	movw	r20, r14
    3062:	e7 01       	movw	r28, r14
    3064:	05 90       	lpm	r0, Z+
    3066:	08 94       	sec
    3068:	07 94       	ror	r0
    306a:	28 f4       	brcc	.+10     	; 0x3076 <__ftoa_engine+0x80>
    306c:	36 0f       	add	r19, r22
    306e:	e7 1e       	adc	r14, r23
    3070:	f8 1e       	adc	r15, r24
    3072:	49 1f       	adc	r20, r25
    3074:	51 1d       	adc	r21, r1
    3076:	66 0f       	add	r22, r22
    3078:	77 1f       	adc	r23, r23
    307a:	88 1f       	adc	r24, r24
    307c:	99 1f       	adc	r25, r25
    307e:	06 94       	lsr	r0
    3080:	a1 f7       	brne	.-24     	; 0x306a <__ftoa_engine+0x74>
    3082:	05 90       	lpm	r0, Z+
    3084:	07 94       	ror	r0
    3086:	28 f4       	brcc	.+10     	; 0x3092 <__ftoa_engine+0x9c>
    3088:	e7 0e       	add	r14, r23
    308a:	f8 1e       	adc	r15, r24
    308c:	49 1f       	adc	r20, r25
    308e:	56 1f       	adc	r21, r22
    3090:	c1 1d       	adc	r28, r1
    3092:	77 0f       	add	r23, r23
    3094:	88 1f       	adc	r24, r24
    3096:	99 1f       	adc	r25, r25
    3098:	66 1f       	adc	r22, r22
    309a:	06 94       	lsr	r0
    309c:	a1 f7       	brne	.-24     	; 0x3086 <__ftoa_engine+0x90>
    309e:	05 90       	lpm	r0, Z+
    30a0:	07 94       	ror	r0
    30a2:	28 f4       	brcc	.+10     	; 0x30ae <__ftoa_engine+0xb8>
    30a4:	f8 0e       	add	r15, r24
    30a6:	49 1f       	adc	r20, r25
    30a8:	56 1f       	adc	r21, r22
    30aa:	c7 1f       	adc	r28, r23
    30ac:	d1 1d       	adc	r29, r1
    30ae:	88 0f       	add	r24, r24
    30b0:	99 1f       	adc	r25, r25
    30b2:	66 1f       	adc	r22, r22
    30b4:	77 1f       	adc	r23, r23
    30b6:	06 94       	lsr	r0
    30b8:	a1 f7       	brne	.-24     	; 0x30a2 <__ftoa_engine+0xac>
    30ba:	05 90       	lpm	r0, Z+
    30bc:	07 94       	ror	r0
    30be:	20 f4       	brcc	.+8      	; 0x30c8 <__ftoa_engine+0xd2>
    30c0:	49 0f       	add	r20, r25
    30c2:	56 1f       	adc	r21, r22
    30c4:	c7 1f       	adc	r28, r23
    30c6:	d8 1f       	adc	r29, r24
    30c8:	99 0f       	add	r25, r25
    30ca:	66 1f       	adc	r22, r22
    30cc:	77 1f       	adc	r23, r23
    30ce:	88 1f       	adc	r24, r24
    30d0:	06 94       	lsr	r0
    30d2:	a9 f7       	brne	.-22     	; 0x30be <__ftoa_engine+0xc8>
    30d4:	84 91       	lpm	r24, Z+
    30d6:	10 95       	com	r17
    30d8:	17 70       	andi	r17, 0x07	; 7
    30da:	41 f0       	breq	.+16     	; 0x30ec <__ftoa_engine+0xf6>
    30dc:	d6 95       	lsr	r29
    30de:	c7 95       	ror	r28
    30e0:	57 95       	ror	r21
    30e2:	47 95       	ror	r20
    30e4:	f7 94       	ror	r15
    30e6:	e7 94       	ror	r14
    30e8:	1a 95       	dec	r17
    30ea:	c1 f7       	brne	.-16     	; 0x30dc <__ftoa_engine+0xe6>
    30ec:	e4 e5       	ldi	r30, 0x54	; 84
    30ee:	f0 e0       	ldi	r31, 0x00	; 0
    30f0:	68 94       	set
    30f2:	15 90       	lpm	r1, Z+
    30f4:	15 91       	lpm	r17, Z+
    30f6:	35 91       	lpm	r19, Z+
    30f8:	65 91       	lpm	r22, Z+
    30fa:	95 91       	lpm	r25, Z+
    30fc:	05 90       	lpm	r0, Z+
    30fe:	7f e2       	ldi	r23, 0x2F	; 47
    3100:	73 95       	inc	r23
    3102:	e1 18       	sub	r14, r1
    3104:	f1 0a       	sbc	r15, r17
    3106:	43 0b       	sbc	r20, r19
    3108:	56 0b       	sbc	r21, r22
    310a:	c9 0b       	sbc	r28, r25
    310c:	d0 09       	sbc	r29, r0
    310e:	c0 f7       	brcc	.-16     	; 0x3100 <__ftoa_engine+0x10a>
    3110:	e1 0c       	add	r14, r1
    3112:	f1 1e       	adc	r15, r17
    3114:	43 1f       	adc	r20, r19
    3116:	56 1f       	adc	r21, r22
    3118:	c9 1f       	adc	r28, r25
    311a:	d0 1d       	adc	r29, r0
    311c:	7e f4       	brtc	.+30     	; 0x313c <__ftoa_engine+0x146>
    311e:	70 33       	cpi	r23, 0x30	; 48
    3120:	11 f4       	brne	.+4      	; 0x3126 <__ftoa_engine+0x130>
    3122:	8a 95       	dec	r24
    3124:	e6 cf       	rjmp	.-52     	; 0x30f2 <__ftoa_engine+0xfc>
    3126:	e8 94       	clt
    3128:	01 50       	subi	r16, 0x01	; 1
    312a:	30 f0       	brcs	.+12     	; 0x3138 <__ftoa_engine+0x142>
    312c:	08 0f       	add	r16, r24
    312e:	0a f4       	brpl	.+2      	; 0x3132 <__ftoa_engine+0x13c>
    3130:	00 27       	eor	r16, r16
    3132:	02 17       	cp	r16, r18
    3134:	08 f4       	brcc	.+2      	; 0x3138 <__ftoa_engine+0x142>
    3136:	20 2f       	mov	r18, r16
    3138:	23 95       	inc	r18
    313a:	02 2f       	mov	r16, r18
    313c:	7a 33       	cpi	r23, 0x3A	; 58
    313e:	28 f0       	brcs	.+10     	; 0x314a <__ftoa_engine+0x154>
    3140:	79 e3       	ldi	r23, 0x39	; 57
    3142:	7d 93       	st	X+, r23
    3144:	2a 95       	dec	r18
    3146:	e9 f7       	brne	.-6      	; 0x3142 <__ftoa_engine+0x14c>
    3148:	10 c0       	rjmp	.+32     	; 0x316a <__ftoa_engine+0x174>
    314a:	7d 93       	st	X+, r23
    314c:	2a 95       	dec	r18
    314e:	89 f6       	brne	.-94     	; 0x30f2 <__ftoa_engine+0xfc>
    3150:	06 94       	lsr	r0
    3152:	97 95       	ror	r25
    3154:	67 95       	ror	r22
    3156:	37 95       	ror	r19
    3158:	17 95       	ror	r17
    315a:	17 94       	ror	r1
    315c:	e1 18       	sub	r14, r1
    315e:	f1 0a       	sbc	r15, r17
    3160:	43 0b       	sbc	r20, r19
    3162:	56 0b       	sbc	r21, r22
    3164:	c9 0b       	sbc	r28, r25
    3166:	d0 09       	sbc	r29, r0
    3168:	98 f0       	brcs	.+38     	; 0x3190 <__ftoa_engine+0x19a>
    316a:	23 95       	inc	r18
    316c:	7e 91       	ld	r23, -X
    316e:	73 95       	inc	r23
    3170:	7a 33       	cpi	r23, 0x3A	; 58
    3172:	08 f0       	brcs	.+2      	; 0x3176 <__ftoa_engine+0x180>
    3174:	70 e3       	ldi	r23, 0x30	; 48
    3176:	7c 93       	st	X, r23
    3178:	20 13       	cpse	r18, r16
    317a:	b8 f7       	brcc	.-18     	; 0x316a <__ftoa_engine+0x174>
    317c:	7e 91       	ld	r23, -X
    317e:	70 61       	ori	r23, 0x10	; 16
    3180:	7d 93       	st	X+, r23
    3182:	30 f0       	brcs	.+12     	; 0x3190 <__ftoa_engine+0x19a>
    3184:	83 95       	inc	r24
    3186:	71 e3       	ldi	r23, 0x31	; 49
    3188:	7d 93       	st	X+, r23
    318a:	70 e3       	ldi	r23, 0x30	; 48
    318c:	2a 95       	dec	r18
    318e:	e1 f7       	brne	.-8      	; 0x3188 <__ftoa_engine+0x192>
    3190:	11 24       	eor	r1, r1
    3192:	ef 90       	pop	r14
    3194:	ff 90       	pop	r15
    3196:	0f 91       	pop	r16
    3198:	1f 91       	pop	r17
    319a:	cf 91       	pop	r28
    319c:	df 91       	pop	r29
    319e:	99 27       	eor	r25, r25
    31a0:	87 fd       	sbrc	r24, 7
    31a2:	90 95       	com	r25
    31a4:	08 95       	ret

000031a6 <_exit>:
    31a6:	f8 94       	cli

000031a8 <__stop_program>:
    31a8:	ff cf       	rjmp	.-2      	; 0x31a8 <__stop_program>
